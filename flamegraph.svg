<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1878" onload="init(evt)" viewBox="0 0 1200 1878" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1878" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1861.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1861.00"> </text><svg id="frames" x="10" width="1180" total_samples="7505895140"><g><title>[unknown] (4,011,961 samples, 0.05%)</title><rect x="0.0000%" y="1797" width="0.0535%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="4011961"/><text x="0.2500%" y="1807.50"></text></g><g><title>malloc (4,011,961 samples, 0.05%)</title><rect x="0.0000%" y="1781" width="0.0535%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="4011961"/><text x="0.2500%" y="1791.50"></text></g><g><title>_int_malloc (4,011,961 samples, 0.05%)</title><rect x="0.0000%" y="1765" width="0.0535%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="4011961"/><text x="0.2500%" y="1775.50"></text></g><g><title>malloc (4,011,961 samples, 0.05%)</title><rect x="0.0000%" y="1749" width="0.0535%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="4011961"/><text x="0.2500%" y="1759.50"></text></g><g><title>malloc_consolidate (4,011,961 samples, 0.05%)</title><rect x="0.0000%" y="1733" width="0.0535%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="4011961"/><text x="0.2500%" y="1743.50"></text></g><g><title>[unknown] (4,011,961 samples, 0.05%)</title><rect x="0.0000%" y="1717" width="0.0535%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="4011961"/><text x="0.2500%" y="1727.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,681,218 samples, 0.06%)</title><rect x="0.1137%" y="1493" width="0.0624%" height="15" fill="rgb(207,160,47)" fg:x="8534722" fg:w="4681218"/><text x="0.3637%" y="1503.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::read (4,681,218 samples, 0.06%)</title><rect x="0.1137%" y="1477" width="0.0624%" height="15" fill="rgb(228,23,34)" fg:x="8534722" fg:w="4681218"/><text x="0.3637%" y="1487.50"></text></g><g><title>core::ptr::read (4,681,218 samples, 0.06%)</title><rect x="0.1137%" y="1461" width="0.0624%" height="15" fill="rgb(218,30,26)" fg:x="8534722" fg:w="4681218"/><text x="0.3637%" y="1471.50"></text></g><g><title>__memmove_avx512_unaligned_erms (4,681,218 samples, 0.06%)</title><rect x="0.1137%" y="1445" width="0.0624%" height="15" fill="rgb(220,122,19)" fg:x="8534722" fg:w="4681218"/><text x="0.3637%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3,680,342 samples, 0.05%)</title><rect x="0.1761%" y="1445" width="0.0490%" height="15" fill="rgb(250,228,42)" fg:x="13215940" fg:w="3680342"/><text x="0.4261%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (3,680,342 samples, 0.05%)</title><rect x="0.1761%" y="1429" width="0.0490%" height="15" fill="rgb(240,193,28)" fg:x="13215940" fg:w="3680342"/><text x="0.4261%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8,684,899 samples, 0.12%)</title><rect x="0.2867%" y="1365" width="0.1157%" height="15" fill="rgb(216,20,37)" fg:x="21521155" fg:w="8684899"/><text x="0.5367%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8,684,899 samples, 0.12%)</title><rect x="0.2867%" y="1349" width="0.1157%" height="15" fill="rgb(206,188,39)" fg:x="21521155" fg:w="8684899"/><text x="0.5367%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (8,684,899 samples, 0.12%)</title><rect x="0.2867%" y="1333" width="0.1157%" height="15" fill="rgb(217,207,13)" fg:x="21521155" fg:w="8684899"/><text x="0.5367%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (8,684,899 samples, 0.12%)</title><rect x="0.2867%" y="1317" width="0.1157%" height="15" fill="rgb(231,73,38)" fg:x="21521155" fg:w="8684899"/><text x="0.5367%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8,684,899 samples, 0.12%)</title><rect x="0.2867%" y="1301" width="0.1157%" height="15" fill="rgb(225,20,46)" fg:x="21521155" fg:w="8684899"/><text x="0.5367%" y="1311.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8,684,899 samples, 0.12%)</title><rect x="0.2867%" y="1285" width="0.1157%" height="15" fill="rgb(210,31,41)" fg:x="21521155" fg:w="8684899"/><text x="0.5367%" y="1295.50"></text></g><g><title>alloc::alloc::alloc (8,684,899 samples, 0.12%)</title><rect x="0.2867%" y="1269" width="0.1157%" height="15" fill="rgb(221,200,47)" fg:x="21521155" fg:w="8684899"/><text x="0.5367%" y="1279.50"></text></g><g><title>malloc (4,093,208 samples, 0.05%)</title><rect x="0.3479%" y="1253" width="0.0545%" height="15" fill="rgb(226,26,5)" fg:x="26112846" fg:w="4093208"/><text x="0.5979%" y="1263.50"></text></g><g><title>&lt;searchclient_rust::state::State as core::clone::Clone&gt;::clone (25,967,994 samples, 0.35%)</title><rect x="0.1761%" y="1477" width="0.3460%" height="15" fill="rgb(249,33,26)" fg:x="13215940" fg:w="25967994"/><text x="0.4261%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (25,967,994 samples, 0.35%)</title><rect x="0.1761%" y="1461" width="0.3460%" height="15" fill="rgb(235,183,28)" fg:x="13215940" fg:w="25967994"/><text x="0.4261%" y="1471.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (22,287,652 samples, 0.30%)</title><rect x="0.2251%" y="1445" width="0.2969%" height="15" fill="rgb(221,5,38)" fg:x="16896282" fg:w="22287652"/><text x="0.4751%" y="1455.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (22,287,652 samples, 0.30%)</title><rect x="0.2251%" y="1429" width="0.2969%" height="15" fill="rgb(247,18,42)" fg:x="16896282" fg:w="22287652"/><text x="0.4751%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17,662,779 samples, 0.24%)</title><rect x="0.2867%" y="1413" width="0.2353%" height="15" fill="rgb(241,131,45)" fg:x="21521155" fg:w="17662779"/><text x="0.5367%" y="1423.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17,662,779 samples, 0.24%)</title><rect x="0.2867%" y="1397" width="0.2353%" height="15" fill="rgb(249,31,29)" fg:x="21521155" fg:w="17662779"/><text x="0.5367%" y="1407.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (17,662,779 samples, 0.24%)</title><rect x="0.2867%" y="1381" width="0.2353%" height="15" fill="rgb(225,111,53)" fg:x="21521155" fg:w="17662779"/><text x="0.5367%" y="1391.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (8,977,880 samples, 0.12%)</title><rect x="0.4024%" y="1365" width="0.1196%" height="15" fill="rgb(238,160,17)" fg:x="30206054" fg:w="8977880"/><text x="0.6524%" y="1375.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8,977,880 samples, 0.12%)</title><rect x="0.4024%" y="1349" width="0.1196%" height="15" fill="rgb(214,148,48)" fg:x="30206054" fg:w="8977880"/><text x="0.6524%" y="1359.50"></text></g><g><title>__memmove_avx512_unaligned_erms (8,977,880 samples, 0.12%)</title><rect x="0.4024%" y="1333" width="0.1196%" height="15" fill="rgb(232,36,49)" fg:x="30206054" fg:w="8977880"/><text x="0.6524%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4,293,335 samples, 0.06%)</title><rect x="0.6843%" y="1461" width="0.0572%" height="15" fill="rgb(209,103,24)" fg:x="51366506" fg:w="4293335"/><text x="0.9343%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (4,293,335 samples, 0.06%)</title><rect x="0.6843%" y="1445" width="0.0572%" height="15" fill="rgb(229,88,8)" fg:x="51366506" fg:w="4293335"/><text x="0.9343%" y="1455.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,952,702 samples, 0.05%)</title><rect x="0.7415%" y="1461" width="0.0527%" height="15" fill="rgb(213,181,19)" fg:x="55659841" fg:w="3952702"/><text x="0.9915%" y="1471.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (3,952,702 samples, 0.05%)</title><rect x="0.7415%" y="1445" width="0.0527%" height="15" fill="rgb(254,191,54)" fg:x="55659841" fg:w="3952702"/><text x="0.9915%" y="1455.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4,230,614 samples, 0.06%)</title><rect x="0.9535%" y="1365" width="0.0564%" height="15" fill="rgb(241,83,37)" fg:x="71569141" fg:w="4230614"/><text x="1.2035%" y="1375.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (24,614,475 samples, 0.33%)</title><rect x="0.8561%" y="1381" width="0.3279%" height="15" fill="rgb(233,36,39)" fg:x="64260939" fg:w="24614475"/><text x="1.1061%" y="1391.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (13,075,659 samples, 0.17%)</title><rect x="1.0099%" y="1365" width="0.1742%" height="15" fill="rgb(226,3,54)" fg:x="75799755" fg:w="13075659"/><text x="1.2599%" y="1375.50"></text></g><g><title>searchclient_rust::state::State::calculate_hash (66,855,120 samples, 0.89%)</title><rect x="0.5220%" y="1477" width="0.8907%" height="15" fill="rgb(245,192,40)" fg:x="39183934" fg:w="66855120"/><text x="0.7720%" y="1487.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (46,426,511 samples, 0.62%)</title><rect x="0.7942%" y="1461" width="0.6185%" height="15" fill="rgb(238,167,29)" fg:x="59612543" fg:w="46426511"/><text x="1.0442%" y="1471.50"></text></g><g><title>core::hash::Hasher::write_u32 (46,426,511 samples, 0.62%)</title><rect x="0.7942%" y="1445" width="0.6185%" height="15" fill="rgb(232,182,51)" fg:x="59612543" fg:w="46426511"/><text x="1.0442%" y="1455.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (46,426,511 samples, 0.62%)</title><rect x="0.7942%" y="1429" width="0.6185%" height="15" fill="rgb(231,60,39)" fg:x="59612543" fg:w="46426511"/><text x="1.0442%" y="1439.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (46,426,511 samples, 0.62%)</title><rect x="0.7942%" y="1413" width="0.6185%" height="15" fill="rgb(208,69,12)" fg:x="59612543" fg:w="46426511"/><text x="1.0442%" y="1423.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (46,426,511 samples, 0.62%)</title><rect x="0.7942%" y="1397" width="0.6185%" height="15" fill="rgb(235,93,37)" fg:x="59612543" fg:w="46426511"/><text x="1.0442%" y="1407.50"></text></g><g><title>core::hash::sip::u8to64_le (17,163,640 samples, 0.23%)</title><rect x="1.1841%" y="1381" width="0.2287%" height="15" fill="rgb(213,116,39)" fg:x="88875414" fg:w="17163640"/><text x="1.4341%" y="1391.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (3,751,133 samples, 0.05%)</title><rect x="1.4127%" y="1429" width="0.0500%" height="15" fill="rgb(222,207,29)" fg:x="106039054" fg:w="3751133"/><text x="1.6627%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (3,751,133 samples, 0.05%)</title><rect x="1.4127%" y="1413" width="0.0500%" height="15" fill="rgb(206,96,30)" fg:x="106039054" fg:w="3751133"/><text x="1.6627%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (3,751,133 samples, 0.05%)</title><rect x="1.4127%" y="1397" width="0.0500%" height="15" fill="rgb(218,138,4)" fg:x="106039054" fg:w="3751133"/><text x="1.6627%" y="1407.50"></text></g><g><title>hashbrown::control::tag::Tag::full (3,751,133 samples, 0.05%)</title><rect x="1.4127%" y="1381" width="0.0500%" height="15" fill="rgb(250,191,14)" fg:x="106039054" fg:w="3751133"/><text x="1.6627%" y="1391.50"></text></g><g><title>hashbrown::map::make_hash (3,974,795 samples, 0.05%)</title><rect x="1.4627%" y="1429" width="0.0530%" height="15" fill="rgb(239,60,40)" fg:x="109790187" fg:w="3974795"/><text x="1.7127%" y="1439.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3,974,795 samples, 0.05%)</title><rect x="1.4627%" y="1413" width="0.0530%" height="15" fill="rgb(206,27,48)" fg:x="109790187" fg:w="3974795"/><text x="1.7127%" y="1423.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (3,974,795 samples, 0.05%)</title><rect x="1.4627%" y="1397" width="0.0530%" height="15" fill="rgb(225,35,8)" fg:x="109790187" fg:w="3974795"/><text x="1.7127%" y="1407.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3,974,795 samples, 0.05%)</title><rect x="1.4627%" y="1381" width="0.0530%" height="15" fill="rgb(250,213,24)" fg:x="109790187" fg:w="3974795"/><text x="1.7127%" y="1391.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3,974,795 samples, 0.05%)</title><rect x="1.4627%" y="1365" width="0.0530%" height="15" fill="rgb(247,123,22)" fg:x="109790187" fg:w="3974795"/><text x="1.7127%" y="1375.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3,974,795 samples, 0.05%)</title><rect x="1.4627%" y="1349" width="0.0530%" height="15" fill="rgb(231,138,38)" fg:x="109790187" fg:w="3974795"/><text x="1.7127%" y="1359.50"></text></g><g><title>&lt;searchclient_rust::frontier::FrontierBFS as searchclient_rust::frontier::Frontier&gt;::add (107,979,430 samples, 1.44%)</title><rect x="0.1761%" y="1493" width="1.4386%" height="15" fill="rgb(231,145,46)" fg:x="13215940" fg:w="107979430"/><text x="0.4261%" y="1503.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (15,156,316 samples, 0.20%)</title><rect x="1.4127%" y="1477" width="0.2019%" height="15" fill="rgb(251,118,11)" fg:x="106039054" fg:w="15156316"/><text x="1.6627%" y="1487.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (15,156,316 samples, 0.20%)</title><rect x="1.4127%" y="1461" width="0.2019%" height="15" fill="rgb(217,147,25)" fg:x="106039054" fg:w="15156316"/><text x="1.6627%" y="1471.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (15,156,316 samples, 0.20%)</title><rect x="1.4127%" y="1445" width="0.2019%" height="15" fill="rgb(247,81,37)" fg:x="106039054" fg:w="15156316"/><text x="1.6627%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (7,430,388 samples, 0.10%)</title><rect x="1.5157%" y="1429" width="0.0990%" height="15" fill="rgb(209,12,38)" fg:x="113764982" fg:w="7430388"/><text x="1.7657%" y="1439.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (7,430,388 samples, 0.10%)</title><rect x="1.5157%" y="1413" width="0.0990%" height="15" fill="rgb(227,1,9)" fg:x="113764982" fg:w="7430388"/><text x="1.7657%" y="1423.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (7,430,388 samples, 0.10%)</title><rect x="1.5157%" y="1397" width="0.0990%" height="15" fill="rgb(248,47,43)" fg:x="113764982" fg:w="7430388"/><text x="1.7657%" y="1407.50"></text></g><g><title>core::ptr::write (7,430,388 samples, 0.10%)</title><rect x="1.5157%" y="1381" width="0.0990%" height="15" fill="rgb(221,10,30)" fg:x="113764982" fg:w="7430388"/><text x="1.7657%" y="1391.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16,369,925 samples, 0.22%)</title><rect x="2.4392%" y="1461" width="0.2181%" height="15" fill="rgb(210,229,1)" fg:x="183083730" fg:w="16369925"/><text x="2.6892%" y="1471.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (11,828,239 samples, 0.16%)</title><rect x="2.4997%" y="1445" width="0.1576%" height="15" fill="rgb(222,148,37)" fg:x="187625416" fg:w="11828239"/><text x="2.7497%" y="1455.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (17,363,467 samples, 0.23%)</title><rect x="2.6573%" y="1461" width="0.2313%" height="15" fill="rgb(234,67,33)" fg:x="199453655" fg:w="17363467"/><text x="2.9073%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (17,363,467 samples, 0.23%)</title><rect x="2.6573%" y="1445" width="0.2313%" height="15" fill="rgb(247,98,35)" fg:x="199453655" fg:w="17363467"/><text x="2.9073%" y="1455.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (17,363,467 samples, 0.23%)</title><rect x="2.6573%" y="1429" width="0.2313%" height="15" fill="rgb(247,138,52)" fg:x="199453655" fg:w="17363467"/><text x="2.9073%" y="1439.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (78,701,546 samples, 1.05%)</title><rect x="3.9079%" y="1365" width="1.0485%" height="15" fill="rgb(213,79,30)" fg:x="293325560" fg:w="78701546"/><text x="4.1579%" y="1375.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (192,447,532 samples, 2.56%)</title><rect x="3.4830%" y="1381" width="2.5640%" height="15" fill="rgb(246,177,23)" fg:x="261431950" fg:w="192447532"/><text x="3.7330%" y="1391.50">&lt;c..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (81,852,376 samples, 1.09%)</title><rect x="4.9565%" y="1365" width="1.0905%" height="15" fill="rgb(230,62,27)" fg:x="372027106" fg:w="81852376"/><text x="5.2065%" y="1375.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (456,019,713 samples, 6.08%)</title><rect x="2.8886%" y="1429" width="6.0755%" height="15" fill="rgb(216,154,8)" fg:x="216817122" fg:w="456019713"/><text x="3.1386%" y="1439.50">&lt;std::ha..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (456,019,713 samples, 6.08%)</title><rect x="2.8886%" y="1413" width="6.0755%" height="15" fill="rgb(244,35,45)" fg:x="216817122" fg:w="456019713"/><text x="3.1386%" y="1423.50">&lt;core::h..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (456,019,713 samples, 6.08%)</title><rect x="2.8886%" y="1397" width="6.0755%" height="15" fill="rgb(251,115,12)" fg:x="216817122" fg:w="456019713"/><text x="3.1386%" y="1407.50">&lt;core::h..</text></g><g><title>core::hash::sip::u8to64_le (218,957,353 samples, 2.92%)</title><rect x="6.0470%" y="1381" width="2.9171%" height="15" fill="rgb(240,54,50)" fg:x="453879482" fg:w="218957353"/><text x="6.2970%" y="1391.50">co..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (496,577,259 samples, 6.62%)</title><rect x="2.8886%" y="1461" width="6.6158%" height="15" fill="rgb(233,84,52)" fg:x="216817122" fg:w="496577259"/><text x="3.1386%" y="1471.50">core::has..</text></g><g><title>core::hash::Hasher::write_u32 (496,577,259 samples, 6.62%)</title><rect x="2.8886%" y="1445" width="6.6158%" height="15" fill="rgb(207,117,47)" fg:x="216817122" fg:w="496577259"/><text x="3.1386%" y="1455.50">core::has..</text></g><g><title>core::num::&lt;impl u32&gt;::to_ne_bytes (40,557,546 samples, 0.54%)</title><rect x="8.9641%" y="1429" width="0.5403%" height="15" fill="rgb(249,43,39)" fg:x="672836835" fg:w="40557546"/><text x="9.2141%" y="1439.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3,668,909 samples, 0.05%)</title><rect x="9.5045%" y="1429" width="0.0489%" height="15" fill="rgb(209,38,44)" fg:x="713394381" fg:w="3668909"/><text x="9.7545%" y="1439.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3,668,909 samples, 0.05%)</title><rect x="9.5045%" y="1413" width="0.0489%" height="15" fill="rgb(236,212,23)" fg:x="713394381" fg:w="3668909"/><text x="9.7545%" y="1423.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3,668,909 samples, 0.05%)</title><rect x="9.5045%" y="1397" width="0.0489%" height="15" fill="rgb(242,79,21)" fg:x="713394381" fg:w="3668909"/><text x="9.7545%" y="1407.50"></text></g><g><title>searchclient_rust::state::State::calculate_hash (595,776,447 samples, 7.94%)</title><rect x="1.6656%" y="1477" width="7.9374%" height="15" fill="rgb(211,96,35)" fg:x="125017544" fg:w="595776447"/><text x="1.9156%" y="1487.50">searchclien..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (7,399,610 samples, 0.10%)</title><rect x="9.5045%" y="1461" width="0.0986%" height="15" fill="rgb(253,215,40)" fg:x="713394381" fg:w="7399610"/><text x="9.7545%" y="1471.50"></text></g><g><title>core::hash::Hasher::write_usize (7,399,610 samples, 0.10%)</title><rect x="9.5045%" y="1445" width="0.0986%" height="15" fill="rgb(211,81,21)" fg:x="713394381" fg:w="7399610"/><text x="9.7545%" y="1455.50"></text></g><g><title>core::num::&lt;impl usize&gt;::to_ne_bytes (3,730,701 samples, 0.05%)</title><rect x="9.5533%" y="1429" width="0.0497%" height="15" fill="rgb(208,190,38)" fg:x="717063290" fg:w="3730701"/><text x="9.8033%" y="1439.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (11,953,478 samples, 0.16%)</title><rect x="9.6528%" y="1381" width="0.1593%" height="15" fill="rgb(235,213,38)" fg:x="724532702" fg:w="11953478"/><text x="9.9028%" y="1391.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (11,953,478 samples, 0.16%)</title><rect x="9.6528%" y="1365" width="0.1593%" height="15" fill="rgb(237,122,38)" fg:x="724532702" fg:w="11953478"/><text x="9.9028%" y="1375.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (11,953,478 samples, 0.16%)</title><rect x="9.6528%" y="1349" width="0.1593%" height="15" fill="rgb(244,218,35)" fg:x="724532702" fg:w="11953478"/><text x="9.9028%" y="1359.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7,766,089 samples, 0.10%)</title><rect x="9.7086%" y="1333" width="0.1035%" height="15" fill="rgb(240,68,47)" fg:x="728720091" fg:w="7766089"/><text x="9.9586%" y="1343.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3,779,339 samples, 0.05%)</title><rect x="9.7618%" y="1317" width="0.0504%" height="15" fill="rgb(210,16,53)" fg:x="732706841" fg:w="3779339"/><text x="10.0118%" y="1327.50"></text></g><g><title>hashbrown::map::make_hash (16,721,199 samples, 0.22%)</title><rect x="9.6528%" y="1413" width="0.2228%" height="15" fill="rgb(235,124,12)" fg:x="724532702" fg:w="16721199"/><text x="9.9028%" y="1423.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16,721,199 samples, 0.22%)</title><rect x="9.6528%" y="1397" width="0.2228%" height="15" fill="rgb(224,169,11)" fg:x="724532702" fg:w="16721199"/><text x="9.9028%" y="1407.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (4,767,721 samples, 0.06%)</title><rect x="9.8121%" y="1381" width="0.0635%" height="15" fill="rgb(250,166,2)" fg:x="736486180" fg:w="4767721"/><text x="10.0621%" y="1391.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (4,767,721 samples, 0.06%)</title><rect x="9.8121%" y="1365" width="0.0635%" height="15" fill="rgb(242,216,29)" fg:x="736486180" fg:w="4767721"/><text x="10.0621%" y="1375.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (4,767,721 samples, 0.06%)</title><rect x="9.8121%" y="1349" width="0.0635%" height="15" fill="rgb(230,116,27)" fg:x="736486180" fg:w="4767721"/><text x="10.0621%" y="1359.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (4,767,721 samples, 0.06%)</title><rect x="9.8121%" y="1333" width="0.0635%" height="15" fill="rgb(228,99,48)" fg:x="736486180" fg:w="4767721"/><text x="10.0621%" y="1343.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (8,146,266 samples, 0.11%)</title><rect x="9.9317%" y="1365" width="0.1085%" height="15" fill="rgb(253,11,6)" fg:x="745464612" fg:w="8146266"/><text x="10.1817%" y="1375.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (8,146,266 samples, 0.11%)</title><rect x="9.9317%" y="1349" width="0.1085%" height="15" fill="rgb(247,143,39)" fg:x="745464612" fg:w="8146266"/><text x="10.1817%" y="1359.50"></text></g><g><title>core::intrinsics::likely (63,760,151 samples, 0.85%)</title><rect x="10.0403%" y="1365" width="0.8495%" height="15" fill="rgb(236,97,10)" fg:x="753610878" fg:w="63760151"/><text x="10.2903%" y="1375.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_empty (4,175,179 samples, 0.06%)</title><rect x="10.8897%" y="1365" width="0.0556%" height="15" fill="rgb(233,208,19)" fg:x="817371029" fg:w="4175179"/><text x="11.1397%" y="1375.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (4,175,179 samples, 0.06%)</title><rect x="10.8897%" y="1349" width="0.0556%" height="15" fill="rgb(216,164,2)" fg:x="817371029" fg:w="4175179"/><text x="11.1397%" y="1359.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4,175,179 samples, 0.06%)</title><rect x="10.8897%" y="1333" width="0.0556%" height="15" fill="rgb(220,129,5)" fg:x="817371029" fg:w="4175179"/><text x="11.1397%" y="1343.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (34,462,130 samples, 0.46%)</title><rect x="10.9453%" y="1365" width="0.4591%" height="15" fill="rgb(242,17,10)" fg:x="821546208" fg:w="34462130"/><text x="11.1953%" y="1375.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (34,462,130 samples, 0.46%)</title><rect x="10.9453%" y="1349" width="0.4591%" height="15" fill="rgb(242,107,0)" fg:x="821546208" fg:w="34462130"/><text x="11.1953%" y="1359.50"></text></g><g><title>&lt;searchclient_rust::frontier::FrontierBFS as searchclient_rust::frontier::Frontier&gt;::contains (739,483,215 samples, 9.85%)</title><rect x="1.6147%" y="1493" width="9.8520%" height="15" fill="rgb(251,28,31)" fg:x="121195370" fg:w="739483215"/><text x="1.8647%" y="1503.50">&lt;searchclient_..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (139,884,594 samples, 1.86%)</title><rect x="9.6030%" y="1477" width="1.8637%" height="15" fill="rgb(233,223,10)" fg:x="720793991" fg:w="139884594"/><text x="9.8530%" y="1487.50">s..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (139,884,594 samples, 1.86%)</title><rect x="9.6030%" y="1461" width="1.8637%" height="15" fill="rgb(215,21,27)" fg:x="720793991" fg:w="139884594"/><text x="9.8530%" y="1471.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (139,884,594 samples, 1.86%)</title><rect x="9.6030%" y="1445" width="1.8637%" height="15" fill="rgb(232,23,21)" fg:x="720793991" fg:w="139884594"/><text x="9.8530%" y="1455.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (139,884,594 samples, 1.86%)</title><rect x="9.6030%" y="1429" width="1.8637%" height="15" fill="rgb(244,5,23)" fg:x="720793991" fg:w="139884594"/><text x="9.8530%" y="1439.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (119,424,684 samples, 1.59%)</title><rect x="9.8756%" y="1413" width="1.5911%" height="15" fill="rgb(226,81,46)" fg:x="741253901" fg:w="119424684"/><text x="10.1256%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (119,424,684 samples, 1.59%)</title><rect x="9.8756%" y="1397" width="1.5911%" height="15" fill="rgb(247,70,30)" fg:x="741253901" fg:w="119424684"/><text x="10.1256%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (119,424,684 samples, 1.59%)</title><rect x="9.8756%" y="1381" width="1.5911%" height="15" fill="rgb(212,68,19)" fg:x="741253901" fg:w="119424684"/><text x="10.1256%" y="1391.50"></text></g><g><title>hashbrown::control::tag::Tag::full (4,670,247 samples, 0.06%)</title><rect x="11.4045%" y="1365" width="0.0622%" height="15" fill="rgb(240,187,13)" fg:x="856008338" fg:w="4670247"/><text x="11.6545%" y="1375.50"></text></g><g><title>&lt;searchclient_rust::frontier::FrontierBFS as searchclient_rust::frontier::Frontier&gt;::is_empty (4,163,822 samples, 0.06%)</title><rect x="11.4667%" y="1493" width="0.0555%" height="15" fill="rgb(223,113,26)" fg:x="860678585" fg:w="4163822"/><text x="11.7167%" y="1503.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::is_empty (4,163,822 samples, 0.06%)</title><rect x="11.4667%" y="1477" width="0.0555%" height="15" fill="rgb(206,192,2)" fg:x="860678585" fg:w="4163822"/><text x="11.7167%" y="1487.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (22,865,749 samples, 0.30%)</title><rect x="11.5222%" y="1477" width="0.3046%" height="15" fill="rgb(241,108,4)" fg:x="864842423" fg:w="22865749"/><text x="11.7722%" y="1487.50"></text></g><g><title>__memmove_avx512_unaligned_erms (22,865,749 samples, 0.30%)</title><rect x="11.5222%" y="1461" width="0.3046%" height="15" fill="rgb(247,173,49)" fg:x="864842423" fg:w="22865749"/><text x="11.7722%" y="1471.50"></text></g><g><title>__memmove_avx512_unaligned_erms (87,919,087 samples, 1.17%)</title><rect x="11.8268%" y="1477" width="1.1713%" height="15" fill="rgb(224,114,35)" fg:x="887708313" fg:w="87919087"/><text x="12.0768%" y="1487.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (3,837,435 samples, 0.05%)</title><rect x="12.9981%" y="1477" width="0.0511%" height="15" fill="rgb(245,159,27)" fg:x="975627400" fg:w="3837435"/><text x="13.2481%" y="1487.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::to_physical_idx (3,837,435 samples, 0.05%)</title><rect x="12.9981%" y="1461" width="0.0511%" height="15" fill="rgb(245,172,44)" fg:x="975627400" fg:w="3837435"/><text x="13.2481%" y="1471.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_add (3,837,435 samples, 0.05%)</title><rect x="12.9981%" y="1445" width="0.0511%" height="15" fill="rgb(236,23,11)" fg:x="975627400" fg:w="3837435"/><text x="13.2481%" y="1455.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (3,837,435 samples, 0.05%)</title><rect x="12.9981%" y="1429" width="0.0511%" height="15" fill="rgb(205,117,38)" fg:x="975627400" fg:w="3837435"/><text x="13.2481%" y="1439.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (25,663,857 samples, 0.34%)</title><rect x="13.5309%" y="1461" width="0.3419%" height="15" fill="rgb(237,72,25)" fg:x="1015617636" fg:w="25663857"/><text x="13.7809%" y="1471.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (25,663,857 samples, 0.34%)</title><rect x="13.5309%" y="1445" width="0.3419%" height="15" fill="rgb(244,70,9)" fg:x="1015617636" fg:w="25663857"/><text x="13.7809%" y="1455.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (16,161,016 samples, 0.22%)</title><rect x="14.0384%" y="1381" width="0.2153%" height="15" fill="rgb(217,125,39)" fg:x="1053707452" fg:w="16161016"/><text x="14.2884%" y="1391.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8,200,847 samples, 0.11%)</title><rect x="14.1445%" y="1365" width="0.1093%" height="15" fill="rgb(235,36,10)" fg:x="1061667621" fg:w="8200847"/><text x="14.3945%" y="1375.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (36,741,363 samples, 0.49%)</title><rect x="13.8728%" y="1429" width="0.4895%" height="15" fill="rgb(251,123,47)" fg:x="1041281493" fg:w="36741363"/><text x="14.1228%" y="1439.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (36,741,363 samples, 0.49%)</title><rect x="13.8728%" y="1413" width="0.4895%" height="15" fill="rgb(221,13,13)" fg:x="1041281493" fg:w="36741363"/><text x="14.1228%" y="1423.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (36,741,363 samples, 0.49%)</title><rect x="13.8728%" y="1397" width="0.4895%" height="15" fill="rgb(238,131,9)" fg:x="1041281493" fg:w="36741363"/><text x="14.1228%" y="1407.50"></text></g><g><title>core::hash::sip::u8to64_le (8,154,388 samples, 0.11%)</title><rect x="14.2537%" y="1381" width="0.1086%" height="15" fill="rgb(211,50,8)" fg:x="1069868468" fg:w="8154388"/><text x="14.5037%" y="1391.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (446,122,893 samples, 5.94%)</title><rect x="13.8728%" y="1461" width="5.9436%" height="15" fill="rgb(245,182,24)" fg:x="1041281493" fg:w="446122893"/><text x="14.1228%" y="1471.50">core::ha..</text></g><g><title>core::hash::Hasher::write_u32 (446,122,893 samples, 5.94%)</title><rect x="13.8728%" y="1445" width="5.9436%" height="15" fill="rgb(242,14,37)" fg:x="1041281493" fg:w="446122893"/><text x="14.1228%" y="1455.50">core::ha..</text></g><g><title>core::num::&lt;impl u32&gt;::to_ne_bytes (409,381,530 samples, 5.45%)</title><rect x="14.3623%" y="1429" width="5.4541%" height="15" fill="rgb(246,228,12)" fg:x="1078022856" fg:w="409381530"/><text x="14.6123%" y="1439.50">core::n..</text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (11,168,927 samples, 0.15%)</title><rect x="19.8165%" y="1429" width="0.1488%" height="15" fill="rgb(213,55,15)" fg:x="1487404386" fg:w="11168927"/><text x="20.0665%" y="1439.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11,168,927 samples, 0.15%)</title><rect x="19.8165%" y="1413" width="0.1488%" height="15" fill="rgb(209,9,3)" fg:x="1487404386" fg:w="11168927"/><text x="20.0665%" y="1423.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11,168,927 samples, 0.15%)</title><rect x="19.8165%" y="1397" width="0.1488%" height="15" fill="rgb(230,59,30)" fg:x="1487404386" fg:w="11168927"/><text x="20.0665%" y="1407.50"></text></g><g><title>core::hash::sip::u8to64_le (11,168,927 samples, 0.15%)</title><rect x="19.8165%" y="1381" width="0.1488%" height="15" fill="rgb(209,121,21)" fg:x="1487404386" fg:w="11168927"/><text x="20.0665%" y="1391.50"></text></g><g><title>searchclient_rust::state::State::calculate_hash (527,043,686 samples, 7.02%)</title><rect x="13.0493%" y="1477" width="7.0217%" height="15" fill="rgb(220,109,13)" fg:x="979464835" fg:w="527043686"/><text x="13.2993%" y="1487.50">searchcli..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (19,104,135 samples, 0.25%)</title><rect x="19.8165%" y="1461" width="0.2545%" height="15" fill="rgb(232,18,1)" fg:x="1487404386" fg:w="19104135"/><text x="20.0665%" y="1471.50"></text></g><g><title>core::hash::Hasher::write_usize (19,104,135 samples, 0.25%)</title><rect x="19.8165%" y="1445" width="0.2545%" height="15" fill="rgb(215,41,42)" fg:x="1487404386" fg:w="19104135"/><text x="20.0665%" y="1455.50"></text></g><g><title>core::num::&lt;impl usize&gt;::to_ne_bytes (7,935,208 samples, 0.11%)</title><rect x="19.9653%" y="1429" width="0.1057%" height="15" fill="rgb(224,123,36)" fg:x="1498573313" fg:w="7935208"/><text x="20.2153%" y="1439.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (8,725,367 samples, 0.12%)</title><rect x="20.0710%" y="1381" width="0.1162%" height="15" fill="rgb(240,125,3)" fg:x="1506508521" fg:w="8725367"/><text x="20.3210%" y="1391.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8,725,367 samples, 0.12%)</title><rect x="20.0710%" y="1365" width="0.1162%" height="15" fill="rgb(205,98,50)" fg:x="1506508521" fg:w="8725367"/><text x="20.3210%" y="1375.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8,725,367 samples, 0.12%)</title><rect x="20.0710%" y="1349" width="0.1162%" height="15" fill="rgb(205,185,37)" fg:x="1506508521" fg:w="8725367"/><text x="20.3210%" y="1359.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4,209,491 samples, 0.06%)</title><rect x="20.1312%" y="1333" width="0.0561%" height="15" fill="rgb(238,207,15)" fg:x="1511024397" fg:w="4209491"/><text x="20.3812%" y="1343.50"></text></g><g><title>hashbrown::map::make_hash (12,673,018 samples, 0.17%)</title><rect x="20.0710%" y="1413" width="0.1688%" height="15" fill="rgb(213,199,42)" fg:x="1506508521" fg:w="12673018"/><text x="20.3210%" y="1423.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12,673,018 samples, 0.17%)</title><rect x="20.0710%" y="1397" width="0.1688%" height="15" fill="rgb(235,201,11)" fg:x="1506508521" fg:w="12673018"/><text x="20.3210%" y="1407.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3,947,651 samples, 0.05%)</title><rect x="20.1873%" y="1381" width="0.0526%" height="15" fill="rgb(207,46,11)" fg:x="1515233888" fg:w="3947651"/><text x="20.4373%" y="1391.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (3,947,651 samples, 0.05%)</title><rect x="20.1873%" y="1365" width="0.0526%" height="15" fill="rgb(241,35,35)" fg:x="1515233888" fg:w="3947651"/><text x="20.4373%" y="1375.50"></text></g><g><title>core::hash::Hasher::write_u64 (3,947,651 samples, 0.05%)</title><rect x="20.1873%" y="1349" width="0.0526%" height="15" fill="rgb(243,32,47)" fg:x="1515233888" fg:w="3947651"/><text x="20.4373%" y="1359.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3,947,651 samples, 0.05%)</title><rect x="20.1873%" y="1333" width="0.0526%" height="15" fill="rgb(247,202,23)" fg:x="1515233888" fg:w="3947651"/><text x="20.4373%" y="1343.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3,947,651 samples, 0.05%)</title><rect x="20.1873%" y="1317" width="0.0526%" height="15" fill="rgb(219,102,11)" fg:x="1515233888" fg:w="3947651"/><text x="20.4373%" y="1327.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3,947,651 samples, 0.05%)</title><rect x="20.1873%" y="1301" width="0.0526%" height="15" fill="rgb(243,110,44)" fg:x="1515233888" fg:w="3947651"/><text x="20.4373%" y="1311.50"></text></g><g><title>core::intrinsics::likely (39,544,860 samples, 0.53%)</title><rect x="20.2398%" y="1365" width="0.5269%" height="15" fill="rgb(222,74,54)" fg:x="1519181539" fg:w="39544860"/><text x="20.4898%" y="1375.50"></text></g><g><title>&lt;searchclient_rust::frontier::FrontierBFS as searchclient_rust::frontier::Frontier&gt;::pop (705,108,583 samples, 9.39%)</title><rect x="11.5222%" y="1493" width="9.3941%" height="15" fill="rgb(216,99,12)" fg:x="864842407" fg:w="705108583"/><text x="11.7722%" y="1503.50">&lt;searchclient..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::remove (63,442,469 samples, 0.85%)</title><rect x="20.0710%" y="1477" width="0.8452%" height="15" fill="rgb(226,22,26)" fg:x="1506508521" fg:w="63442469"/><text x="20.3210%" y="1487.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::remove (63,442,469 samples, 0.85%)</title><rect x="20.0710%" y="1461" width="0.8452%" height="15" fill="rgb(217,163,10)" fg:x="1506508521" fg:w="63442469"/><text x="20.3210%" y="1471.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (63,442,469 samples, 0.85%)</title><rect x="20.0710%" y="1445" width="0.8452%" height="15" fill="rgb(213,25,53)" fg:x="1506508521" fg:w="63442469"/><text x="20.3210%" y="1455.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (63,442,469 samples, 0.85%)</title><rect x="20.0710%" y="1429" width="0.8452%" height="15" fill="rgb(252,105,26)" fg:x="1506508521" fg:w="63442469"/><text x="20.3210%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (50,769,451 samples, 0.68%)</title><rect x="20.2398%" y="1413" width="0.6764%" height="15" fill="rgb(220,39,43)" fg:x="1519181539" fg:w="50769451"/><text x="20.4898%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (50,769,451 samples, 0.68%)</title><rect x="20.2398%" y="1397" width="0.6764%" height="15" fill="rgb(229,68,48)" fg:x="1519181539" fg:w="50769451"/><text x="20.4898%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (50,769,451 samples, 0.68%)</title><rect x="20.2398%" y="1381" width="0.6764%" height="15" fill="rgb(252,8,32)" fg:x="1519181539" fg:w="50769451"/><text x="20.4898%" y="1391.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (11,224,591 samples, 0.15%)</title><rect x="20.7667%" y="1365" width="0.1495%" height="15" fill="rgb(223,20,43)" fg:x="1558726399" fg:w="11224591"/><text x="21.0167%" y="1375.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (11,224,591 samples, 0.15%)</title><rect x="20.7667%" y="1349" width="0.1495%" height="15" fill="rgb(229,81,49)" fg:x="1558726399" fg:w="11224591"/><text x="21.0167%" y="1359.50"></text></g><g><title>_RNvCs95KLPZDDxvS_7___rustc13___rdl_dealloc (3,848,036 samples, 0.05%)</title><rect x="20.9162%" y="1493" width="0.0513%" height="15" fill="rgb(236,28,36)" fg:x="1569950990" fg:w="3848036"/><text x="21.1662%" y="1503.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3,848,036 samples, 0.05%)</title><rect x="20.9162%" y="1477" width="0.0513%" height="15" fill="rgb(249,185,26)" fg:x="1569950990" fg:w="3848036"/><text x="21.1662%" y="1487.50"></text></g><g><title>__memmove_avx512_unaligned_erms (145,176,275 samples, 1.93%)</title><rect x="20.9675%" y="1493" width="1.9342%" height="15" fill="rgb(249,174,33)" fg:x="1573799026" fg:w="145176275"/><text x="21.2175%" y="1503.50">_..</text></g><g><title>cfree@GLIBC_2.2.5 (48,190,257 samples, 0.64%)</title><rect x="22.9017%" y="1493" width="0.6420%" height="15" fill="rgb(233,201,37)" fg:x="1718975301" fg:w="48190257"/><text x="23.1517%" y="1503.50"></text></g><g><title>_int_free (40,702,319 samples, 0.54%)</title><rect x="23.0014%" y="1477" width="0.5423%" height="15" fill="rgb(221,78,26)" fg:x="1726463239" fg:w="40702319"/><text x="23.2514%" y="1487.50"></text></g><g><title>cfree@GLIBC_2.2.5 (16,410,498 samples, 0.22%)</title><rect x="23.5437%" y="1413" width="0.2186%" height="15" fill="rgb(250,127,30)" fg:x="1767165558" fg:w="16410498"/><text x="23.7937%" y="1423.50"></text></g><g><title>_int_free (16,410,498 samples, 0.22%)</title><rect x="23.5437%" y="1397" width="0.2186%" height="15" fill="rgb(230,49,44)" fg:x="1767165558" fg:w="16410498"/><text x="23.7937%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35,646,587 samples, 0.47%)</title><rect x="23.7623%" y="1381" width="0.4749%" height="15" fill="rgb(229,67,23)" fg:x="1783576056" fg:w="35646587"/><text x="24.0123%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;char&gt;]&gt; (35,646,587 samples, 0.47%)</title><rect x="23.7623%" y="1365" width="0.4749%" height="15" fill="rgb(249,83,47)" fg:x="1783576056" fg:w="35646587"/><text x="24.0123%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;char&gt;&gt; (35,646,587 samples, 0.47%)</title><rect x="23.7623%" y="1349" width="0.4749%" height="15" fill="rgb(215,43,3)" fg:x="1783576056" fg:w="35646587"/><text x="24.0123%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;char&gt;&gt; (35,646,587 samples, 0.47%)</title><rect x="23.7623%" y="1333" width="0.4749%" height="15" fill="rgb(238,154,13)" fg:x="1783576056" fg:w="35646587"/><text x="24.0123%" y="1343.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35,646,587 samples, 0.47%)</title><rect x="23.7623%" y="1317" width="0.4749%" height="15" fill="rgb(219,56,2)" fg:x="1783576056" fg:w="35646587"/><text x="24.0123%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (35,646,587 samples, 0.47%)</title><rect x="23.7623%" y="1301" width="0.4749%" height="15" fill="rgb(233,0,4)" fg:x="1783576056" fg:w="35646587"/><text x="24.0123%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (35,646,587 samples, 0.47%)</title><rect x="23.7623%" y="1285" width="0.4749%" height="15" fill="rgb(235,30,7)" fg:x="1783576056" fg:w="35646587"/><text x="24.0123%" y="1295.50"></text></g><g><title>alloc::alloc::dealloc (35,646,587 samples, 0.47%)</title><rect x="23.7623%" y="1269" width="0.4749%" height="15" fill="rgb(250,79,13)" fg:x="1783576056" fg:w="35646587"/><text x="24.0123%" y="1279.50"></text></g><g><title>cfree@GLIBC_2.2.5 (35,646,587 samples, 0.47%)</title><rect x="23.7623%" y="1253" width="0.4749%" height="15" fill="rgb(211,146,34)" fg:x="1783576056" fg:w="35646587"/><text x="24.0123%" y="1263.50"></text></g><g><title>_int_free (13,383,132 samples, 0.18%)</title><rect x="24.0589%" y="1237" width="0.1783%" height="15" fill="rgb(228,22,38)" fg:x="1805839511" fg:w="13383132"/><text x="24.3089%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;char&gt;&gt;&gt; (40,096,190 samples, 0.53%)</title><rect x="23.7623%" y="1397" width="0.5342%" height="15" fill="rgb(235,168,5)" fg:x="1783576056" fg:w="40096190"/><text x="24.0123%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;char&gt;&gt;&gt; (4,449,603 samples, 0.06%)</title><rect x="24.2373%" y="1381" width="0.0593%" height="15" fill="rgb(221,155,16)" fg:x="1819222643" fg:w="4449603"/><text x="24.4873%" y="1391.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,449,603 samples, 0.06%)</title><rect x="24.2373%" y="1365" width="0.0593%" height="15" fill="rgb(215,215,53)" fg:x="1819222643" fg:w="4449603"/><text x="24.4873%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,449,603 samples, 0.06%)</title><rect x="24.2373%" y="1349" width="0.0593%" height="15" fill="rgb(223,4,10)" fg:x="1819222643" fg:w="4449603"/><text x="24.4873%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,449,603 samples, 0.06%)</title><rect x="24.2373%" y="1333" width="0.0593%" height="15" fill="rgb(234,103,6)" fg:x="1819222643" fg:w="4449603"/><text x="24.4873%" y="1343.50"></text></g><g><title>alloc::alloc::dealloc (4,449,603 samples, 0.06%)</title><rect x="24.2373%" y="1317" width="0.0593%" height="15" fill="rgb(227,97,0)" fg:x="1819222643" fg:w="4449603"/><text x="24.4873%" y="1327.50"></text></g><g><title>cfree@GLIBC_2.2.5 (4,449,603 samples, 0.06%)</title><rect x="24.2373%" y="1301" width="0.0593%" height="15" fill="rgb(234,150,53)" fg:x="1819222643" fg:w="4449603"/><text x="24.4873%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (21,264,092 samples, 0.28%)</title><rect x="24.2965%" y="1397" width="0.2833%" height="15" fill="rgb(228,201,54)" fg:x="1823672246" fg:w="21264092"/><text x="24.5465%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (21,264,092 samples, 0.28%)</title><rect x="24.2965%" y="1381" width="0.2833%" height="15" fill="rgb(222,22,37)" fg:x="1823672246" fg:w="21264092"/><text x="24.5465%" y="1391.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21,264,092 samples, 0.28%)</title><rect x="24.2965%" y="1365" width="0.2833%" height="15" fill="rgb(237,53,32)" fg:x="1823672246" fg:w="21264092"/><text x="24.5465%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (21,264,092 samples, 0.28%)</title><rect x="24.2965%" y="1349" width="0.2833%" height="15" fill="rgb(233,25,53)" fg:x="1823672246" fg:w="21264092"/><text x="24.5465%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21,264,092 samples, 0.28%)</title><rect x="24.2965%" y="1333" width="0.2833%" height="15" fill="rgb(210,40,34)" fg:x="1823672246" fg:w="21264092"/><text x="24.5465%" y="1343.50"></text></g><g><title>alloc::alloc::dealloc (21,264,092 samples, 0.28%)</title><rect x="24.2965%" y="1317" width="0.2833%" height="15" fill="rgb(241,220,44)" fg:x="1823672246" fg:w="21264092"/><text x="24.5465%" y="1327.50"></text></g><g><title>cfree@GLIBC_2.2.5 (21,264,092 samples, 0.28%)</title><rect x="24.2965%" y="1301" width="0.2833%" height="15" fill="rgb(235,28,35)" fg:x="1823672246" fg:w="21264092"/><text x="24.5465%" y="1311.50"></text></g><g><title>_int_free (17,004,993 samples, 0.23%)</title><rect x="24.3533%" y="1285" width="0.2266%" height="15" fill="rgb(210,56,17)" fg:x="1827931345" fg:w="17004993"/><text x="24.6033%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (61,507,794 samples, 0.82%)</title><rect x="24.8782%" y="1205" width="0.8195%" height="15" fill="rgb(224,130,29)" fg:x="1867328988" fg:w="61507794"/><text x="25.1282%" y="1215.50"></text></g><g><title>alloc::alloc::dealloc (61,507,794 samples, 0.82%)</title><rect x="24.8782%" y="1189" width="0.8195%" height="15" fill="rgb(235,212,8)" fg:x="1867328988" fg:w="61507794"/><text x="25.1282%" y="1199.50"></text></g><g><title>cfree@GLIBC_2.2.5 (61,507,794 samples, 0.82%)</title><rect x="24.8782%" y="1173" width="0.8195%" height="15" fill="rgb(223,33,50)" fg:x="1867328988" fg:w="61507794"/><text x="25.1282%" y="1183.50"></text></g><g><title>_int_free (29,631,053 samples, 0.39%)</title><rect x="25.3029%" y="1157" width="0.3948%" height="15" fill="rgb(219,149,13)" fg:x="1899205729" fg:w="29631053"/><text x="25.5529%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (70,654,148 samples, 0.94%)</title><rect x="24.8782%" y="1301" width="0.9413%" height="15" fill="rgb(250,156,29)" fg:x="1867328988" fg:w="70654148"/><text x="25.1282%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;char&gt;]&gt; (70,654,148 samples, 0.94%)</title><rect x="24.8782%" y="1285" width="0.9413%" height="15" fill="rgb(216,193,19)" fg:x="1867328988" fg:w="70654148"/><text x="25.1282%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;char&gt;&gt; (70,654,148 samples, 0.94%)</title><rect x="24.8782%" y="1269" width="0.9413%" height="15" fill="rgb(216,135,14)" fg:x="1867328988" fg:w="70654148"/><text x="25.1282%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;char&gt;&gt; (70,654,148 samples, 0.94%)</title><rect x="24.8782%" y="1253" width="0.9413%" height="15" fill="rgb(241,47,5)" fg:x="1867328988" fg:w="70654148"/><text x="25.1282%" y="1263.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (70,654,148 samples, 0.94%)</title><rect x="24.8782%" y="1237" width="0.9413%" height="15" fill="rgb(233,42,35)" fg:x="1867328988" fg:w="70654148"/><text x="25.1282%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (70,654,148 samples, 0.94%)</title><rect x="24.8782%" y="1221" width="0.9413%" height="15" fill="rgb(231,13,6)" fg:x="1867328988" fg:w="70654148"/><text x="25.1282%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (9,146,354 samples, 0.12%)</title><rect x="25.6976%" y="1205" width="0.1219%" height="15" fill="rgb(207,181,40)" fg:x="1928836782" fg:w="9146354"/><text x="25.9476%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;char&gt;&gt;&gt; (88,181,760 samples, 1.17%)</title><rect x="24.8782%" y="1317" width="1.1748%" height="15" fill="rgb(254,173,49)" fg:x="1867328988" fg:w="88181760"/><text x="25.1282%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;char&gt;&gt;&gt; (17,527,612 samples, 0.23%)</title><rect x="25.8195%" y="1301" width="0.2335%" height="15" fill="rgb(221,1,38)" fg:x="1937983136" fg:w="17527612"/><text x="26.0695%" y="1311.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17,527,612 samples, 0.23%)</title><rect x="25.8195%" y="1285" width="0.2335%" height="15" fill="rgb(206,124,46)" fg:x="1937983136" fg:w="17527612"/><text x="26.0695%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (17,527,612 samples, 0.23%)</title><rect x="25.8195%" y="1269" width="0.2335%" height="15" fill="rgb(249,21,11)" fg:x="1937983136" fg:w="17527612"/><text x="26.0695%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17,527,612 samples, 0.23%)</title><rect x="25.8195%" y="1253" width="0.2335%" height="15" fill="rgb(222,201,40)" fg:x="1937983136" fg:w="17527612"/><text x="26.0695%" y="1263.50"></text></g><g><title>alloc::alloc::dealloc (17,527,612 samples, 0.23%)</title><rect x="25.8195%" y="1237" width="0.2335%" height="15" fill="rgb(235,61,29)" fg:x="1937983136" fg:w="17527612"/><text x="26.0695%" y="1247.50"></text></g><g><title>cfree@GLIBC_2.2.5 (17,527,612 samples, 0.23%)</title><rect x="25.8195%" y="1221" width="0.2335%" height="15" fill="rgb(219,207,3)" fg:x="1937983136" fg:w="17527612"/><text x="26.0695%" y="1231.50"></text></g><g><title>_int_free_merge_chunk (9,023,538 samples, 0.12%)</title><rect x="25.9328%" y="1205" width="0.1202%" height="15" fill="rgb(222,56,46)" fg:x="1946487210" fg:w="9023538"/><text x="26.1828%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (35,328,817 samples, 0.47%)</title><rect x="26.0530%" y="1317" width="0.4707%" height="15" fill="rgb(239,76,54)" fg:x="1955510748" fg:w="35328817"/><text x="26.3030%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (35,328,817 samples, 0.47%)</title><rect x="26.0530%" y="1301" width="0.4707%" height="15" fill="rgb(231,124,27)" fg:x="1955510748" fg:w="35328817"/><text x="26.3030%" y="1311.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35,328,817 samples, 0.47%)</title><rect x="26.0530%" y="1285" width="0.4707%" height="15" fill="rgb(249,195,6)" fg:x="1955510748" fg:w="35328817"/><text x="26.3030%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (35,328,817 samples, 0.47%)</title><rect x="26.0530%" y="1269" width="0.4707%" height="15" fill="rgb(237,174,47)" fg:x="1955510748" fg:w="35328817"/><text x="26.3030%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (35,328,817 samples, 0.47%)</title><rect x="26.0530%" y="1253" width="0.4707%" height="15" fill="rgb(206,201,31)" fg:x="1955510748" fg:w="35328817"/><text x="26.3030%" y="1263.50"></text></g><g><title>alloc::alloc::dealloc (35,328,817 samples, 0.47%)</title><rect x="26.0530%" y="1237" width="0.4707%" height="15" fill="rgb(231,57,52)" fg:x="1955510748" fg:w="35328817"/><text x="26.3030%" y="1247.50"></text></g><g><title>cfree@GLIBC_2.2.5 (35,328,817 samples, 0.47%)</title><rect x="26.0530%" y="1221" width="0.4707%" height="15" fill="rgb(248,177,22)" fg:x="1955510748" fg:w="35328817"/><text x="26.3030%" y="1231.50"></text></g><g><title>_int_free (13,186,046 samples, 0.18%)</title><rect x="26.3480%" y="1205" width="0.1757%" height="15" fill="rgb(215,211,37)" fg:x="1977653519" fg:w="13186046"/><text x="26.5980%" y="1215.50"></text></g><g><title>cfree@GLIBC_2.2.5 (4,228,457 samples, 0.06%)</title><rect x="26.5892%" y="1253" width="0.0563%" height="15" fill="rgb(241,128,51)" fg:x="1995759832" fg:w="4228457"/><text x="26.8392%" y="1263.50"></text></g><g><title>_int_free (12,817,305 samples, 0.17%)</title><rect x="26.6456%" y="1077" width="0.1708%" height="15" fill="rgb(227,165,31)" fg:x="1999988289" fg:w="12817305"/><text x="26.8956%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17,063,424 samples, 0.23%)</title><rect x="26.6456%" y="1221" width="0.2273%" height="15" fill="rgb(228,167,24)" fg:x="1999988289" fg:w="17063424"/><text x="26.8956%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;char&gt;]&gt; (17,063,424 samples, 0.23%)</title><rect x="26.6456%" y="1205" width="0.2273%" height="15" fill="rgb(228,143,12)" fg:x="1999988289" fg:w="17063424"/><text x="26.8956%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;char&gt;&gt; (17,063,424 samples, 0.23%)</title><rect x="26.6456%" y="1189" width="0.2273%" height="15" fill="rgb(249,149,8)" fg:x="1999988289" fg:w="17063424"/><text x="26.8956%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;char&gt;&gt; (17,063,424 samples, 0.23%)</title><rect x="26.6456%" y="1173" width="0.2273%" height="15" fill="rgb(243,35,44)" fg:x="1999988289" fg:w="17063424"/><text x="26.8956%" y="1183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17,063,424 samples, 0.23%)</title><rect x="26.6456%" y="1157" width="0.2273%" height="15" fill="rgb(246,89,9)" fg:x="1999988289" fg:w="17063424"/><text x="26.8956%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (17,063,424 samples, 0.23%)</title><rect x="26.6456%" y="1141" width="0.2273%" height="15" fill="rgb(233,213,13)" fg:x="1999988289" fg:w="17063424"/><text x="26.8956%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17,063,424 samples, 0.23%)</title><rect x="26.6456%" y="1125" width="0.2273%" height="15" fill="rgb(233,141,41)" fg:x="1999988289" fg:w="17063424"/><text x="26.8956%" y="1135.50"></text></g><g><title>alloc::alloc::dealloc (17,063,424 samples, 0.23%)</title><rect x="26.6456%" y="1109" width="0.2273%" height="15" fill="rgb(239,167,4)" fg:x="1999988289" fg:w="17063424"/><text x="26.8956%" y="1119.50"></text></g><g><title>cfree@GLIBC_2.2.5 (17,063,424 samples, 0.23%)</title><rect x="26.6456%" y="1093" width="0.2273%" height="15" fill="rgb(209,217,16)" fg:x="1999988289" fg:w="17063424"/><text x="26.8956%" y="1103.50"></text></g><g><title>_int_free_merge_chunk (4,246,119 samples, 0.06%)</title><rect x="26.8163%" y="1077" width="0.0566%" height="15" fill="rgb(219,88,35)" fg:x="2012805594" fg:w="4246119"/><text x="27.0663%" y="1087.50"></text></g><g><title>_int_free_create_chunk (4,246,119 samples, 0.06%)</title><rect x="26.8163%" y="1061" width="0.0566%" height="15" fill="rgb(220,193,23)" fg:x="2012805594" fg:w="4246119"/><text x="27.0663%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;char&gt;&gt;&gt; (21,312,442 samples, 0.28%)</title><rect x="26.6456%" y="1237" width="0.2839%" height="15" fill="rgb(230,90,52)" fg:x="1999988289" fg:w="21312442"/><text x="26.8956%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;char&gt;&gt;&gt; (4,249,018 samples, 0.06%)</title><rect x="26.8729%" y="1221" width="0.0566%" height="15" fill="rgb(252,106,19)" fg:x="2017051713" fg:w="4249018"/><text x="27.1229%" y="1231.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,249,018 samples, 0.06%)</title><rect x="26.8729%" y="1205" width="0.0566%" height="15" fill="rgb(206,74,20)" fg:x="2017051713" fg:w="4249018"/><text x="27.1229%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,249,018 samples, 0.06%)</title><rect x="26.8729%" y="1189" width="0.0566%" height="15" fill="rgb(230,138,44)" fg:x="2017051713" fg:w="4249018"/><text x="27.1229%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,249,018 samples, 0.06%)</title><rect x="26.8729%" y="1173" width="0.0566%" height="15" fill="rgb(235,182,43)" fg:x="2017051713" fg:w="4249018"/><text x="27.1229%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (4,249,018 samples, 0.06%)</title><rect x="26.8729%" y="1157" width="0.0566%" height="15" fill="rgb(242,16,51)" fg:x="2017051713" fg:w="4249018"/><text x="27.1229%" y="1167.50"></text></g><g><title>cfree@GLIBC_2.2.5 (4,249,018 samples, 0.06%)</title><rect x="26.8729%" y="1141" width="0.0566%" height="15" fill="rgb(248,9,4)" fg:x="2017051713" fg:w="4249018"/><text x="27.1229%" y="1151.50"></text></g><g><title>_int_free_merge_chunk (4,249,018 samples, 0.06%)</title><rect x="26.8729%" y="1125" width="0.0566%" height="15" fill="rgb(210,31,22)" fg:x="2017051713" fg:w="4249018"/><text x="27.1229%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (4,269,442 samples, 0.06%)</title><rect x="26.9295%" y="1237" width="0.0569%" height="15" fill="rgb(239,54,39)" fg:x="2021300731" fg:w="4269442"/><text x="27.1795%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (4,269,442 samples, 0.06%)</title><rect x="26.9295%" y="1221" width="0.0569%" height="15" fill="rgb(230,99,41)" fg:x="2021300731" fg:w="4269442"/><text x="27.1795%" y="1231.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,269,442 samples, 0.06%)</title><rect x="26.9295%" y="1205" width="0.0569%" height="15" fill="rgb(253,106,12)" fg:x="2021300731" fg:w="4269442"/><text x="27.1795%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,269,442 samples, 0.06%)</title><rect x="26.9295%" y="1189" width="0.0569%" height="15" fill="rgb(213,46,41)" fg:x="2021300731" fg:w="4269442"/><text x="27.1795%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,269,442 samples, 0.06%)</title><rect x="26.9295%" y="1173" width="0.0569%" height="15" fill="rgb(215,133,35)" fg:x="2021300731" fg:w="4269442"/><text x="27.1795%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (4,269,442 samples, 0.06%)</title><rect x="26.9295%" y="1157" width="0.0569%" height="15" fill="rgb(213,28,5)" fg:x="2021300731" fg:w="4269442"/><text x="27.1795%" y="1167.50"></text></g><g><title>cfree@GLIBC_2.2.5 (4,269,442 samples, 0.06%)</title><rect x="26.9295%" y="1141" width="0.0569%" height="15" fill="rgb(215,77,49)" fg:x="2021300731" fg:w="4269442"/><text x="27.1795%" y="1151.50"></text></g><g><title>_int_free (4,269,442 samples, 0.06%)</title><rect x="26.9295%" y="1125" width="0.0569%" height="15" fill="rgb(248,100,22)" fg:x="2021300731" fg:w="4269442"/><text x="27.1795%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;char&gt;&gt;&gt;&gt; (4,557,553 samples, 0.06%)</title><rect x="27.0425%" y="1157" width="0.0607%" height="15" fill="rgb(208,67,9)" fg:x="2029784809" fg:w="4557553"/><text x="27.2925%" y="1167.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,557,553 samples, 0.06%)</title><rect x="27.0425%" y="1141" width="0.0607%" height="15" fill="rgb(219,133,21)" fg:x="2029784809" fg:w="4557553"/><text x="27.2925%" y="1151.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::inner (4,557,553 samples, 0.06%)</title><rect x="27.0425%" y="1125" width="0.0607%" height="15" fill="rgb(246,46,29)" fg:x="2029784809" fg:w="4557553"/><text x="27.2925%" y="1135.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (4,557,553 samples, 0.06%)</title><rect x="27.0425%" y="1109" width="0.0607%" height="15" fill="rgb(246,185,52)" fg:x="2029784809" fg:w="4557553"/><text x="27.2925%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21,712,815 samples, 0.29%)</title><rect x="27.1033%" y="1045" width="0.2893%" height="15" fill="rgb(252,136,11)" fg:x="2034342362" fg:w="21712815"/><text x="27.3533%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (21,712,815 samples, 0.29%)</title><rect x="27.1033%" y="1029" width="0.2893%" height="15" fill="rgb(219,138,53)" fg:x="2034342362" fg:w="21712815"/><text x="27.3533%" y="1039.50"></text></g><g><title>cfree@GLIBC_2.2.5 (21,712,815 samples, 0.29%)</title><rect x="27.1033%" y="1013" width="0.2893%" height="15" fill="rgb(211,51,23)" fg:x="2034342362" fg:w="21712815"/><text x="27.3533%" y="1023.50"></text></g><g><title>_int_free (21,712,815 samples, 0.29%)</title><rect x="27.1033%" y="997" width="0.2893%" height="15" fill="rgb(247,221,28)" fg:x="2034342362" fg:w="21712815"/><text x="27.3533%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25,920,672 samples, 0.35%)</title><rect x="27.1033%" y="1141" width="0.3453%" height="15" fill="rgb(251,222,45)" fg:x="2034342362" fg:w="25920672"/><text x="27.3533%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;char&gt;]&gt; (25,920,672 samples, 0.35%)</title><rect x="27.1033%" y="1125" width="0.3453%" height="15" fill="rgb(217,162,53)" fg:x="2034342362" fg:w="25920672"/><text x="27.3533%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;char&gt;&gt; (25,920,672 samples, 0.35%)</title><rect x="27.1033%" y="1109" width="0.3453%" height="15" fill="rgb(229,93,14)" fg:x="2034342362" fg:w="25920672"/><text x="27.3533%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;char&gt;&gt; (25,920,672 samples, 0.35%)</title><rect x="27.1033%" y="1093" width="0.3453%" height="15" fill="rgb(209,67,49)" fg:x="2034342362" fg:w="25920672"/><text x="27.3533%" y="1103.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25,920,672 samples, 0.35%)</title><rect x="27.1033%" y="1077" width="0.3453%" height="15" fill="rgb(213,87,29)" fg:x="2034342362" fg:w="25920672"/><text x="27.3533%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (25,920,672 samples, 0.35%)</title><rect x="27.1033%" y="1061" width="0.3453%" height="15" fill="rgb(205,151,52)" fg:x="2034342362" fg:w="25920672"/><text x="27.3533%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (4,207,857 samples, 0.06%)</title><rect x="27.3925%" y="1045" width="0.0561%" height="15" fill="rgb(253,215,39)" fg:x="2056055177" fg:w="4207857"/><text x="27.6425%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;char&gt;&gt;&gt; (30,141,184 samples, 0.40%)</title><rect x="27.1033%" y="1157" width="0.4016%" height="15" fill="rgb(221,220,41)" fg:x="2034342362" fg:w="30141184"/><text x="27.3533%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;char&gt;&gt;&gt; (4,220,512 samples, 0.06%)</title><rect x="27.4486%" y="1141" width="0.0562%" height="15" fill="rgb(218,133,21)" fg:x="2060263034" fg:w="4220512"/><text x="27.6986%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,220,512 samples, 0.06%)</title><rect x="27.4486%" y="1125" width="0.0562%" height="15" fill="rgb(221,193,43)" fg:x="2060263034" fg:w="4220512"/><text x="27.6986%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,220,512 samples, 0.06%)</title><rect x="27.4486%" y="1109" width="0.0562%" height="15" fill="rgb(240,128,52)" fg:x="2060263034" fg:w="4220512"/><text x="27.6986%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,220,512 samples, 0.06%)</title><rect x="27.4486%" y="1093" width="0.0562%" height="15" fill="rgb(253,114,12)" fg:x="2060263034" fg:w="4220512"/><text x="27.6986%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (4,220,512 samples, 0.06%)</title><rect x="27.4486%" y="1077" width="0.0562%" height="15" fill="rgb(215,223,47)" fg:x="2060263034" fg:w="4220512"/><text x="27.6986%" y="1087.50"></text></g><g><title>cfree@GLIBC_2.2.5 (4,220,512 samples, 0.06%)</title><rect x="27.4486%" y="1061" width="0.0562%" height="15" fill="rgb(248,225,23)" fg:x="2060263034" fg:w="4220512"/><text x="27.6986%" y="1071.50"></text></g><g><title>_int_free_merge_chunk (4,220,512 samples, 0.06%)</title><rect x="27.4486%" y="1045" width="0.0562%" height="15" fill="rgb(250,108,0)" fg:x="2060263034" fg:w="4220512"/><text x="27.6986%" y="1055.50"></text></g><g><title>_int_free_create_chunk (4,220,512 samples, 0.06%)</title><rect x="27.4486%" y="1029" width="0.0562%" height="15" fill="rgb(228,208,7)" fg:x="2060263034" fg:w="4220512"/><text x="27.6986%" y="1039.50"></text></g><g><title>unlink_chunk.isra.0 (4,220,512 samples, 0.06%)</title><rect x="27.4486%" y="1013" width="0.0562%" height="15" fill="rgb(244,45,10)" fg:x="2060263034" fg:w="4220512"/><text x="27.6986%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,842,245 samples, 0.06%)</title><rect x="27.5048%" y="1093" width="0.0645%" height="15" fill="rgb(207,125,25)" fg:x="2064483546" fg:w="4842245"/><text x="27.7548%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (4,842,245 samples, 0.06%)</title><rect x="27.5048%" y="1077" width="0.0645%" height="15" fill="rgb(210,195,18)" fg:x="2064483546" fg:w="4842245"/><text x="27.7548%" y="1087.50"></text></g><g><title>cfree@GLIBC_2.2.5 (4,842,245 samples, 0.06%)</title><rect x="27.5048%" y="1061" width="0.0645%" height="15" fill="rgb(249,80,12)" fg:x="2064483546" fg:w="4842245"/><text x="27.7548%" y="1071.50"></text></g><g><title>_int_free (4,842,245 samples, 0.06%)</title><rect x="27.5048%" y="1045" width="0.0645%" height="15" fill="rgb(221,65,9)" fg:x="2064483546" fg:w="4842245"/><text x="27.7548%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (9,121,967 samples, 0.12%)</title><rect x="27.5048%" y="1157" width="0.1215%" height="15" fill="rgb(235,49,36)" fg:x="2064483546" fg:w="9121967"/><text x="27.7548%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (9,121,967 samples, 0.12%)</title><rect x="27.5048%" y="1141" width="0.1215%" height="15" fill="rgb(225,32,20)" fg:x="2064483546" fg:w="9121967"/><text x="27.7548%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,121,967 samples, 0.12%)</title><rect x="27.5048%" y="1125" width="0.1215%" height="15" fill="rgb(215,141,46)" fg:x="2064483546" fg:w="9121967"/><text x="27.7548%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (9,121,967 samples, 0.12%)</title><rect x="27.5048%" y="1109" width="0.1215%" height="15" fill="rgb(250,160,47)" fg:x="2064483546" fg:w="9121967"/><text x="27.7548%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (4,279,722 samples, 0.06%)</title><rect x="27.5693%" y="1093" width="0.0570%" height="15" fill="rgb(216,222,40)" fg:x="2069325791" fg:w="4279722"/><text x="27.8193%" y="1103.50"></text></g><g><title>_int_free (4,247,492 samples, 0.06%)</title><rect x="27.7341%" y="917" width="0.0566%" height="15" fill="rgb(234,217,39)" fg:x="2081695330" fg:w="4247492"/><text x="27.9841%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;char&gt;&gt;&gt; (16,622,547 samples, 0.22%)</title><rect x="27.6264%" y="1077" width="0.2215%" height="15" fill="rgb(207,178,40)" fg:x="2073605513" fg:w="16622547"/><text x="27.8764%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,622,547 samples, 0.22%)</title><rect x="27.6264%" y="1061" width="0.2215%" height="15" fill="rgb(221,136,13)" fg:x="2073605513" fg:w="16622547"/><text x="27.8764%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;char&gt;]&gt; (16,622,547 samples, 0.22%)</title><rect x="27.6264%" y="1045" width="0.2215%" height="15" fill="rgb(249,199,10)" fg:x="2073605513" fg:w="16622547"/><text x="27.8764%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;char&gt;&gt; (16,622,547 samples, 0.22%)</title><rect x="27.6264%" y="1029" width="0.2215%" height="15" fill="rgb(249,222,13)" fg:x="2073605513" fg:w="16622547"/><text x="27.8764%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;char&gt;&gt; (16,622,547 samples, 0.22%)</title><rect x="27.6264%" y="1013" width="0.2215%" height="15" fill="rgb(244,185,38)" fg:x="2073605513" fg:w="16622547"/><text x="27.8764%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,622,547 samples, 0.22%)</title><rect x="27.6264%" y="997" width="0.2215%" height="15" fill="rgb(236,202,9)" fg:x="2073605513" fg:w="16622547"/><text x="27.8764%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (16,622,547 samples, 0.22%)</title><rect x="27.6264%" y="981" width="0.2215%" height="15" fill="rgb(250,229,37)" fg:x="2073605513" fg:w="16622547"/><text x="27.8764%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16,622,547 samples, 0.22%)</title><rect x="27.6264%" y="965" width="0.2215%" height="15" fill="rgb(206,174,23)" fg:x="2073605513" fg:w="16622547"/><text x="27.8764%" y="975.50"></text></g><g><title>alloc::alloc::dealloc (16,622,547 samples, 0.22%)</title><rect x="27.6264%" y="949" width="0.2215%" height="15" fill="rgb(211,33,43)" fg:x="2073605513" fg:w="16622547"/><text x="27.8764%" y="959.50"></text></g><g><title>cfree@GLIBC_2.2.5 (16,622,547 samples, 0.22%)</title><rect x="27.6264%" y="933" width="0.2215%" height="15" fill="rgb(245,58,50)" fg:x="2073605513" fg:w="16622547"/><text x="27.8764%" y="943.50"></text></g><g><title>_int_free_merge_chunk (4,285,238 samples, 0.06%)</title><rect x="27.7907%" y="917" width="0.0571%" height="15" fill="rgb(244,68,36)" fg:x="2085942822" fg:w="4285238"/><text x="28.0407%" y="927.50"></text></g><g><title>cfree@GLIBC_2.2.5 (4,254,884 samples, 0.06%)</title><rect x="27.8478%" y="1013" width="0.0567%" height="15" fill="rgb(232,229,15)" fg:x="2090228060" fg:w="4254884"/><text x="28.0978%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;char&gt;&gt;&gt; (13,362,742 samples, 0.18%)</title><rect x="27.9045%" y="997" width="0.1780%" height="15" fill="rgb(254,30,23)" fg:x="2094482944" fg:w="13362742"/><text x="28.1545%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,362,742 samples, 0.18%)</title><rect x="27.9045%" y="981" width="0.1780%" height="15" fill="rgb(235,160,14)" fg:x="2094482944" fg:w="13362742"/><text x="28.1545%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;char&gt;]&gt; (13,362,742 samples, 0.18%)</title><rect x="27.9045%" y="965" width="0.1780%" height="15" fill="rgb(212,155,44)" fg:x="2094482944" fg:w="13362742"/><text x="28.1545%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;char&gt;&gt; (13,362,742 samples, 0.18%)</title><rect x="27.9045%" y="949" width="0.1780%" height="15" fill="rgb(226,2,50)" fg:x="2094482944" fg:w="13362742"/><text x="28.1545%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;char&gt;&gt; (13,362,742 samples, 0.18%)</title><rect x="27.9045%" y="933" width="0.1780%" height="15" fill="rgb(234,177,6)" fg:x="2094482944" fg:w="13362742"/><text x="28.1545%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,362,742 samples, 0.18%)</title><rect x="27.9045%" y="917" width="0.1780%" height="15" fill="rgb(217,24,9)" fg:x="2094482944" fg:w="13362742"/><text x="28.1545%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (13,362,742 samples, 0.18%)</title><rect x="27.9045%" y="901" width="0.1780%" height="15" fill="rgb(220,13,46)" fg:x="2094482944" fg:w="13362742"/><text x="28.1545%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13,362,742 samples, 0.18%)</title><rect x="27.9045%" y="885" width="0.1780%" height="15" fill="rgb(239,221,27)" fg:x="2094482944" fg:w="13362742"/><text x="28.1545%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (13,362,742 samples, 0.18%)</title><rect x="27.9045%" y="869" width="0.1780%" height="15" fill="rgb(222,198,25)" fg:x="2094482944" fg:w="13362742"/><text x="28.1545%" y="879.50"></text></g><g><title>cfree@GLIBC_2.2.5 (13,362,742 samples, 0.18%)</title><rect x="27.9045%" y="853" width="0.1780%" height="15" fill="rgb(211,99,13)" fg:x="2094482944" fg:w="13362742"/><text x="28.1545%" y="863.50"></text></g><g><title>_int_free (8,541,402 samples, 0.11%)</title><rect x="27.9687%" y="837" width="0.1138%" height="15" fill="rgb(232,111,31)" fg:x="2099304284" fg:w="8541402"/><text x="28.2187%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;char&gt;&gt;&gt; (4,580,654 samples, 0.06%)</title><rect x="28.0825%" y="917" width="0.0610%" height="15" fill="rgb(245,82,37)" fg:x="2107845686" fg:w="4580654"/><text x="28.3325%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,580,654 samples, 0.06%)</title><rect x="28.0825%" y="901" width="0.0610%" height="15" fill="rgb(227,149,46)" fg:x="2107845686" fg:w="4580654"/><text x="28.3325%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;char&gt;]&gt; (4,580,654 samples, 0.06%)</title><rect x="28.0825%" y="885" width="0.0610%" height="15" fill="rgb(218,36,50)" fg:x="2107845686" fg:w="4580654"/><text x="28.3325%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;char&gt;&gt; (4,580,654 samples, 0.06%)</title><rect x="28.0825%" y="869" width="0.0610%" height="15" fill="rgb(226,80,48)" fg:x="2107845686" fg:w="4580654"/><text x="28.3325%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;char&gt;&gt; (4,580,654 samples, 0.06%)</title><rect x="28.0825%" y="853" width="0.0610%" height="15" fill="rgb(238,224,15)" fg:x="2107845686" fg:w="4580654"/><text x="28.3325%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,580,654 samples, 0.06%)</title><rect x="28.0825%" y="837" width="0.0610%" height="15" fill="rgb(241,136,10)" fg:x="2107845686" fg:w="4580654"/><text x="28.3325%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,580,654 samples, 0.06%)</title><rect x="28.0825%" y="821" width="0.0610%" height="15" fill="rgb(208,32,45)" fg:x="2107845686" fg:w="4580654"/><text x="28.3325%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,580,654 samples, 0.06%)</title><rect x="28.0825%" y="805" width="0.0610%" height="15" fill="rgb(207,135,9)" fg:x="2107845686" fg:w="4580654"/><text x="28.3325%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (4,580,654 samples, 0.06%)</title><rect x="28.0825%" y="789" width="0.0610%" height="15" fill="rgb(206,86,44)" fg:x="2107845686" fg:w="4580654"/><text x="28.3325%" y="799.50"></text></g><g><title>cfree@GLIBC_2.2.5 (4,580,654 samples, 0.06%)</title><rect x="28.0825%" y="773" width="0.0610%" height="15" fill="rgb(245,177,15)" fg:x="2107845686" fg:w="4580654"/><text x="28.3325%" y="783.50"></text></g><g><title>_int_free (4,580,654 samples, 0.06%)</title><rect x="28.0825%" y="757" width="0.0610%" height="15" fill="rgb(206,64,50)" fg:x="2107845686" fg:w="4580654"/><text x="28.3325%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (4,283,465 samples, 0.06%)</title><rect x="28.1436%" y="917" width="0.0571%" height="15" fill="rgb(234,36,40)" fg:x="2112426340" fg:w="4283465"/><text x="28.3936%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (4,283,465 samples, 0.06%)</title><rect x="28.1436%" y="901" width="0.0571%" height="15" fill="rgb(213,64,8)" fg:x="2112426340" fg:w="4283465"/><text x="28.3936%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,283,465 samples, 0.06%)</title><rect x="28.1436%" y="885" width="0.0571%" height="15" fill="rgb(210,75,36)" fg:x="2112426340" fg:w="4283465"/><text x="28.3936%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,283,465 samples, 0.06%)</title><rect x="28.1436%" y="869" width="0.0571%" height="15" fill="rgb(229,88,21)" fg:x="2112426340" fg:w="4283465"/><text x="28.3936%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,283,465 samples, 0.06%)</title><rect x="28.1436%" y="853" width="0.0571%" height="15" fill="rgb(252,204,47)" fg:x="2112426340" fg:w="4283465"/><text x="28.3936%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (4,283,465 samples, 0.06%)</title><rect x="28.1436%" y="837" width="0.0571%" height="15" fill="rgb(208,77,27)" fg:x="2112426340" fg:w="4283465"/><text x="28.3936%" y="847.50"></text></g><g><title>cfree@GLIBC_2.2.5 (4,283,465 samples, 0.06%)</title><rect x="28.1436%" y="821" width="0.0571%" height="15" fill="rgb(221,76,26)" fg:x="2112426340" fg:w="4283465"/><text x="28.3936%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (4,944,101 samples, 0.07%)</title><rect x="28.2620%" y="517" width="0.0659%" height="15" fill="rgb(225,139,18)" fg:x="2121318268" fg:w="4944101"/><text x="28.5120%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (4,944,101 samples, 0.07%)</title><rect x="28.2620%" y="501" width="0.0659%" height="15" fill="rgb(230,137,11)" fg:x="2121318268" fg:w="4944101"/><text x="28.5120%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,944,101 samples, 0.07%)</title><rect x="28.2620%" y="485" width="0.0659%" height="15" fill="rgb(212,28,1)" fg:x="2121318268" fg:w="4944101"/><text x="28.5120%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,944,101 samples, 0.07%)</title><rect x="28.2620%" y="469" width="0.0659%" height="15" fill="rgb(248,164,17)" fg:x="2121318268" fg:w="4944101"/><text x="28.5120%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,944,101 samples, 0.07%)</title><rect x="28.2620%" y="453" width="0.0659%" height="15" fill="rgb(222,171,42)" fg:x="2121318268" fg:w="4944101"/><text x="28.5120%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (4,944,101 samples, 0.07%)</title><rect x="28.2620%" y="437" width="0.0659%" height="15" fill="rgb(243,84,45)" fg:x="2121318268" fg:w="4944101"/><text x="28.5120%" y="447.50"></text></g><g><title>cfree@GLIBC_2.2.5 (4,944,101 samples, 0.07%)</title><rect x="28.2620%" y="421" width="0.0659%" height="15" fill="rgb(252,49,23)" fg:x="2121318268" fg:w="4944101"/><text x="28.5120%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;char&gt;&gt;&gt; (4,251,394 samples, 0.06%)</title><rect x="28.3279%" y="197" width="0.0566%" height="15" fill="rgb(215,19,7)" fg:x="2126262369" fg:w="4251394"/><text x="28.5779%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,251,394 samples, 0.06%)</title><rect x="28.3279%" y="181" width="0.0566%" height="15" fill="rgb(238,81,41)" fg:x="2126262369" fg:w="4251394"/><text x="28.5779%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;char&gt;]&gt; (4,251,394 samples, 0.06%)</title><rect x="28.3279%" y="165" width="0.0566%" height="15" fill="rgb(210,199,37)" fg:x="2126262369" fg:w="4251394"/><text x="28.5779%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;char&gt;&gt; (4,251,394 samples, 0.06%)</title><rect x="28.3279%" y="149" width="0.0566%" height="15" fill="rgb(244,192,49)" fg:x="2126262369" fg:w="4251394"/><text x="28.5779%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;char&gt;&gt; (4,251,394 samples, 0.06%)</title><rect x="28.3279%" y="133" width="0.0566%" height="15" fill="rgb(226,211,11)" fg:x="2126262369" fg:w="4251394"/><text x="28.5779%" y="143.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,251,394 samples, 0.06%)</title><rect x="28.3279%" y="117" width="0.0566%" height="15" fill="rgb(236,162,54)" fg:x="2126262369" fg:w="4251394"/><text x="28.5779%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,251,394 samples, 0.06%)</title><rect x="28.3279%" y="101" width="0.0566%" height="15" fill="rgb(220,229,9)" fg:x="2126262369" fg:w="4251394"/><text x="28.5779%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,251,394 samples, 0.06%)</title><rect x="28.3279%" y="85" width="0.0566%" height="15" fill="rgb(250,87,22)" fg:x="2126262369" fg:w="4251394"/><text x="28.5779%" y="95.50"></text></g><g><title>alloc::alloc::dealloc (4,251,394 samples, 0.06%)</title><rect x="28.3279%" y="69" width="0.0566%" height="15" fill="rgb(239,43,17)" fg:x="2126262369" fg:w="4251394"/><text x="28.5779%" y="79.50"></text></g><g><title>cfree@GLIBC_2.2.5 (4,251,394 samples, 0.06%)</title><rect x="28.3279%" y="53" width="0.0566%" height="15" fill="rgb(231,177,25)" fg:x="2126262369" fg:w="4251394"/><text x="28.5779%" y="63.50"></text></g><g><title>_int_free (4,251,394 samples, 0.06%)</title><rect x="28.3279%" y="37" width="0.0566%" height="15" fill="rgb(219,179,1)" fg:x="2126262369" fg:w="4251394"/><text x="28.5779%" y="47.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::drop_slow (61,795,730 samples, 0.82%)</title><rect x="27.6264%" y="1109" width="0.8233%" height="15" fill="rgb(238,219,53)" fg:x="2073605513" fg:w="61795730"/><text x="27.8764%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;searchclient_rust::state::State&gt; (61,795,730 samples, 0.82%)</title><rect x="27.6264%" y="1093" width="0.8233%" height="15" fill="rgb(232,167,36)" fg:x="2073605513" fg:w="61795730"/><text x="27.8764%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt;&gt; (45,173,183 samples, 0.60%)</title><rect x="27.8478%" y="1077" width="0.6018%" height="15" fill="rgb(244,19,51)" fg:x="2090228060" fg:w="45173183"/><text x="28.0978%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt; (45,173,183 samples, 0.60%)</title><rect x="27.8478%" y="1061" width="0.6018%" height="15" fill="rgb(224,6,22)" fg:x="2090228060" fg:w="45173183"/><text x="28.0978%" y="1071.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45,173,183 samples, 0.60%)</title><rect x="27.8478%" y="1045" width="0.6018%" height="15" fill="rgb(224,145,5)" fg:x="2090228060" fg:w="45173183"/><text x="28.0978%" y="1055.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::drop_slow (45,173,183 samples, 0.60%)</title><rect x="27.8478%" y="1029" width="0.6018%" height="15" fill="rgb(234,130,49)" fg:x="2090228060" fg:w="45173183"/><text x="28.0978%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;searchclient_rust::state::State&gt; (40,918,299 samples, 0.55%)</title><rect x="27.9045%" y="1013" width="0.5451%" height="15" fill="rgb(254,6,2)" fg:x="2094482944" fg:w="40918299"/><text x="28.1545%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt;&gt; (27,555,557 samples, 0.37%)</title><rect x="28.0825%" y="997" width="0.3671%" height="15" fill="rgb(208,96,46)" fg:x="2107845686" fg:w="27555557"/><text x="28.3325%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt; (27,555,557 samples, 0.37%)</title><rect x="28.0825%" y="981" width="0.3671%" height="15" fill="rgb(239,3,39)" fg:x="2107845686" fg:w="27555557"/><text x="28.3325%" y="991.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27,555,557 samples, 0.37%)</title><rect x="28.0825%" y="965" width="0.3671%" height="15" fill="rgb(233,210,1)" fg:x="2107845686" fg:w="27555557"/><text x="28.3325%" y="975.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::drop_slow (27,555,557 samples, 0.37%)</title><rect x="28.0825%" y="949" width="0.3671%" height="15" fill="rgb(244,137,37)" fg:x="2107845686" fg:w="27555557"/><text x="28.3325%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;searchclient_rust::state::State&gt; (27,555,557 samples, 0.37%)</title><rect x="28.0825%" y="933" width="0.3671%" height="15" fill="rgb(240,136,2)" fg:x="2107845686" fg:w="27555557"/><text x="28.3325%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt;&gt; (18,691,438 samples, 0.25%)</title><rect x="28.2006%" y="917" width="0.2490%" height="15" fill="rgb(239,18,37)" fg:x="2116709805" fg:w="18691438"/><text x="28.4506%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt; (18,691,438 samples, 0.25%)</title><rect x="28.2006%" y="901" width="0.2490%" height="15" fill="rgb(218,185,22)" fg:x="2116709805" fg:w="18691438"/><text x="28.4506%" y="911.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18,691,438 samples, 0.25%)</title><rect x="28.2006%" y="885" width="0.2490%" height="15" fill="rgb(225,218,4)" fg:x="2116709805" fg:w="18691438"/><text x="28.4506%" y="895.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::drop_slow (14,082,975 samples, 0.19%)</title><rect x="28.2620%" y="869" width="0.1876%" height="15" fill="rgb(230,182,32)" fg:x="2121318268" fg:w="14082975"/><text x="28.5120%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;searchclient_rust::state::State&gt; (14,082,975 samples, 0.19%)</title><rect x="28.2620%" y="853" width="0.1876%" height="15" fill="rgb(242,56,43)" fg:x="2121318268" fg:w="14082975"/><text x="28.5120%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt;&gt; (14,082,975 samples, 0.19%)</title><rect x="28.2620%" y="837" width="0.1876%" height="15" fill="rgb(233,99,24)" fg:x="2121318268" fg:w="14082975"/><text x="28.5120%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt; (14,082,975 samples, 0.19%)</title><rect x="28.2620%" y="821" width="0.1876%" height="15" fill="rgb(234,209,42)" fg:x="2121318268" fg:w="14082975"/><text x="28.5120%" y="831.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,082,975 samples, 0.19%)</title><rect x="28.2620%" y="805" width="0.1876%" height="15" fill="rgb(227,7,12)" fg:x="2121318268" fg:w="14082975"/><text x="28.5120%" y="815.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::drop_slow (14,082,975 samples, 0.19%)</title><rect x="28.2620%" y="789" width="0.1876%" height="15" fill="rgb(245,203,43)" fg:x="2121318268" fg:w="14082975"/><text x="28.5120%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;searchclient_rust::state::State&gt; (14,082,975 samples, 0.19%)</title><rect x="28.2620%" y="773" width="0.1876%" height="15" fill="rgb(238,205,33)" fg:x="2121318268" fg:w="14082975"/><text x="28.5120%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt;&gt; (14,082,975 samples, 0.19%)</title><rect x="28.2620%" y="757" width="0.1876%" height="15" fill="rgb(231,56,7)" fg:x="2121318268" fg:w="14082975"/><text x="28.5120%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt; (14,082,975 samples, 0.19%)</title><rect x="28.2620%" y="741" width="0.1876%" height="15" fill="rgb(244,186,29)" fg:x="2121318268" fg:w="14082975"/><text x="28.5120%" y="751.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,082,975 samples, 0.19%)</title><rect x="28.2620%" y="725" width="0.1876%" height="15" fill="rgb(234,111,31)" fg:x="2121318268" fg:w="14082975"/><text x="28.5120%" y="735.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::drop_slow (14,082,975 samples, 0.19%)</title><rect x="28.2620%" y="709" width="0.1876%" height="15" fill="rgb(241,149,10)" fg:x="2121318268" fg:w="14082975"/><text x="28.5120%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;searchclient_rust::state::State&gt; (14,082,975 samples, 0.19%)</title><rect x="28.2620%" y="693" width="0.1876%" height="15" fill="rgb(249,206,44)" fg:x="2121318268" fg:w="14082975"/><text x="28.5120%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt;&gt; (14,082,975 samples, 0.19%)</title><rect x="28.2620%" y="677" width="0.1876%" height="15" fill="rgb(251,153,30)" fg:x="2121318268" fg:w="14082975"/><text x="28.5120%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt; (14,082,975 samples, 0.19%)</title><rect x="28.2620%" y="661" width="0.1876%" height="15" fill="rgb(239,152,38)" fg:x="2121318268" fg:w="14082975"/><text x="28.5120%" y="671.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,082,975 samples, 0.19%)</title><rect x="28.2620%" y="645" width="0.1876%" height="15" fill="rgb(249,139,47)" fg:x="2121318268" fg:w="14082975"/><text x="28.5120%" y="655.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::drop_slow (14,082,975 samples, 0.19%)</title><rect x="28.2620%" y="629" width="0.1876%" height="15" fill="rgb(244,64,35)" fg:x="2121318268" fg:w="14082975"/><text x="28.5120%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;searchclient_rust::state::State&gt; (14,082,975 samples, 0.19%)</title><rect x="28.2620%" y="613" width="0.1876%" height="15" fill="rgb(216,46,15)" fg:x="2121318268" fg:w="14082975"/><text x="28.5120%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt;&gt; (14,082,975 samples, 0.19%)</title><rect x="28.2620%" y="597" width="0.1876%" height="15" fill="rgb(250,74,19)" fg:x="2121318268" fg:w="14082975"/><text x="28.5120%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt; (14,082,975 samples, 0.19%)</title><rect x="28.2620%" y="581" width="0.1876%" height="15" fill="rgb(249,42,33)" fg:x="2121318268" fg:w="14082975"/><text x="28.5120%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,082,975 samples, 0.19%)</title><rect x="28.2620%" y="565" width="0.1876%" height="15" fill="rgb(242,149,17)" fg:x="2121318268" fg:w="14082975"/><text x="28.5120%" y="575.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::drop_slow (14,082,975 samples, 0.19%)</title><rect x="28.2620%" y="549" width="0.1876%" height="15" fill="rgb(244,29,21)" fg:x="2121318268" fg:w="14082975"/><text x="28.5120%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;searchclient_rust::state::State&gt; (14,082,975 samples, 0.19%)</title><rect x="28.2620%" y="533" width="0.1876%" height="15" fill="rgb(220,130,37)" fg:x="2121318268" fg:w="14082975"/><text x="28.5120%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt;&gt; (9,138,874 samples, 0.12%)</title><rect x="28.3279%" y="517" width="0.1218%" height="15" fill="rgb(211,67,2)" fg:x="2126262369" fg:w="9138874"/><text x="28.5779%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt; (9,138,874 samples, 0.12%)</title><rect x="28.3279%" y="501" width="0.1218%" height="15" fill="rgb(235,68,52)" fg:x="2126262369" fg:w="9138874"/><text x="28.5779%" y="511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,138,874 samples, 0.12%)</title><rect x="28.3279%" y="485" width="0.1218%" height="15" fill="rgb(246,142,3)" fg:x="2126262369" fg:w="9138874"/><text x="28.5779%" y="495.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::drop_slow (9,138,874 samples, 0.12%)</title><rect x="28.3279%" y="469" width="0.1218%" height="15" fill="rgb(241,25,7)" fg:x="2126262369" fg:w="9138874"/><text x="28.5779%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;searchclient_rust::state::State&gt; (9,138,874 samples, 0.12%)</title><rect x="28.3279%" y="453" width="0.1218%" height="15" fill="rgb(242,119,39)" fg:x="2126262369" fg:w="9138874"/><text x="28.5779%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt;&gt; (9,138,874 samples, 0.12%)</title><rect x="28.3279%" y="437" width="0.1218%" height="15" fill="rgb(241,98,45)" fg:x="2126262369" fg:w="9138874"/><text x="28.5779%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt; (9,138,874 samples, 0.12%)</title><rect x="28.3279%" y="421" width="0.1218%" height="15" fill="rgb(254,28,30)" fg:x="2126262369" fg:w="9138874"/><text x="28.5779%" y="431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,138,874 samples, 0.12%)</title><rect x="28.3279%" y="405" width="0.1218%" height="15" fill="rgb(241,142,54)" fg:x="2126262369" fg:w="9138874"/><text x="28.5779%" y="415.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::drop_slow (9,138,874 samples, 0.12%)</title><rect x="28.3279%" y="389" width="0.1218%" height="15" fill="rgb(222,85,15)" fg:x="2126262369" fg:w="9138874"/><text x="28.5779%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;searchclient_rust::state::State&gt; (9,138,874 samples, 0.12%)</title><rect x="28.3279%" y="373" width="0.1218%" height="15" fill="rgb(210,85,47)" fg:x="2126262369" fg:w="9138874"/><text x="28.5779%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt;&gt; (9,138,874 samples, 0.12%)</title><rect x="28.3279%" y="357" width="0.1218%" height="15" fill="rgb(224,206,25)" fg:x="2126262369" fg:w="9138874"/><text x="28.5779%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt; (9,138,874 samples, 0.12%)</title><rect x="28.3279%" y="341" width="0.1218%" height="15" fill="rgb(243,201,19)" fg:x="2126262369" fg:w="9138874"/><text x="28.5779%" y="351.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,138,874 samples, 0.12%)</title><rect x="28.3279%" y="325" width="0.1218%" height="15" fill="rgb(236,59,4)" fg:x="2126262369" fg:w="9138874"/><text x="28.5779%" y="335.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::drop_slow (9,138,874 samples, 0.12%)</title><rect x="28.3279%" y="309" width="0.1218%" height="15" fill="rgb(254,179,45)" fg:x="2126262369" fg:w="9138874"/><text x="28.5779%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;searchclient_rust::state::State&gt; (9,138,874 samples, 0.12%)</title><rect x="28.3279%" y="293" width="0.1218%" height="15" fill="rgb(226,14,10)" fg:x="2126262369" fg:w="9138874"/><text x="28.5779%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt;&gt; (9,138,874 samples, 0.12%)</title><rect x="28.3279%" y="277" width="0.1218%" height="15" fill="rgb(244,27,41)" fg:x="2126262369" fg:w="9138874"/><text x="28.5779%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt; (9,138,874 samples, 0.12%)</title><rect x="28.3279%" y="261" width="0.1218%" height="15" fill="rgb(235,35,32)" fg:x="2126262369" fg:w="9138874"/><text x="28.5779%" y="271.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,138,874 samples, 0.12%)</title><rect x="28.3279%" y="245" width="0.1218%" height="15" fill="rgb(218,68,31)" fg:x="2126262369" fg:w="9138874"/><text x="28.5779%" y="255.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::drop_slow (9,138,874 samples, 0.12%)</title><rect x="28.3279%" y="229" width="0.1218%" height="15" fill="rgb(207,120,37)" fg:x="2126262369" fg:w="9138874"/><text x="28.5779%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;searchclient_rust::state::State&gt; (9,138,874 samples, 0.12%)</title><rect x="28.3279%" y="213" width="0.1218%" height="15" fill="rgb(227,98,0)" fg:x="2126262369" fg:w="9138874"/><text x="28.5779%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (4,887,480 samples, 0.07%)</title><rect x="28.3845%" y="197" width="0.0651%" height="15" fill="rgb(207,7,3)" fg:x="2130513763" fg:w="4887480"/><text x="28.6345%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (4,887,480 samples, 0.07%)</title><rect x="28.3845%" y="181" width="0.0651%" height="15" fill="rgb(206,98,19)" fg:x="2130513763" fg:w="4887480"/><text x="28.6345%" y="191.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,887,480 samples, 0.07%)</title><rect x="28.3845%" y="165" width="0.0651%" height="15" fill="rgb(217,5,26)" fg:x="2130513763" fg:w="4887480"/><text x="28.6345%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,887,480 samples, 0.07%)</title><rect x="28.3845%" y="149" width="0.0651%" height="15" fill="rgb(235,190,38)" fg:x="2130513763" fg:w="4887480"/><text x="28.6345%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,887,480 samples, 0.07%)</title><rect x="28.3845%" y="133" width="0.0651%" height="15" fill="rgb(247,86,24)" fg:x="2130513763" fg:w="4887480"/><text x="28.6345%" y="143.50"></text></g><g><title>alloc::alloc::dealloc (4,887,480 samples, 0.07%)</title><rect x="28.3845%" y="117" width="0.0651%" height="15" fill="rgb(205,101,16)" fg:x="2130513763" fg:w="4887480"/><text x="28.6345%" y="127.50"></text></g><g><title>cfree@GLIBC_2.2.5 (4,887,480 samples, 0.07%)</title><rect x="28.3845%" y="101" width="0.0651%" height="15" fill="rgb(246,168,33)" fg:x="2130513763" fg:w="4887480"/><text x="28.6345%" y="111.50"></text></g><g><title>_int_free_create_chunk (4,283,483 samples, 0.06%)</title><rect x="28.4497%" y="1077" width="0.0571%" height="15" fill="rgb(231,114,1)" fg:x="2135401243" fg:w="4283483"/><text x="28.6997%" y="1087.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::drop_slow (114,181,908 samples, 1.52%)</title><rect x="27.0425%" y="1189" width="1.5212%" height="15" fill="rgb(207,184,53)" fg:x="2029784809" fg:w="114181908"/><text x="27.2925%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;searchclient_rust::state::State&gt; (114,181,908 samples, 1.52%)</title><rect x="27.0425%" y="1173" width="1.5212%" height="15" fill="rgb(224,95,51)" fg:x="2029784809" fg:w="114181908"/><text x="27.2925%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt;&gt; (70,361,204 samples, 0.94%)</title><rect x="27.6264%" y="1157" width="0.9374%" height="15" fill="rgb(212,188,45)" fg:x="2073605513" fg:w="70361204"/><text x="27.8764%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt; (70,361,204 samples, 0.94%)</title><rect x="27.6264%" y="1141" width="0.9374%" height="15" fill="rgb(223,154,38)" fg:x="2073605513" fg:w="70361204"/><text x="27.8764%" y="1151.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (70,361,204 samples, 0.94%)</title><rect x="27.6264%" y="1125" width="0.9374%" height="15" fill="rgb(251,22,52)" fg:x="2073605513" fg:w="70361204"/><text x="27.8764%" y="1135.50"></text></g><g><title>cfree@GLIBC_2.2.5 (8,565,474 samples, 0.11%)</title><rect x="28.4497%" y="1109" width="0.1141%" height="15" fill="rgb(229,209,22)" fg:x="2135401243" fg:w="8565474"/><text x="28.6997%" y="1119.50"></text></g><g><title>_int_free_merge_chunk (8,565,474 samples, 0.11%)</title><rect x="28.4497%" y="1093" width="0.1141%" height="15" fill="rgb(234,138,34)" fg:x="2135401243" fg:w="8565474"/><text x="28.6997%" y="1103.50"></text></g><g><title>unlink_chunk.isra.0 (4,281,991 samples, 0.06%)</title><rect x="28.5067%" y="1077" width="0.0570%" height="15" fill="rgb(212,95,11)" fg:x="2139684726" fg:w="4281991"/><text x="28.7567%" y="1087.50"></text></g><g><title>_int_free (4,290,714 samples, 0.06%)</title><rect x="28.6280%" y="1173" width="0.0572%" height="15" fill="rgb(240,179,47)" fg:x="2148785975" fg:w="4290714"/><text x="28.8780%" y="1183.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::drop_slow (294,284,489 samples, 3.92%)</title><rect x="24.8213%" y="1349" width="3.9207%" height="15" fill="rgb(240,163,11)" fg:x="1863059766" fg:w="294284489"/><text x="25.0713%" y="1359.50">allo..</text></g><g><title>core::ptr::drop_in_place&lt;searchclient_rust::state::State&gt; (294,284,489 samples, 3.92%)</title><rect x="24.8213%" y="1333" width="3.9207%" height="15" fill="rgb(236,37,12)" fg:x="1863059766" fg:w="294284489"/><text x="25.0713%" y="1343.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt;&gt; (166,504,690 samples, 2.22%)</title><rect x="26.5237%" y="1317" width="2.2183%" height="15" fill="rgb(232,164,16)" fg:x="1990839565" fg:w="166504690"/><text x="26.7737%" y="1327.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt; (166,504,690 samples, 2.22%)</title><rect x="26.5237%" y="1301" width="2.2183%" height="15" fill="rgb(244,205,15)" fg:x="1990839565" fg:w="166504690"/><text x="26.7737%" y="1311.50">c..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (166,504,690 samples, 2.22%)</title><rect x="26.5237%" y="1285" width="2.2183%" height="15" fill="rgb(223,117,47)" fg:x="1990839565" fg:w="166504690"/><text x="26.7737%" y="1295.50">&lt;..</text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::drop_slow (161,584,423 samples, 2.15%)</title><rect x="26.5892%" y="1269" width="2.1528%" height="15" fill="rgb(244,107,35)" fg:x="1995759832" fg:w="161584423"/><text x="26.8392%" y="1279.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;searchclient_rust::state::State&gt; (157,355,966 samples, 2.10%)</title><rect x="26.6456%" y="1253" width="2.0964%" height="15" fill="rgb(205,140,8)" fg:x="1999988289" fg:w="157355966"/><text x="26.8956%" y="1263.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt;&gt; (131,774,082 samples, 1.76%)</title><rect x="26.9864%" y="1237" width="1.7556%" height="15" fill="rgb(228,84,46)" fg:x="2025570173" fg:w="131774082"/><text x="27.2364%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt; (131,774,082 samples, 1.76%)</title><rect x="26.9864%" y="1221" width="1.7556%" height="15" fill="rgb(254,188,9)" fg:x="2025570173" fg:w="131774082"/><text x="27.2364%" y="1231.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (131,774,082 samples, 1.76%)</title><rect x="26.9864%" y="1205" width="1.7556%" height="15" fill="rgb(206,112,54)" fg:x="2025570173" fg:w="131774082"/><text x="27.2364%" y="1215.50"></text></g><g><title>cfree@GLIBC_2.2.5 (13,377,538 samples, 0.18%)</title><rect x="28.5638%" y="1189" width="0.1782%" height="15" fill="rgb(216,84,49)" fg:x="2143966717" fg:w="13377538"/><text x="28.8138%" y="1199.50"></text></g><g><title>_int_free_merge_chunk (4,267,566 samples, 0.06%)</title><rect x="28.6851%" y="1173" width="0.0569%" height="15" fill="rgb(214,194,35)" fg:x="2153076689" fg:w="4267566"/><text x="28.9351%" y="1183.50"></text></g><g><title>_int_free_create_chunk (4,267,566 samples, 0.06%)</title><rect x="28.6851%" y="1157" width="0.0569%" height="15" fill="rgb(249,28,3)" fg:x="2153076689" fg:w="4267566"/><text x="28.9351%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn searchclient_rust::frontier::Frontier&gt;&gt; (399,423,157 samples, 5.32%)</title><rect x="23.5437%" y="1493" width="5.3215%" height="15" fill="rgb(222,56,52)" fg:x="1767165558" fg:w="399423157"/><text x="23.7937%" y="1503.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;searchclient_rust::frontier::FrontierBFS&gt; (399,423,157 samples, 5.32%)</title><rect x="23.5437%" y="1477" width="5.3215%" height="15" fill="rgb(245,217,50)" fg:x="1767165558" fg:w="399423157"/><text x="23.7937%" y="1487.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;searchclient_rust::state::State&gt;&gt; (399,423,157 samples, 5.32%)</title><rect x="23.5437%" y="1461" width="5.3215%" height="15" fill="rgb(213,201,24)" fg:x="1767165558" fg:w="399423157"/><text x="23.7937%" y="1471.50">core::p..</text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (399,423,157 samples, 5.32%)</title><rect x="23.5437%" y="1445" width="5.3215%" height="15" fill="rgb(248,116,28)" fg:x="1767165558" fg:w="399423157"/><text x="23.7937%" y="1455.50">&lt;alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;[searchclient_rust::state::State]&gt; (399,423,157 samples, 5.32%)</title><rect x="23.5437%" y="1429" width="5.3215%" height="15" fill="rgb(219,72,43)" fg:x="1767165558" fg:w="399423157"/><text x="23.7937%" y="1439.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;searchclient_rust::state::State&gt; (383,012,659 samples, 5.10%)</title><rect x="23.7623%" y="1413" width="5.1028%" height="15" fill="rgb(209,138,14)" fg:x="1783576056" fg:w="383012659"/><text x="24.0123%" y="1423.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt;&gt; (321,652,377 samples, 4.29%)</title><rect x="24.5798%" y="1397" width="4.2853%" height="15" fill="rgb(222,18,33)" fg:x="1844936338" fg:w="321652377"/><text x="24.8298%" y="1407.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt; (321,652,377 samples, 4.29%)</title><rect x="24.5798%" y="1381" width="4.2853%" height="15" fill="rgb(213,199,7)" fg:x="1844936338" fg:w="321652377"/><text x="24.8298%" y="1391.50">core:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (321,652,377 samples, 4.29%)</title><rect x="24.5798%" y="1365" width="4.2853%" height="15" fill="rgb(250,110,10)" fg:x="1844936338" fg:w="321652377"/><text x="24.8298%" y="1375.50">&lt;allo..</text></g><g><title>cfree@GLIBC_2.2.5 (9,244,460 samples, 0.12%)</title><rect x="28.7420%" y="1349" width="0.1232%" height="15" fill="rgb(248,123,6)" fg:x="2157344255" fg:w="9244460"/><text x="28.9920%" y="1359.50"></text></g><g><title>_int_free_merge_chunk (9,244,460 samples, 0.12%)</title><rect x="28.7420%" y="1333" width="0.1232%" height="15" fill="rgb(206,91,31)" fg:x="2157344255" fg:w="9244460"/><text x="28.9920%" y="1343.50"></text></g><g><title>_int_free_create_chunk (9,244,460 samples, 0.12%)</title><rect x="28.7420%" y="1317" width="0.1232%" height="15" fill="rgb(211,154,13)" fg:x="2157344255" fg:w="9244460"/><text x="28.9920%" y="1327.50"></text></g><g><title>_int_free_maybe_consolidate.part.0 (23,180,332 samples, 0.31%)</title><rect x="28.8652%" y="1461" width="0.3088%" height="15" fill="rgb(225,148,7)" fg:x="2166588715" fg:w="23180332"/><text x="29.1152%" y="1471.50"></text></g><g><title>malloc_consolidate (23,180,332 samples, 0.31%)</title><rect x="28.8652%" y="1445" width="0.3088%" height="15" fill="rgb(220,160,43)" fg:x="2166588715" fg:w="23180332"/><text x="29.1152%" y="1455.50"></text></g><g><title>unlink_chunk.isra.0 (3,815,176 samples, 0.05%)</title><rect x="29.1232%" y="1429" width="0.0508%" height="15" fill="rgb(213,52,39)" fg:x="2185953871" fg:w="3815176"/><text x="29.3732%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;searchclient_rust::state::State&gt;&gt; (31,766,565 samples, 0.42%)</title><rect x="28.8652%" y="1493" width="0.4232%" height="15" fill="rgb(243,137,7)" fg:x="2166588715" fg:w="31766565"/><text x="29.1152%" y="1503.50"></text></g><g><title>cfree@GLIBC_2.2.5 (31,766,565 samples, 0.42%)</title><rect x="28.8652%" y="1477" width="0.4232%" height="15" fill="rgb(230,79,13)" fg:x="2166588715" fg:w="31766565"/><text x="29.1152%" y="1487.50"></text></g><g><title>_int_free_merge_chunk (8,586,233 samples, 0.11%)</title><rect x="29.1740%" y="1461" width="0.1144%" height="15" fill="rgb(247,105,23)" fg:x="2189769047" fg:w="8586233"/><text x="29.4240%" y="1471.50"></text></g><g><title>_int_free_create_chunk (4,626,761 samples, 0.06%)</title><rect x="29.2267%" y="1445" width="0.0616%" height="15" fill="rgb(223,179,41)" fg:x="2193728519" fg:w="4626761"/><text x="29.4767%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;bool&gt;&gt;&gt;&gt; (8,475,905 samples, 0.11%)</title><rect x="29.4018%" y="1477" width="0.1129%" height="15" fill="rgb(218,9,34)" fg:x="2206867077" fg:w="8475905"/><text x="29.6518%" y="1487.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,475,905 samples, 0.11%)</title><rect x="29.4018%" y="1461" width="0.1129%" height="15" fill="rgb(222,106,8)" fg:x="2206867077" fg:w="8475905"/><text x="29.6518%" y="1471.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (3,930,396 samples, 0.05%)</title><rect x="29.4623%" y="1445" width="0.0524%" height="15" fill="rgb(211,220,0)" fg:x="2211412586" fg:w="3930396"/><text x="29.7123%" y="1455.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (3,930,396 samples, 0.05%)</title><rect x="29.4623%" y="1429" width="0.0524%" height="15" fill="rgb(229,52,16)" fg:x="2211412586" fg:w="3930396"/><text x="29.7123%" y="1439.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3,930,396 samples, 0.05%)</title><rect x="29.4623%" y="1413" width="0.0524%" height="15" fill="rgb(212,155,18)" fg:x="2211412586" fg:w="3930396"/><text x="29.7123%" y="1423.50"></text></g><g><title>core::mem::replace (3,930,396 samples, 0.05%)</title><rect x="29.4623%" y="1397" width="0.0524%" height="15" fill="rgb(242,21,14)" fg:x="2211412586" fg:w="3930396"/><text x="29.7123%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;alloc::vec::Vec&lt;searchclient_rust::color::Color&gt;&gt;&gt; (15,318,991 samples, 0.20%)</title><rect x="29.5147%" y="1477" width="0.2041%" height="15" fill="rgb(222,19,48)" fg:x="2215343067" fg:w="15318991"/><text x="29.7647%" y="1487.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15,318,991 samples, 0.20%)</title><rect x="29.5147%" y="1461" width="0.2041%" height="15" fill="rgb(232,45,27)" fg:x="2215343067" fg:w="15318991"/><text x="29.7647%" y="1471.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::inner (11,280,140 samples, 0.15%)</title><rect x="29.5685%" y="1445" width="0.1503%" height="15" fill="rgb(249,103,42)" fg:x="2219381918" fg:w="11280140"/><text x="29.8185%" y="1455.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (11,280,140 samples, 0.15%)</title><rect x="29.5685%" y="1429" width="0.1503%" height="15" fill="rgb(246,81,33)" fg:x="2219381918" fg:w="11280140"/><text x="29.8185%" y="1439.50"></text></g><g><title>_RNvCs95KLPZDDxvS_7___rustc14___rust_dealloc (34,038,607 samples, 0.45%)</title><rect x="30.0199%" y="1333" width="0.4535%" height="15" fill="rgb(252,33,42)" fg:x="2253263653" fg:w="34038607"/><text x="30.2699%" y="1343.50"></text></g><g><title>_int_free (412,896,841 samples, 5.50%)</title><rect x="31.8995%" y="1317" width="5.5010%" height="15" fill="rgb(209,212,41)" fg:x="2394340566" fg:w="412896841"/><text x="32.1495%" y="1327.50">_int_fr..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (580,325,128 samples, 7.73%)</title><rect x="30.0199%" y="1365" width="7.7316%" height="15" fill="rgb(207,154,6)" fg:x="2253263653" fg:w="580325128"/><text x="30.2699%" y="1375.50">&lt;alloc::all..</text></g><g><title>alloc::alloc::dealloc (580,325,128 samples, 7.73%)</title><rect x="30.0199%" y="1349" width="7.7316%" height="15" fill="rgb(223,64,47)" fg:x="2253263653" fg:w="580325128"/><text x="30.2699%" y="1359.50">alloc::allo..</text></g><g><title>cfree@GLIBC_2.2.5 (546,286,521 samples, 7.28%)</title><rect x="30.4734%" y="1333" width="7.2781%" height="15" fill="rgb(211,161,38)" fg:x="2287302260" fg:w="546286521"/><text x="30.7234%" y="1343.50">cfree@GLIB..</text></g><g><title>_int_free_merge_chunk (26,351,374 samples, 0.35%)</title><rect x="37.4004%" y="1317" width="0.3511%" height="15" fill="rgb(219,138,40)" fg:x="2807237407" fg:w="26351374"/><text x="37.6504%" y="1327.50"></text></g><g><title>_int_free_create_chunk (15,877,137 samples, 0.21%)</title><rect x="37.5400%" y="1301" width="0.2115%" height="15" fill="rgb(241,228,46)" fg:x="2817711644" fg:w="15877137"/><text x="37.7900%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (606,894,381 samples, 8.09%)</title><rect x="29.7188%" y="1461" width="8.0856%" height="15" fill="rgb(223,209,38)" fg:x="2230662058" fg:w="606894381"/><text x="29.9688%" y="1471.50">&lt;alloc::vec..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;char&gt;]&gt; (606,894,381 samples, 8.09%)</title><rect x="29.7188%" y="1445" width="8.0856%" height="15" fill="rgb(236,164,45)" fg:x="2230662058" fg:w="606894381"/><text x="29.9688%" y="1455.50">core::ptr::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;char&gt;&gt; (584,292,786 samples, 7.78%)</title><rect x="30.0199%" y="1429" width="7.7845%" height="15" fill="rgb(231,15,5)" fg:x="2253263653" fg:w="584292786"/><text x="30.2699%" y="1439.50">core::ptr::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;char&gt;&gt; (584,292,786 samples, 7.78%)</title><rect x="30.0199%" y="1413" width="7.7845%" height="15" fill="rgb(252,35,15)" fg:x="2253263653" fg:w="584292786"/><text x="30.2699%" y="1423.50">core::ptr::..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (584,292,786 samples, 7.78%)</title><rect x="30.0199%" y="1397" width="7.7845%" height="15" fill="rgb(248,181,18)" fg:x="2253263653" fg:w="584292786"/><text x="30.2699%" y="1407.50">&lt;alloc::raw..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (584,292,786 samples, 7.78%)</title><rect x="30.0199%" y="1381" width="7.7845%" height="15" fill="rgb(233,39,42)" fg:x="2253263653" fg:w="584292786"/><text x="30.2699%" y="1391.50">alloc::raw_..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (3,967,658 samples, 0.05%)</title><rect x="37.7515%" y="1365" width="0.0529%" height="15" fill="rgb(238,110,33)" fg:x="2833588781" fg:w="3967658"/><text x="38.0015%" y="1375.50"></text></g><g><title>_int_free (37,031,669 samples, 0.49%)</title><rect x="37.9570%" y="1365" width="0.4934%" height="15" fill="rgb(233,195,10)" fg:x="2849009175" fg:w="37031669"/><text x="38.2070%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;char&gt;&gt;&gt; (659,541,519 samples, 8.79%)</title><rect x="29.7188%" y="1477" width="8.7870%" height="15" fill="rgb(254,105,3)" fg:x="2230662058" fg:w="659541519"/><text x="29.9688%" y="1487.50">core::ptr::d..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;char&gt;&gt;&gt; (52,647,138 samples, 0.70%)</title><rect x="37.8044%" y="1461" width="0.7014%" height="15" fill="rgb(221,225,9)" fg:x="2837556439" fg:w="52647138"/><text x="38.0544%" y="1471.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (52,647,138 samples, 0.70%)</title><rect x="37.8044%" y="1445" width="0.7014%" height="15" fill="rgb(224,227,45)" fg:x="2837556439" fg:w="52647138"/><text x="38.0544%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (52,647,138 samples, 0.70%)</title><rect x="37.8044%" y="1429" width="0.7014%" height="15" fill="rgb(229,198,43)" fg:x="2837556439" fg:w="52647138"/><text x="38.0544%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (52,647,138 samples, 0.70%)</title><rect x="37.8044%" y="1413" width="0.7014%" height="15" fill="rgb(206,209,35)" fg:x="2837556439" fg:w="52647138"/><text x="38.0544%" y="1423.50"></text></g><g><title>alloc::alloc::dealloc (52,647,138 samples, 0.70%)</title><rect x="37.8044%" y="1397" width="0.7014%" height="15" fill="rgb(245,195,53)" fg:x="2837556439" fg:w="52647138"/><text x="38.0544%" y="1407.50"></text></g><g><title>cfree@GLIBC_2.2.5 (52,647,138 samples, 0.70%)</title><rect x="37.8044%" y="1381" width="0.7014%" height="15" fill="rgb(240,92,26)" fg:x="2837556439" fg:w="52647138"/><text x="38.0544%" y="1391.50"></text></g><g><title>_int_free_merge_chunk (4,162,733 samples, 0.06%)</title><rect x="38.4503%" y="1365" width="0.0555%" height="15" fill="rgb(207,40,23)" fg:x="2886040844" fg:w="4162733"/><text x="38.7003%" y="1375.50"></text></g><g><title>_int_free_create_chunk (4,162,733 samples, 0.06%)</title><rect x="38.4503%" y="1349" width="0.0555%" height="15" fill="rgb(223,111,35)" fg:x="2886040844" fg:w="4162733"/><text x="38.7003%" y="1359.50"></text></g><g><title>unlink_chunk.isra.0 (4,162,725 samples, 0.06%)</title><rect x="38.4503%" y="1333" width="0.0555%" height="15" fill="rgb(229,147,28)" fg:x="2886040852" fg:w="4162725"/><text x="38.7003%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (57,154,818 samples, 0.76%)</title><rect x="38.5058%" y="1477" width="0.7615%" height="15" fill="rgb(211,29,28)" fg:x="2890203577" fg:w="57154818"/><text x="38.7558%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (57,154,818 samples, 0.76%)</title><rect x="38.5058%" y="1461" width="0.7615%" height="15" fill="rgb(228,72,33)" fg:x="2890203577" fg:w="57154818"/><text x="38.7558%" y="1471.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (57,154,818 samples, 0.76%)</title><rect x="38.5058%" y="1445" width="0.7615%" height="15" fill="rgb(205,214,31)" fg:x="2890203577" fg:w="57154818"/><text x="38.7558%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (57,154,818 samples, 0.76%)</title><rect x="38.5058%" y="1429" width="0.7615%" height="15" fill="rgb(224,111,15)" fg:x="2890203577" fg:w="57154818"/><text x="38.7558%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (57,154,818 samples, 0.76%)</title><rect x="38.5058%" y="1413" width="0.7615%" height="15" fill="rgb(253,21,26)" fg:x="2890203577" fg:w="57154818"/><text x="38.7558%" y="1423.50"></text></g><g><title>alloc::alloc::dealloc (57,154,818 samples, 0.76%)</title><rect x="38.5058%" y="1397" width="0.7615%" height="15" fill="rgb(245,139,43)" fg:x="2890203577" fg:w="57154818"/><text x="38.7558%" y="1407.50"></text></g><g><title>cfree@GLIBC_2.2.5 (57,154,818 samples, 0.76%)</title><rect x="38.5058%" y="1381" width="0.7615%" height="15" fill="rgb(252,170,7)" fg:x="2890203577" fg:w="57154818"/><text x="38.7558%" y="1391.50"></text></g><g><title>_int_free (41,413,388 samples, 0.55%)</title><rect x="38.7155%" y="1365" width="0.5517%" height="15" fill="rgb(231,118,14)" fg:x="2905945007" fg:w="41413388"/><text x="38.9655%" y="1375.50"></text></g><g><title>cfree@GLIBC_2.2.5 (19,446,799 samples, 0.26%)</title><rect x="39.3697%" y="1413" width="0.2591%" height="15" fill="rgb(238,83,0)" fg:x="2955051857" fg:w="19446799"/><text x="39.6197%" y="1423.50"></text></g><g><title>_int_free (3,766,614 samples, 0.05%)</title><rect x="39.5787%" y="1397" width="0.0502%" height="15" fill="rgb(221,39,39)" fg:x="2970732042" fg:w="3766614"/><text x="39.8287%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;alloc::vec::Vec&lt;searchclient_rust::color::Color&gt;&gt;&gt; (4,627,179 samples, 0.06%)</title><rect x="39.6288%" y="1397" width="0.0616%" height="15" fill="rgb(222,119,46)" fg:x="2974498656" fg:w="4627179"/><text x="39.8788%" y="1407.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,627,179 samples, 0.06%)</title><rect x="39.6288%" y="1381" width="0.0616%" height="15" fill="rgb(222,165,49)" fg:x="2974498656" fg:w="4627179"/><text x="39.8788%" y="1391.50"></text></g><g><title>_RNvCs95KLPZDDxvS_7___rustc13___rdl_dealloc (3,907,764 samples, 0.05%)</title><rect x="39.7383%" y="1253" width="0.0521%" height="15" fill="rgb(219,113,52)" fg:x="2982713425" fg:w="3907764"/><text x="39.9883%" y="1263.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3,907,764 samples, 0.05%)</title><rect x="39.7383%" y="1237" width="0.0521%" height="15" fill="rgb(214,7,15)" fg:x="2982713425" fg:w="3907764"/><text x="39.9883%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (113,637,669 samples, 1.51%)</title><rect x="39.7383%" y="1285" width="1.5140%" height="15" fill="rgb(235,32,4)" fg:x="2982713425" fg:w="113637669"/><text x="39.9883%" y="1295.50"></text></g><g><title>alloc::alloc::dealloc (113,637,669 samples, 1.51%)</title><rect x="39.7383%" y="1269" width="1.5140%" height="15" fill="rgb(238,90,54)" fg:x="2982713425" fg:w="113637669"/><text x="39.9883%" y="1279.50"></text></g><g><title>cfree@GLIBC_2.2.5 (109,729,905 samples, 1.46%)</title><rect x="39.7903%" y="1253" width="1.4619%" height="15" fill="rgb(213,208,19)" fg:x="2986621189" fg:w="109729905"/><text x="40.0403%" y="1263.50"></text></g><g><title>_int_free (86,058,291 samples, 1.15%)</title><rect x="40.1057%" y="1237" width="1.1465%" height="15" fill="rgb(233,156,4)" fg:x="3010292803" fg:w="86058291"/><text x="40.3557%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (125,570,044 samples, 1.67%)</title><rect x="39.6905%" y="1381" width="1.6730%" height="15" fill="rgb(207,194,5)" fg:x="2979125835" fg:w="125570044"/><text x="39.9405%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;char&gt;]&gt; (125,570,044 samples, 1.67%)</title><rect x="39.6905%" y="1365" width="1.6730%" height="15" fill="rgb(206,111,30)" fg:x="2979125835" fg:w="125570044"/><text x="39.9405%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;char&gt;&gt; (121,982,454 samples, 1.63%)</title><rect x="39.7383%" y="1349" width="1.6252%" height="15" fill="rgb(243,70,54)" fg:x="2982713425" fg:w="121982454"/><text x="39.9883%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;char&gt;&gt; (121,982,454 samples, 1.63%)</title><rect x="39.7383%" y="1333" width="1.6252%" height="15" fill="rgb(242,28,8)" fg:x="2982713425" fg:w="121982454"/><text x="39.9883%" y="1343.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121,982,454 samples, 1.63%)</title><rect x="39.7383%" y="1317" width="1.6252%" height="15" fill="rgb(219,106,18)" fg:x="2982713425" fg:w="121982454"/><text x="39.9883%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (121,982,454 samples, 1.63%)</title><rect x="39.7383%" y="1301" width="1.6252%" height="15" fill="rgb(244,222,10)" fg:x="2982713425" fg:w="121982454"/><text x="39.9883%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (8,344,785 samples, 0.11%)</title><rect x="41.2523%" y="1285" width="0.1112%" height="15" fill="rgb(236,179,52)" fg:x="3096351094" fg:w="8344785"/><text x="41.5023%" y="1295.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (4,245,303 samples, 0.06%)</title><rect x="41.3069%" y="1269" width="0.0566%" height="15" fill="rgb(213,23,39)" fg:x="3100450576" fg:w="4245303"/><text x="41.5569%" y="1279.50"></text></g><g><title>_RNvCs95KLPZDDxvS_7___rustc14___rust_dealloc (4,206,471 samples, 0.06%)</title><rect x="41.3634%" y="1301" width="0.0560%" height="15" fill="rgb(238,48,10)" fg:x="3104695879" fg:w="4206471"/><text x="41.6134%" y="1311.50"></text></g><g><title>_int_free (12,174,383 samples, 0.16%)</title><rect x="41.4195%" y="1285" width="0.1622%" height="15" fill="rgb(251,196,23)" fg:x="3108902350" fg:w="12174383"/><text x="41.6695%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;char&gt;&gt;&gt; (163,101,330 samples, 2.17%)</title><rect x="39.6905%" y="1397" width="2.1730%" height="15" fill="rgb(250,152,24)" fg:x="2979125835" fg:w="163101330"/><text x="39.9405%" y="1407.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;char&gt;&gt;&gt; (37,531,286 samples, 0.50%)</title><rect x="41.3634%" y="1381" width="0.5000%" height="15" fill="rgb(209,150,17)" fg:x="3104695879" fg:w="37531286"/><text x="41.6134%" y="1391.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37,531,286 samples, 0.50%)</title><rect x="41.3634%" y="1365" width="0.5000%" height="15" fill="rgb(234,202,34)" fg:x="3104695879" fg:w="37531286"/><text x="41.6134%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (37,531,286 samples, 0.50%)</title><rect x="41.3634%" y="1349" width="0.5000%" height="15" fill="rgb(253,148,53)" fg:x="3104695879" fg:w="37531286"/><text x="41.6134%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (37,531,286 samples, 0.50%)</title><rect x="41.3634%" y="1333" width="0.5000%" height="15" fill="rgb(218,129,16)" fg:x="3104695879" fg:w="37531286"/><text x="41.6134%" y="1343.50"></text></g><g><title>alloc::alloc::dealloc (37,531,286 samples, 0.50%)</title><rect x="41.3634%" y="1317" width="0.5000%" height="15" fill="rgb(216,85,19)" fg:x="3104695879" fg:w="37531286"/><text x="41.6134%" y="1327.50"></text></g><g><title>cfree@GLIBC_2.2.5 (33,324,815 samples, 0.44%)</title><rect x="41.4195%" y="1301" width="0.4440%" height="15" fill="rgb(235,228,7)" fg:x="3108902350" fg:w="33324815"/><text x="41.6695%" y="1311.50"></text></g><g><title>_int_free_merge_chunk (21,150,432 samples, 0.28%)</title><rect x="41.5817%" y="1285" width="0.2818%" height="15" fill="rgb(245,175,0)" fg:x="3121076733" fg:w="21150432"/><text x="41.8317%" y="1295.50"></text></g><g><title>_int_free_create_chunk (13,227,173 samples, 0.18%)</title><rect x="41.6872%" y="1269" width="0.1762%" height="15" fill="rgb(208,168,36)" fg:x="3128999992" fg:w="13227173"/><text x="41.9372%" y="1279.50"></text></g><g><title>unlink_chunk.isra.0 (3,957,712 samples, 0.05%)</title><rect x="41.8107%" y="1253" width="0.0527%" height="15" fill="rgb(246,171,24)" fg:x="3138269453" fg:w="3957712"/><text x="42.0607%" y="1263.50"></text></g><g><title>_RNvCs95KLPZDDxvS_7___rustc13___rdl_dealloc (7,777,419 samples, 0.10%)</title><rect x="41.9780%" y="1301" width="0.1036%" height="15" fill="rgb(215,142,24)" fg:x="3150822320" fg:w="7777419"/><text x="42.2280%" y="1311.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (4,025,185 samples, 0.05%)</title><rect x="42.0280%" y="1285" width="0.0536%" height="15" fill="rgb(250,187,7)" fg:x="3154574554" fg:w="4025185"/><text x="42.2780%" y="1295.50"></text></g><g><title>_RNvCs95KLPZDDxvS_7___rustc14___rust_dealloc (3,745,944 samples, 0.05%)</title><rect x="42.0816%" y="1301" width="0.0499%" height="15" fill="rgb(228,66,33)" fg:x="3158599739" fg:w="3745944"/><text x="42.3316%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (79,788,682 samples, 1.06%)</title><rect x="41.9264%" y="1333" width="1.0630%" height="15" fill="rgb(234,215,21)" fg:x="3146951236" fg:w="79788682"/><text x="42.1764%" y="1343.50"></text></g><g><title>alloc::alloc::dealloc (79,788,682 samples, 1.06%)</title><rect x="41.9264%" y="1317" width="1.0630%" height="15" fill="rgb(222,191,20)" fg:x="3146951236" fg:w="79788682"/><text x="42.1764%" y="1327.50"></text></g><g><title>cfree@GLIBC_2.2.5 (64,394,235 samples, 0.86%)</title><rect x="42.1315%" y="1301" width="0.8579%" height="15" fill="rgb(245,79,54)" fg:x="3162345683" fg:w="64394235"/><text x="42.3815%" y="1311.50"></text></g><g><title>_int_free (27,822,357 samples, 0.37%)</title><rect x="42.6187%" y="1285" width="0.3707%" height="15" fill="rgb(240,10,37)" fg:x="3198917561" fg:w="27822357"/><text x="42.8687%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (89,130,724 samples, 1.19%)</title><rect x="41.8635%" y="1397" width="1.1875%" height="15" fill="rgb(214,192,32)" fg:x="3142227165" fg:w="89130724"/><text x="42.1135%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (89,130,724 samples, 1.19%)</title><rect x="41.8635%" y="1381" width="1.1875%" height="15" fill="rgb(209,36,54)" fg:x="3142227165" fg:w="89130724"/><text x="42.1135%" y="1391.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (89,130,724 samples, 1.19%)</title><rect x="41.8635%" y="1365" width="1.1875%" height="15" fill="rgb(220,10,11)" fg:x="3142227165" fg:w="89130724"/><text x="42.1135%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (84,406,653 samples, 1.12%)</title><rect x="41.9264%" y="1349" width="1.1245%" height="15" fill="rgb(221,106,17)" fg:x="3146951236" fg:w="84406653"/><text x="42.1764%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (4,617,971 samples, 0.06%)</title><rect x="42.9894%" y="1333" width="0.0615%" height="15" fill="rgb(251,142,44)" fg:x="3226739918" fg:w="4617971"/><text x="43.2394%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;alloc::vec::Vec&lt;searchclient_rust::color::Color&gt;&gt;&gt; (4,238,179 samples, 0.06%)</title><rect x="43.1055%" y="1317" width="0.0565%" height="15" fill="rgb(238,13,15)" fg:x="3235451213" fg:w="4238179"/><text x="43.3555%" y="1327.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,238,179 samples, 0.06%)</title><rect x="43.1055%" y="1301" width="0.0565%" height="15" fill="rgb(208,107,27)" fg:x="3235451213" fg:w="4238179"/><text x="43.3555%" y="1311.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (4,238,179 samples, 0.06%)</title><rect x="43.1055%" y="1285" width="0.0565%" height="15" fill="rgb(205,136,37)" fg:x="3235451213" fg:w="4238179"/><text x="43.3555%" y="1295.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (4,238,179 samples, 0.06%)</title><rect x="43.1055%" y="1269" width="0.0565%" height="15" fill="rgb(250,205,27)" fg:x="3235451213" fg:w="4238179"/><text x="43.3555%" y="1279.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4,238,179 samples, 0.06%)</title><rect x="43.1055%" y="1253" width="0.0565%" height="15" fill="rgb(210,80,43)" fg:x="3235451213" fg:w="4238179"/><text x="43.3555%" y="1263.50"></text></g><g><title>core::mem::replace (4,238,179 samples, 0.06%)</title><rect x="43.1055%" y="1237" width="0.0565%" height="15" fill="rgb(247,160,36)" fg:x="3235451213" fg:w="4238179"/><text x="43.3555%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11,406,480 samples, 0.15%)</title><rect x="43.1619%" y="1205" width="0.1520%" height="15" fill="rgb(234,13,49)" fg:x="3239689392" fg:w="11406480"/><text x="43.4119%" y="1215.50"></text></g><g><title>alloc::alloc::dealloc (11,406,480 samples, 0.15%)</title><rect x="43.1619%" y="1189" width="0.1520%" height="15" fill="rgb(234,122,0)" fg:x="3239689392" fg:w="11406480"/><text x="43.4119%" y="1199.50"></text></g><g><title>cfree@GLIBC_2.2.5 (11,406,480 samples, 0.15%)</title><rect x="43.1619%" y="1173" width="0.1520%" height="15" fill="rgb(207,146,38)" fg:x="3239689392" fg:w="11406480"/><text x="43.4119%" y="1183.50"></text></g><g><title>_int_free (7,687,588 samples, 0.10%)</title><rect x="43.2115%" y="1157" width="0.1024%" height="15" fill="rgb(207,177,25)" fg:x="3243408284" fg:w="7687588"/><text x="43.4615%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;char&gt;&gt;&gt; (15,134,627 samples, 0.20%)</title><rect x="43.1619%" y="1317" width="0.2016%" height="15" fill="rgb(211,178,42)" fg:x="3239689392" fg:w="15134627"/><text x="43.4119%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15,134,627 samples, 0.20%)</title><rect x="43.1619%" y="1301" width="0.2016%" height="15" fill="rgb(230,69,54)" fg:x="3239689392" fg:w="15134627"/><text x="43.4119%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;char&gt;]&gt; (15,134,627 samples, 0.20%)</title><rect x="43.1619%" y="1285" width="0.2016%" height="15" fill="rgb(214,135,41)" fg:x="3239689392" fg:w="15134627"/><text x="43.4119%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;char&gt;&gt; (15,134,627 samples, 0.20%)</title><rect x="43.1619%" y="1269" width="0.2016%" height="15" fill="rgb(237,67,25)" fg:x="3239689392" fg:w="15134627"/><text x="43.4119%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;char&gt;&gt; (15,134,627 samples, 0.20%)</title><rect x="43.1619%" y="1253" width="0.2016%" height="15" fill="rgb(222,189,50)" fg:x="3239689392" fg:w="15134627"/><text x="43.4119%" y="1263.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15,134,627 samples, 0.20%)</title><rect x="43.1619%" y="1237" width="0.2016%" height="15" fill="rgb(245,148,34)" fg:x="3239689392" fg:w="15134627"/><text x="43.4119%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (15,134,627 samples, 0.20%)</title><rect x="43.1619%" y="1221" width="0.2016%" height="15" fill="rgb(222,29,6)" fg:x="3239689392" fg:w="15134627"/><text x="43.4119%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (3,728,147 samples, 0.05%)</title><rect x="43.3139%" y="1205" width="0.0497%" height="15" fill="rgb(221,189,43)" fg:x="3251095872" fg:w="3728147"/><text x="43.5639%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,880,151 samples, 0.05%)</title><rect x="43.3636%" y="1253" width="0.0517%" height="15" fill="rgb(207,36,27)" fg:x="3254824019" fg:w="3880151"/><text x="43.6136%" y="1263.50"></text></g><g><title>alloc::alloc::dealloc (3,880,151 samples, 0.05%)</title><rect x="43.3636%" y="1237" width="0.0517%" height="15" fill="rgb(217,90,24)" fg:x="3254824019" fg:w="3880151"/><text x="43.6136%" y="1247.50"></text></g><g><title>cfree@GLIBC_2.2.5 (3,880,151 samples, 0.05%)</title><rect x="43.3636%" y="1221" width="0.0517%" height="15" fill="rgb(224,66,35)" fg:x="3254824019" fg:w="3880151"/><text x="43.6136%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (7,906,280 samples, 0.11%)</title><rect x="43.3636%" y="1317" width="0.1053%" height="15" fill="rgb(221,13,50)" fg:x="3254824019" fg:w="7906280"/><text x="43.6136%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (7,906,280 samples, 0.11%)</title><rect x="43.3636%" y="1301" width="0.1053%" height="15" fill="rgb(236,68,49)" fg:x="3254824019" fg:w="7906280"/><text x="43.6136%" y="1311.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,906,280 samples, 0.11%)</title><rect x="43.3636%" y="1285" width="0.1053%" height="15" fill="rgb(229,146,28)" fg:x="3254824019" fg:w="7906280"/><text x="43.6136%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (7,906,280 samples, 0.11%)</title><rect x="43.3636%" y="1269" width="0.1053%" height="15" fill="rgb(225,31,38)" fg:x="3254824019" fg:w="7906280"/><text x="43.6136%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (4,026,129 samples, 0.05%)</title><rect x="43.4153%" y="1253" width="0.0536%" height="15" fill="rgb(250,208,3)" fg:x="3258704170" fg:w="4026129"/><text x="43.6653%" y="1263.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (4,026,129 samples, 0.05%)</title><rect x="43.4153%" y="1237" width="0.0536%" height="15" fill="rgb(246,54,23)" fg:x="3258704170" fg:w="4026129"/><text x="43.6653%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;char&gt;&gt;&gt; (4,087,525 samples, 0.05%)</title><rect x="43.4689%" y="1237" width="0.0545%" height="15" fill="rgb(243,76,11)" fg:x="3262730299" fg:w="4087525"/><text x="43.7189%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,087,525 samples, 0.05%)</title><rect x="43.4689%" y="1221" width="0.0545%" height="15" fill="rgb(245,21,50)" fg:x="3262730299" fg:w="4087525"/><text x="43.7189%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;char&gt;]&gt; (4,087,525 samples, 0.05%)</title><rect x="43.4689%" y="1205" width="0.0545%" height="15" fill="rgb(228,9,43)" fg:x="3262730299" fg:w="4087525"/><text x="43.7189%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;char&gt;&gt; (4,087,525 samples, 0.05%)</title><rect x="43.4689%" y="1189" width="0.0545%" height="15" fill="rgb(208,100,47)" fg:x="3262730299" fg:w="4087525"/><text x="43.7189%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;char&gt;&gt; (4,087,525 samples, 0.05%)</title><rect x="43.4689%" y="1173" width="0.0545%" height="15" fill="rgb(232,26,8)" fg:x="3262730299" fg:w="4087525"/><text x="43.7189%" y="1183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,087,525 samples, 0.05%)</title><rect x="43.4689%" y="1157" width="0.0545%" height="15" fill="rgb(216,166,38)" fg:x="3262730299" fg:w="4087525"/><text x="43.7189%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,087,525 samples, 0.05%)</title><rect x="43.4689%" y="1141" width="0.0545%" height="15" fill="rgb(251,202,51)" fg:x="3262730299" fg:w="4087525"/><text x="43.7189%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,087,525 samples, 0.05%)</title><rect x="43.4689%" y="1125" width="0.0545%" height="15" fill="rgb(254,216,34)" fg:x="3262730299" fg:w="4087525"/><text x="43.7189%" y="1135.50"></text></g><g><title>alloc::alloc::dealloc (4,087,525 samples, 0.05%)</title><rect x="43.4689%" y="1109" width="0.0545%" height="15" fill="rgb(251,32,27)" fg:x="3262730299" fg:w="4087525"/><text x="43.7189%" y="1119.50"></text></g><g><title>cfree@GLIBC_2.2.5 (4,087,525 samples, 0.05%)</title><rect x="43.4689%" y="1093" width="0.0545%" height="15" fill="rgb(208,127,28)" fg:x="3262730299" fg:w="4087525"/><text x="43.7189%" y="1103.50"></text></g><g><title>_int_free (4,087,525 samples, 0.05%)</title><rect x="43.4689%" y="1077" width="0.0545%" height="15" fill="rgb(224,137,22)" fg:x="3262730299" fg:w="4087525"/><text x="43.7189%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (3,787,121 samples, 0.05%)</title><rect x="43.5234%" y="1157" width="0.0505%" height="15" fill="rgb(254,70,32)" fg:x="3266817824" fg:w="3787121"/><text x="43.7734%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (3,787,121 samples, 0.05%)</title><rect x="43.5234%" y="1141" width="0.0505%" height="15" fill="rgb(229,75,37)" fg:x="3266817824" fg:w="3787121"/><text x="43.7734%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,787,121 samples, 0.05%)</title><rect x="43.5234%" y="1125" width="0.0505%" height="15" fill="rgb(252,64,23)" fg:x="3266817824" fg:w="3787121"/><text x="43.7734%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,787,121 samples, 0.05%)</title><rect x="43.5234%" y="1109" width="0.0505%" height="15" fill="rgb(232,162,48)" fg:x="3266817824" fg:w="3787121"/><text x="43.7734%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (3,787,121 samples, 0.05%)</title><rect x="43.5234%" y="1093" width="0.0505%" height="15" fill="rgb(246,160,12)" fg:x="3266817824" fg:w="3787121"/><text x="43.7734%" y="1103.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::drop_slow (39,160,653 samples, 0.52%)</title><rect x="43.1055%" y="1349" width="0.5217%" height="15" fill="rgb(247,166,0)" fg:x="3235451213" fg:w="39160653"/><text x="43.3555%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;searchclient_rust::state::State&gt; (39,160,653 samples, 0.52%)</title><rect x="43.1055%" y="1333" width="0.5217%" height="15" fill="rgb(249,219,21)" fg:x="3235451213" fg:w="39160653"/><text x="43.3555%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt;&gt; (11,881,567 samples, 0.16%)</title><rect x="43.4689%" y="1317" width="0.1583%" height="15" fill="rgb(205,209,3)" fg:x="3262730299" fg:w="11881567"/><text x="43.7189%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt; (11,881,567 samples, 0.16%)</title><rect x="43.4689%" y="1301" width="0.1583%" height="15" fill="rgb(243,44,1)" fg:x="3262730299" fg:w="11881567"/><text x="43.7189%" y="1311.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11,881,567 samples, 0.16%)</title><rect x="43.4689%" y="1285" width="0.1583%" height="15" fill="rgb(206,159,16)" fg:x="3262730299" fg:w="11881567"/><text x="43.7189%" y="1295.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::drop_slow (11,881,567 samples, 0.16%)</title><rect x="43.4689%" y="1269" width="0.1583%" height="15" fill="rgb(244,77,30)" fg:x="3262730299" fg:w="11881567"/><text x="43.7189%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;searchclient_rust::state::State&gt; (11,881,567 samples, 0.16%)</title><rect x="43.4689%" y="1253" width="0.1583%" height="15" fill="rgb(218,69,12)" fg:x="3262730299" fg:w="11881567"/><text x="43.7189%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt;&gt; (7,794,042 samples, 0.10%)</title><rect x="43.5234%" y="1237" width="0.1038%" height="15" fill="rgb(212,87,7)" fg:x="3266817824" fg:w="7794042"/><text x="43.7734%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt; (7,794,042 samples, 0.10%)</title><rect x="43.5234%" y="1221" width="0.1038%" height="15" fill="rgb(245,114,25)" fg:x="3266817824" fg:w="7794042"/><text x="43.7734%" y="1231.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,794,042 samples, 0.10%)</title><rect x="43.5234%" y="1205" width="0.1038%" height="15" fill="rgb(210,61,42)" fg:x="3266817824" fg:w="7794042"/><text x="43.7734%" y="1215.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::drop_slow (7,794,042 samples, 0.10%)</title><rect x="43.5234%" y="1189" width="0.1038%" height="15" fill="rgb(211,52,33)" fg:x="3266817824" fg:w="7794042"/><text x="43.7734%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;searchclient_rust::state::State&gt; (7,794,042 samples, 0.10%)</title><rect x="43.5234%" y="1173" width="0.1038%" height="15" fill="rgb(234,58,33)" fg:x="3266817824" fg:w="7794042"/><text x="43.7734%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt;&gt; (4,006,921 samples, 0.05%)</title><rect x="43.5738%" y="1157" width="0.0534%" height="15" fill="rgb(220,115,36)" fg:x="3270604945" fg:w="4006921"/><text x="43.8238%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt; (4,006,921 samples, 0.05%)</title><rect x="43.5738%" y="1141" width="0.0534%" height="15" fill="rgb(243,153,54)" fg:x="3270604945" fg:w="4006921"/><text x="43.8238%" y="1151.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,006,921 samples, 0.05%)</title><rect x="43.5738%" y="1125" width="0.0534%" height="15" fill="rgb(251,47,18)" fg:x="3270604945" fg:w="4006921"/><text x="43.8238%" y="1135.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::drop_slow (4,006,921 samples, 0.05%)</title><rect x="43.5738%" y="1109" width="0.0534%" height="15" fill="rgb(242,102,42)" fg:x="3270604945" fg:w="4006921"/><text x="43.8238%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;searchclient_rust::state::State&gt; (4,006,921 samples, 0.05%)</title><rect x="43.5738%" y="1093" width="0.0534%" height="15" fill="rgb(234,31,38)" fg:x="3270604945" fg:w="4006921"/><text x="43.8238%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt;&gt; (4,006,921 samples, 0.05%)</title><rect x="43.5738%" y="1077" width="0.0534%" height="15" fill="rgb(221,117,51)" fg:x="3270604945" fg:w="4006921"/><text x="43.8238%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt; (4,006,921 samples, 0.05%)</title><rect x="43.5738%" y="1061" width="0.0534%" height="15" fill="rgb(212,20,18)" fg:x="3270604945" fg:w="4006921"/><text x="43.8238%" y="1071.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,006,921 samples, 0.05%)</title><rect x="43.5738%" y="1045" width="0.0534%" height="15" fill="rgb(245,133,36)" fg:x="3270604945" fg:w="4006921"/><text x="43.8238%" y="1055.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::drop_slow (4,006,921 samples, 0.05%)</title><rect x="43.5738%" y="1029" width="0.0534%" height="15" fill="rgb(212,6,19)" fg:x="3270604945" fg:w="4006921"/><text x="43.8238%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;searchclient_rust::state::State&gt; (4,006,921 samples, 0.05%)</title><rect x="43.5738%" y="1013" width="0.0534%" height="15" fill="rgb(218,1,36)" fg:x="3270604945" fg:w="4006921"/><text x="43.8238%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt;&gt; (4,006,921 samples, 0.05%)</title><rect x="43.5738%" y="997" width="0.0534%" height="15" fill="rgb(246,84,54)" fg:x="3270604945" fg:w="4006921"/><text x="43.8238%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt; (4,006,921 samples, 0.05%)</title><rect x="43.5738%" y="981" width="0.0534%" height="15" fill="rgb(242,110,6)" fg:x="3270604945" fg:w="4006921"/><text x="43.8238%" y="991.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,006,921 samples, 0.05%)</title><rect x="43.5738%" y="965" width="0.0534%" height="15" fill="rgb(214,47,5)" fg:x="3270604945" fg:w="4006921"/><text x="43.8238%" y="975.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::drop_slow (4,006,921 samples, 0.05%)</title><rect x="43.5738%" y="949" width="0.0534%" height="15" fill="rgb(218,159,25)" fg:x="3270604945" fg:w="4006921"/><text x="43.8238%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;searchclient_rust::state::State&gt; (4,006,921 samples, 0.05%)</title><rect x="43.5738%" y="933" width="0.0534%" height="15" fill="rgb(215,211,28)" fg:x="3270604945" fg:w="4006921"/><text x="43.8238%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt;&gt; (4,006,921 samples, 0.05%)</title><rect x="43.5738%" y="917" width="0.0534%" height="15" fill="rgb(238,59,32)" fg:x="3270604945" fg:w="4006921"/><text x="43.8238%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt; (4,006,921 samples, 0.05%)</title><rect x="43.5738%" y="901" width="0.0534%" height="15" fill="rgb(226,82,3)" fg:x="3270604945" fg:w="4006921"/><text x="43.8238%" y="911.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,006,921 samples, 0.05%)</title><rect x="43.5738%" y="885" width="0.0534%" height="15" fill="rgb(240,164,32)" fg:x="3270604945" fg:w="4006921"/><text x="43.8238%" y="895.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::drop_slow (4,006,921 samples, 0.05%)</title><rect x="43.5738%" y="869" width="0.0534%" height="15" fill="rgb(232,46,7)" fg:x="3270604945" fg:w="4006921"/><text x="43.8238%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;searchclient_rust::state::State&gt; (4,006,921 samples, 0.05%)</title><rect x="43.5738%" y="853" width="0.0534%" height="15" fill="rgb(229,129,53)" fg:x="3270604945" fg:w="4006921"/><text x="43.8238%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt;&gt; (4,006,921 samples, 0.05%)</title><rect x="43.5738%" y="837" width="0.0534%" height="15" fill="rgb(234,188,29)" fg:x="3270604945" fg:w="4006921"/><text x="43.8238%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt; (4,006,921 samples, 0.05%)</title><rect x="43.5738%" y="821" width="0.0534%" height="15" fill="rgb(246,141,4)" fg:x="3270604945" fg:w="4006921"/><text x="43.8238%" y="831.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,006,921 samples, 0.05%)</title><rect x="43.5738%" y="805" width="0.0534%" height="15" fill="rgb(229,23,39)" fg:x="3270604945" fg:w="4006921"/><text x="43.8238%" y="815.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::drop_slow (327,146,157 samples, 4.36%)</title><rect x="39.3697%" y="1429" width="4.3585%" height="15" fill="rgb(206,12,3)" fg:x="2955051857" fg:w="327146157"/><text x="39.6197%" y="1439.50">alloc..</text></g><g><title>core::ptr::drop_in_place&lt;searchclient_rust::state::State&gt; (307,699,358 samples, 4.10%)</title><rect x="39.6288%" y="1413" width="4.0994%" height="15" fill="rgb(252,226,20)" fg:x="2974498656" fg:w="307699358"/><text x="39.8788%" y="1423.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt;&gt; (50,840,125 samples, 0.68%)</title><rect x="43.0509%" y="1397" width="0.6773%" height="15" fill="rgb(216,123,35)" fg:x="3231357889" fg:w="50840125"/><text x="43.3009%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt; (50,840,125 samples, 0.68%)</title><rect x="43.0509%" y="1381" width="0.6773%" height="15" fill="rgb(212,68,40)" fg:x="3231357889" fg:w="50840125"/><text x="43.3009%" y="1391.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50,840,125 samples, 0.68%)</title><rect x="43.0509%" y="1365" width="0.6773%" height="15" fill="rgb(254,125,32)" fg:x="3231357889" fg:w="50840125"/><text x="43.3009%" y="1375.50"></text></g><g><title>cfree@GLIBC_2.2.5 (7,586,148 samples, 0.10%)</title><rect x="43.6272%" y="1349" width="0.1011%" height="15" fill="rgb(253,97,22)" fg:x="3274611866" fg:w="7586148"/><text x="43.8772%" y="1359.50"></text></g><g><title>_int_free_merge_chunk (7,586,148 samples, 0.10%)</title><rect x="43.6272%" y="1333" width="0.1011%" height="15" fill="rgb(241,101,14)" fg:x="3274611866" fg:w="7586148"/><text x="43.8772%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt;&gt; (343,004,288 samples, 4.57%)</title><rect x="39.2672%" y="1477" width="4.5698%" height="15" fill="rgb(238,103,29)" fg:x="2947358395" fg:w="343004288"/><text x="39.5172%" y="1487.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;searchclient_rust::state::State&gt;&gt; (343,004,288 samples, 4.57%)</title><rect x="39.2672%" y="1461" width="4.5698%" height="15" fill="rgb(233,195,47)" fg:x="2947358395" fg:w="343004288"/><text x="39.5172%" y="1471.50">core:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (343,004,288 samples, 4.57%)</title><rect x="39.2672%" y="1445" width="4.5698%" height="15" fill="rgb(246,218,30)" fg:x="2947358395" fg:w="343004288"/><text x="39.5172%" y="1455.50">&lt;allo..</text></g><g><title>cfree@GLIBC_2.2.5 (8,164,669 samples, 0.11%)</title><rect x="43.7283%" y="1429" width="0.1088%" height="15" fill="rgb(219,145,47)" fg:x="3282198014" fg:w="8164669"/><text x="43.9783%" y="1439.50"></text></g><g><title>_int_free_merge_chunk (8,164,669 samples, 0.11%)</title><rect x="43.7283%" y="1413" width="0.1088%" height="15" fill="rgb(243,12,26)" fg:x="3282198014" fg:w="8164669"/><text x="43.9783%" y="1423.50"></text></g><g><title>_int_free_create_chunk (8,164,669 samples, 0.11%)</title><rect x="43.7283%" y="1397" width="0.1088%" height="15" fill="rgb(214,87,16)" fg:x="3282198014" fg:w="8164669"/><text x="43.9783%" y="1407.50"></text></g><g><title>unlink_chunk.isra.0 (4,174,072 samples, 0.06%)</title><rect x="43.7814%" y="1381" width="0.0556%" height="15" fill="rgb(208,99,42)" fg:x="3286188611" fg:w="4174072"/><text x="44.0314%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;searchclient_rust::state::State&gt; (1,104,985,266 samples, 14.72%)</title><rect x="29.2884%" y="1493" width="14.7216%" height="15" fill="rgb(253,99,2)" fg:x="2198355280" fg:w="1104985266"/><text x="29.5384%" y="1503.50">core::ptr::drop_in_pla..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;searchclient_rust::action::Action&gt;&gt;&gt; (12,977,863 samples, 0.17%)</title><rect x="43.8370%" y="1477" width="0.1729%" height="15" fill="rgb(220,168,23)" fg:x="3290362683" fg:w="12977863"/><text x="44.0870%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;searchclient_rust::action::Action&gt;&gt; (4,658,247 samples, 0.06%)</title><rect x="43.9479%" y="1461" width="0.0621%" height="15" fill="rgb(242,38,24)" fg:x="3298682299" fg:w="4658247"/><text x="44.1979%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;searchclient_rust::action::Action&gt;&gt; (4,658,247 samples, 0.06%)</title><rect x="43.9479%" y="1445" width="0.0621%" height="15" fill="rgb(225,182,9)" fg:x="3298682299" fg:w="4658247"/><text x="44.1979%" y="1455.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,658,247 samples, 0.06%)</title><rect x="43.9479%" y="1429" width="0.0621%" height="15" fill="rgb(243,178,37)" fg:x="3298682299" fg:w="4658247"/><text x="44.1979%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,658,247 samples, 0.06%)</title><rect x="43.9479%" y="1413" width="0.0621%" height="15" fill="rgb(232,139,19)" fg:x="3298682299" fg:w="4658247"/><text x="44.1979%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (4,658,247 samples, 0.06%)</title><rect x="43.9479%" y="1397" width="0.0621%" height="15" fill="rgb(225,201,24)" fg:x="3298682299" fg:w="4658247"/><text x="44.1979%" y="1407.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,504,928 samples, 0.06%)</title><rect x="45.0460%" y="1477" width="0.0600%" height="15" fill="rgb(221,47,46)" fg:x="3381104418" fg:w="4504928"/><text x="45.2960%" y="1487.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (4,504,928 samples, 0.06%)</title><rect x="45.0460%" y="1461" width="0.0600%" height="15" fill="rgb(249,23,13)" fg:x="3381104418" fg:w="4504928"/><text x="45.2960%" y="1471.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10,928,141 samples, 0.15%)</title><rect x="45.1060%" y="1477" width="0.1456%" height="15" fill="rgb(219,9,5)" fg:x="3385609346" fg:w="10928141"/><text x="45.3560%" y="1487.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (10,928,141 samples, 0.15%)</title><rect x="45.1060%" y="1461" width="0.1456%" height="15" fill="rgb(254,171,16)" fg:x="3385609346" fg:w="10928141"/><text x="45.3560%" y="1471.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (4,145,560 samples, 0.06%)</title><rect x="45.2516%" y="1477" width="0.0552%" height="15" fill="rgb(230,171,20)" fg:x="3396537487" fg:w="4145560"/><text x="45.5016%" y="1487.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4,145,560 samples, 0.06%)</title><rect x="45.2516%" y="1461" width="0.0552%" height="15" fill="rgb(210,71,41)" fg:x="3396537487" fg:w="4145560"/><text x="45.5016%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4,145,560 samples, 0.06%)</title><rect x="45.2516%" y="1445" width="0.0552%" height="15" fill="rgb(206,173,20)" fg:x="3396537487" fg:w="4145560"/><text x="45.5016%" y="1455.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (95,536,961 samples, 1.27%)</title><rect x="48.3117%" y="1381" width="1.2728%" height="15" fill="rgb(233,88,34)" fg:x="3626223556" fg:w="95536961"/><text x="48.5617%" y="1391.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (222,607,953 samples, 2.97%)</title><rect x="47.2514%" y="1397" width="2.9658%" height="15" fill="rgb(223,209,46)" fg:x="3546640075" fg:w="222607953"/><text x="47.5014%" y="1407.50">&lt;co..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (47,487,511 samples, 0.63%)</title><rect x="49.5845%" y="1381" width="0.6327%" height="15" fill="rgb(250,43,18)" fg:x="3721760517" fg:w="47487511"/><text x="49.8345%" y="1391.50"></text></g><g><title>core::cmp::min (7,582,219 samples, 0.10%)</title><rect x="50.2172%" y="1397" width="0.1010%" height="15" fill="rgb(208,13,10)" fg:x="3769248028" fg:w="7582219"/><text x="50.4672%" y="1407.50"></text></g><g><title>core::cmp::Ord::min (7,582,219 samples, 0.10%)</title><rect x="50.2172%" y="1381" width="0.1010%" height="15" fill="rgb(212,200,36)" fg:x="3769248028" fg:w="7582219"/><text x="50.4672%" y="1391.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (597,944,731 samples, 7.97%)</title><rect x="45.3068%" y="1445" width="7.9663%" height="15" fill="rgb(225,90,30)" fg:x="3400683047" fg:w="597944731"/><text x="45.5568%" y="1455.50">&lt;std::hash:..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (597,944,731 samples, 7.97%)</title><rect x="45.3068%" y="1429" width="7.9663%" height="15" fill="rgb(236,182,39)" fg:x="3400683047" fg:w="597944731"/><text x="45.5568%" y="1439.50">&lt;core::hash..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (597,944,731 samples, 7.97%)</title><rect x="45.3068%" y="1413" width="7.9663%" height="15" fill="rgb(212,144,35)" fg:x="3400683047" fg:w="597944731"/><text x="45.5568%" y="1423.50">&lt;core::hash..</text></g><g><title>core::hash::sip::u8to64_le (221,797,531 samples, 2.95%)</title><rect x="50.3182%" y="1397" width="2.9550%" height="15" fill="rgb(228,63,44)" fg:x="3776830247" fg:w="221797531"/><text x="50.5682%" y="1407.50">cor..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (639,208,820 samples, 8.52%)</title><rect x="45.3068%" y="1477" width="8.5161%" height="15" fill="rgb(228,109,6)" fg:x="3400683047" fg:w="639208820"/><text x="45.5568%" y="1487.50">core::hash::..</text></g><g><title>core::hash::Hasher::write_u32 (639,208,820 samples, 8.52%)</title><rect x="45.3068%" y="1461" width="8.5161%" height="15" fill="rgb(238,117,24)" fg:x="3400683047" fg:w="639208820"/><text x="45.5568%" y="1471.50">core::hash::..</text></g><g><title>core::num::&lt;impl u32&gt;::to_ne_bytes (41,264,089 samples, 0.55%)</title><rect x="53.2732%" y="1445" width="0.5498%" height="15" fill="rgb(242,26,26)" fg:x="3998627778" fg:w="41264089"/><text x="53.5232%" y="1455.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (20,631,396 samples, 0.27%)</title><rect x="53.8229%" y="1477" width="0.2749%" height="15" fill="rgb(221,92,48)" fg:x="4039891867" fg:w="20631396"/><text x="54.0729%" y="1487.50"></text></g><g><title>core::hash::Hasher::write_usize (20,631,396 samples, 0.27%)</title><rect x="53.8229%" y="1461" width="0.2749%" height="15" fill="rgb(209,209,32)" fg:x="4039891867" fg:w="20631396"/><text x="54.0729%" y="1471.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (20,631,396 samples, 0.27%)</title><rect x="53.8229%" y="1445" width="0.2749%" height="15" fill="rgb(221,70,22)" fg:x="4039891867" fg:w="20631396"/><text x="54.0729%" y="1455.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (20,631,396 samples, 0.27%)</title><rect x="53.8229%" y="1429" width="0.2749%" height="15" fill="rgb(248,145,5)" fg:x="4039891867" fg:w="20631396"/><text x="54.0729%" y="1439.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17,108,424 samples, 0.23%)</title><rect x="53.8699%" y="1413" width="0.2279%" height="15" fill="rgb(226,116,26)" fg:x="4043414839" fg:w="17108424"/><text x="54.1199%" y="1423.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4,773,249 samples, 0.06%)</title><rect x="54.0342%" y="1397" width="0.0636%" height="15" fill="rgb(244,5,17)" fg:x="4055750014" fg:w="4773249"/><text x="54.2842%" y="1407.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4,773,240 samples, 0.06%)</title><rect x="54.0342%" y="1381" width="0.0636%" height="15" fill="rgb(252,159,33)" fg:x="4055750023" fg:w="4773240"/><text x="54.2842%" y="1391.50"></text></g><g><title>searchclient_rust::state::State::calculate_hash (760,963,958 samples, 10.14%)</title><rect x="44.0099%" y="1493" width="10.1382%" height="15" fill="rgb(206,71,0)" fg:x="3303340546" fg:w="760963958"/><text x="44.2599%" y="1503.50">searchclient_ru..</text></g><g><title>std::hash::random::DefaultHasher::new (3,781,241 samples, 0.05%)</title><rect x="54.0978%" y="1477" width="0.0504%" height="15" fill="rgb(233,118,54)" fg:x="4060523263" fg:w="3781241"/><text x="54.3478%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (7,141,042 samples, 0.10%)</title><rect x="54.3618%" y="1461" width="0.0951%" height="15" fill="rgb(234,83,48)" fg:x="4080342382" fg:w="7141042"/><text x="54.6118%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (7,141,042 samples, 0.10%)</title><rect x="54.3618%" y="1445" width="0.0951%" height="15" fill="rgb(228,3,54)" fg:x="4080342382" fg:w="7141042"/><text x="54.6118%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (7,141,042 samples, 0.10%)</title><rect x="54.3618%" y="1429" width="0.0951%" height="15" fill="rgb(226,155,13)" fg:x="4080342382" fg:w="7141042"/><text x="54.6118%" y="1439.50"></text></g><g><title>alloc::raw_vec::finish_grow (7,141,042 samples, 0.10%)</title><rect x="54.3618%" y="1413" width="0.0951%" height="15" fill="rgb(241,28,37)" fg:x="4080342382" fg:w="7141042"/><text x="54.6118%" y="1423.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (3,511,306 samples, 0.05%)</title><rect x="54.4102%" y="1397" width="0.0468%" height="15" fill="rgb(233,93,10)" fg:x="4083972118" fg:w="3511306"/><text x="54.6602%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11,829,419 samples, 0.16%)</title><rect x="54.3618%" y="1477" width="0.1576%" height="15" fill="rgb(225,113,19)" fg:x="4080342382" fg:w="11829419"/><text x="54.6118%" y="1487.50"></text></g><g><title>core::ptr::write (4,688,377 samples, 0.06%)</title><rect x="54.4570%" y="1461" width="0.0625%" height="15" fill="rgb(241,2,18)" fg:x="4087483424" fg:w="4688377"/><text x="54.7070%" y="1471.50"></text></g><g><title>_RNvCs95KLPZDDxvS_7___rustc11___rdl_alloc (4,758,295 samples, 0.06%)</title><rect x="54.6914%" y="1269" width="0.0634%" height="15" fill="rgb(228,207,21)" fg:x="4105080325" fg:w="4758295"/><text x="54.9414%" y="1279.50"></text></g><g><title>_RNvCs95KLPZDDxvS_7___rustc12___rust_alloc (4,179,919 samples, 0.06%)</title><rect x="54.7548%" y="1269" width="0.0557%" height="15" fill="rgb(213,211,35)" fg:x="4109838620" fg:w="4179919"/><text x="55.0048%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17,853,344 samples, 0.24%)</title><rect x="54.6914%" y="1429" width="0.2379%" height="15" fill="rgb(209,83,10)" fg:x="4105080325" fg:w="17853344"/><text x="54.9414%" y="1439.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17,853,344 samples, 0.24%)</title><rect x="54.6914%" y="1413" width="0.2379%" height="15" fill="rgb(209,164,1)" fg:x="4105080325" fg:w="17853344"/><text x="54.9414%" y="1423.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (17,853,344 samples, 0.24%)</title><rect x="54.6914%" y="1397" width="0.2379%" height="15" fill="rgb(213,184,43)" fg:x="4105080325" fg:w="17853344"/><text x="54.9414%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17,853,344 samples, 0.24%)</title><rect x="54.6914%" y="1381" width="0.2379%" height="15" fill="rgb(231,61,34)" fg:x="4105080325" fg:w="17853344"/><text x="54.9414%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17,853,344 samples, 0.24%)</title><rect x="54.6914%" y="1365" width="0.2379%" height="15" fill="rgb(235,75,3)" fg:x="4105080325" fg:w="17853344"/><text x="54.9414%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (17,853,344 samples, 0.24%)</title><rect x="54.6914%" y="1349" width="0.2379%" height="15" fill="rgb(220,106,47)" fg:x="4105080325" fg:w="17853344"/><text x="54.9414%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (17,853,344 samples, 0.24%)</title><rect x="54.6914%" y="1333" width="0.2379%" height="15" fill="rgb(210,196,33)" fg:x="4105080325" fg:w="17853344"/><text x="54.9414%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17,853,344 samples, 0.24%)</title><rect x="54.6914%" y="1317" width="0.2379%" height="15" fill="rgb(229,154,42)" fg:x="4105080325" fg:w="17853344"/><text x="54.9414%" y="1327.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17,853,344 samples, 0.24%)</title><rect x="54.6914%" y="1301" width="0.2379%" height="15" fill="rgb(228,114,26)" fg:x="4105080325" fg:w="17853344"/><text x="54.9414%" y="1311.50"></text></g><g><title>alloc::alloc::alloc (17,853,344 samples, 0.24%)</title><rect x="54.6914%" y="1285" width="0.2379%" height="15" fill="rgb(208,144,1)" fg:x="4105080325" fg:w="17853344"/><text x="54.9414%" y="1295.50"></text></g><g><title>malloc (8,915,130 samples, 0.12%)</title><rect x="54.8105%" y="1269" width="0.1188%" height="15" fill="rgb(239,112,37)" fg:x="4114018539" fg:w="8915130"/><text x="55.0605%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (17,371,820 samples, 0.23%)</title><rect x="55.2055%" y="1397" width="0.2314%" height="15" fill="rgb(210,96,50)" fg:x="4143663424" fg:w="17371820"/><text x="55.4555%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (17,371,820 samples, 0.23%)</title><rect x="55.2055%" y="1381" width="0.2314%" height="15" fill="rgb(222,178,2)" fg:x="4143663424" fg:w="17371820"/><text x="55.4555%" y="1391.50"></text></g><g><title>_RNvCs95KLPZDDxvS_7___rustc11___rdl_alloc (4,037,859 samples, 0.05%)</title><rect x="55.6617%" y="1205" width="0.0538%" height="15" fill="rgb(226,74,18)" fg:x="4177905455" fg:w="4037859"/><text x="55.9117%" y="1215.50"></text></g><g><title>_RNvCs95KLPZDDxvS_7___rustc12___rust_alloc (3,568,352 samples, 0.05%)</title><rect x="55.7155%" y="1205" width="0.0475%" height="15" fill="rgb(225,67,54)" fg:x="4181943314" fg:w="3568352"/><text x="55.9655%" y="1215.50"></text></g><g><title>alloc_perturb (4,665,603 samples, 0.06%)</title><rect x="57.8832%" y="1173" width="0.0622%" height="15" fill="rgb(251,92,32)" fg:x="4344651502" fg:w="4665603"/><text x="58.1332%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (219,033,660 samples, 2.92%)</title><rect x="55.6617%" y="1253" width="2.9182%" height="15" fill="rgb(228,149,22)" fg:x="4177905455" fg:w="219033660"/><text x="55.9117%" y="1263.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (219,033,660 samples, 2.92%)</title><rect x="55.6617%" y="1237" width="2.9182%" height="15" fill="rgb(243,54,13)" fg:x="4177905455" fg:w="219033660"/><text x="55.9117%" y="1247.50">al..</text></g><g><title>alloc::alloc::alloc (219,033,660 samples, 2.92%)</title><rect x="55.6617%" y="1221" width="2.9182%" height="15" fill="rgb(243,180,28)" fg:x="4177905455" fg:w="219033660"/><text x="55.9117%" y="1231.50">al..</text></g><g><title>malloc (211,427,449 samples, 2.82%)</title><rect x="55.7630%" y="1205" width="2.8168%" height="15" fill="rgb(208,167,24)" fg:x="4185511666" fg:w="211427449"/><text x="56.0130%" y="1215.50">ma..</text></g><g><title>_int_malloc (170,608,710 samples, 2.27%)</title><rect x="56.3068%" y="1189" width="2.2730%" height="15" fill="rgb(245,73,45)" fg:x="4226330405" fg:w="170608710"/><text x="56.5568%" y="1199.50">_..</text></g><g><title>unlink_chunk.isra.0 (47,622,010 samples, 0.63%)</title><rect x="57.9453%" y="1173" width="0.6345%" height="15" fill="rgb(237,203,48)" fg:x="4349317105" fg:w="47622010"/><text x="58.1953%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (235,280,271 samples, 3.13%)</title><rect x="55.5550%" y="1317" width="3.1346%" height="15" fill="rgb(211,197,16)" fg:x="4169898381" fg:w="235280271"/><text x="55.8050%" y="1327.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (235,280,271 samples, 3.13%)</title><rect x="55.5550%" y="1301" width="3.1346%" height="15" fill="rgb(243,99,51)" fg:x="4169898381" fg:w="235280271"/><text x="55.8050%" y="1311.50">all..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (235,280,271 samples, 3.13%)</title><rect x="55.5550%" y="1285" width="3.1346%" height="15" fill="rgb(215,123,29)" fg:x="4169898381" fg:w="235280271"/><text x="55.8050%" y="1295.50">all..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (235,280,271 samples, 3.13%)</title><rect x="55.5550%" y="1269" width="3.1346%" height="15" fill="rgb(239,186,37)" fg:x="4169898381" fg:w="235280271"/><text x="55.8050%" y="1279.50">all..</text></g><g><title>alloc::raw_vec::layout_array (8,239,537 samples, 0.11%)</title><rect x="58.5798%" y="1253" width="0.1098%" height="15" fill="rgb(252,136,39)" fg:x="4396939115" fg:w="8239537"/><text x="58.8298%" y="1263.50"></text></g><g><title>core::alloc::layout::Layout::repeat (8,239,537 samples, 0.11%)</title><rect x="58.5798%" y="1237" width="0.1098%" height="15" fill="rgb(223,213,32)" fg:x="4396939115" fg:w="8239537"/><text x="58.8298%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (286,804,006 samples, 3.82%)</title><rect x="55.5550%" y="1365" width="3.8210%" height="15" fill="rgb(233,115,5)" fg:x="4169898381" fg:w="286804006"/><text x="55.8050%" y="1375.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (286,804,006 samples, 3.82%)</title><rect x="55.5550%" y="1349" width="3.8210%" height="15" fill="rgb(207,226,44)" fg:x="4169898381" fg:w="286804006"/><text x="55.8050%" y="1359.50">allo..</text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (286,804,006 samples, 3.82%)</title><rect x="55.5550%" y="1333" width="3.8210%" height="15" fill="rgb(208,126,0)" fg:x="4169898381" fg:w="286804006"/><text x="55.8050%" y="1343.50">&lt;T a..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (51,523,735 samples, 0.69%)</title><rect x="58.6896%" y="1317" width="0.6864%" height="15" fill="rgb(244,66,21)" fg:x="4405178652" fg:w="51523735"/><text x="58.9396%" y="1327.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (51,523,735 samples, 0.69%)</title><rect x="58.6896%" y="1301" width="0.6864%" height="15" fill="rgb(222,97,12)" fg:x="4405178652" fg:w="51523735"/><text x="58.9396%" y="1311.50"></text></g><g><title>__memmove_avx512_unaligned_erms (47,294,403 samples, 0.63%)</title><rect x="58.7459%" y="1285" width="0.6301%" height="15" fill="rgb(219,213,19)" fg:x="4409407984" fg:w="47294403"/><text x="58.9959%" y="1295.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,987,358 samples, 0.11%)</title><rect x="59.3760%" y="1365" width="0.1064%" height="15" fill="rgb(252,169,30)" fg:x="4456702387" fg:w="7987358"/><text x="59.6260%" y="1375.50"></text></g><g><title>_RNvCs95KLPZDDxvS_7___rustc11___rdl_alloc (4,189,179 samples, 0.06%)</title><rect x="59.5888%" y="1253" width="0.0558%" height="15" fill="rgb(206,32,51)" fg:x="4472672174" fg:w="4189179"/><text x="59.8388%" y="1263.50"></text></g><g><title>alloc_perturb (3,541,339 samples, 0.05%)</title><rect x="60.4948%" y="1221" width="0.0472%" height="15" fill="rgb(250,172,42)" fg:x="4540679438" fg:w="3541339"/><text x="60.7448%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (88,279,699 samples, 1.18%)</title><rect x="59.5888%" y="1301" width="1.1761%" height="15" fill="rgb(209,34,43)" fg:x="4472672174" fg:w="88279699"/><text x="59.8388%" y="1311.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (88,279,699 samples, 1.18%)</title><rect x="59.5888%" y="1285" width="1.1761%" height="15" fill="rgb(223,11,35)" fg:x="4472672174" fg:w="88279699"/><text x="59.8388%" y="1295.50"></text></g><g><title>alloc::alloc::alloc (88,279,699 samples, 1.18%)</title><rect x="59.5888%" y="1269" width="1.1761%" height="15" fill="rgb(251,219,26)" fg:x="4472672174" fg:w="88279699"/><text x="59.8388%" y="1279.50"></text></g><g><title>malloc (84,090,520 samples, 1.12%)</title><rect x="59.6446%" y="1253" width="1.1203%" height="15" fill="rgb(231,119,3)" fg:x="4476861353" fg:w="84090520"/><text x="59.8946%" y="1263.50"></text></g><g><title>_int_malloc (68,793,549 samples, 0.92%)</title><rect x="59.8484%" y="1237" width="0.9165%" height="15" fill="rgb(216,97,11)" fg:x="4492158324" fg:w="68793549"/><text x="60.0984%" y="1247.50"></text></g><g><title>unlink_chunk.isra.0 (16,731,096 samples, 0.22%)</title><rect x="60.5420%" y="1221" width="0.2229%" height="15" fill="rgb(223,59,9)" fg:x="4544220777" fg:w="16731096"/><text x="60.7920%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (104,418,781 samples, 1.39%)</title><rect x="59.4824%" y="1365" width="1.3912%" height="15" fill="rgb(233,93,31)" fg:x="4464689745" fg:w="104418781"/><text x="59.7324%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (104,418,781 samples, 1.39%)</title><rect x="59.4824%" y="1349" width="1.3912%" height="15" fill="rgb(239,81,33)" fg:x="4464689745" fg:w="104418781"/><text x="59.7324%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (104,418,781 samples, 1.39%)</title><rect x="59.4824%" y="1333" width="1.3912%" height="15" fill="rgb(213,120,34)" fg:x="4464689745" fg:w="104418781"/><text x="59.7324%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (104,418,781 samples, 1.39%)</title><rect x="59.4824%" y="1317" width="1.3912%" height="15" fill="rgb(243,49,53)" fg:x="4464689745" fg:w="104418781"/><text x="59.7324%" y="1327.50"></text></g><g><title>alloc::raw_vec::layout_array (8,156,653 samples, 0.11%)</title><rect x="60.7649%" y="1301" width="0.1087%" height="15" fill="rgb(247,216,33)" fg:x="4560951873" fg:w="8156653"/><text x="61.0149%" y="1311.50"></text></g><g><title>core::alloc::layout::Layout::repeat (8,156,653 samples, 0.11%)</title><rect x="60.7649%" y="1285" width="0.1087%" height="15" fill="rgb(226,26,14)" fg:x="4560951873" fg:w="8156653"/><text x="61.0149%" y="1295.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (4,094,308 samples, 0.05%)</title><rect x="60.8191%" y="1269" width="0.0545%" height="15" fill="rgb(215,49,53)" fg:x="4565014218" fg:w="4094308"/><text x="61.0691%" y="1279.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (4,094,308 samples, 0.05%)</title><rect x="60.8191%" y="1253" width="0.0545%" height="15" fill="rgb(245,162,40)" fg:x="4565014218" fg:w="4094308"/><text x="61.0691%" y="1263.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (4,094,308 samples, 0.05%)</title><rect x="60.8191%" y="1237" width="0.0545%" height="15" fill="rgb(229,68,17)" fg:x="4565014218" fg:w="4094308"/><text x="61.0691%" y="1247.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (23,041,590 samples, 0.31%)</title><rect x="60.8736%" y="1365" width="0.3070%" height="15" fill="rgb(213,182,10)" fg:x="4569108526" fg:w="23041590"/><text x="61.1236%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (464,136,871 samples, 6.18%)</title><rect x="55.2055%" y="1413" width="6.1836%" height="15" fill="rgb(245,125,30)" fg:x="4143663424" fg:w="464136871"/><text x="55.4555%" y="1423.50">&lt;alloc::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (446,765,051 samples, 5.95%)</title><rect x="55.4369%" y="1397" width="5.9522%" height="15" fill="rgb(232,202,2)" fg:x="4161035244" fg:w="446765051"/><text x="55.6869%" y="1407.50">alloc::s..</text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (446,765,051 samples, 5.95%)</title><rect x="55.4369%" y="1381" width="5.9522%" height="15" fill="rgb(237,140,51)" fg:x="4161035244" fg:w="446765051"/><text x="55.6869%" y="1391.50">&lt;T as al..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (15,650,179 samples, 0.21%)</title><rect x="61.1806%" y="1365" width="0.2085%" height="15" fill="rgb(236,157,25)" fg:x="4592150116" fg:w="15650179"/><text x="61.4306%" y="1375.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15,650,179 samples, 0.21%)</title><rect x="61.1806%" y="1349" width="0.2085%" height="15" fill="rgb(219,209,0)" fg:x="4592150116" fg:w="15650179"/><text x="61.4306%" y="1359.50"></text></g><g><title>__memmove_avx512_unaligned_erms (7,417,267 samples, 0.10%)</title><rect x="61.2903%" y="1333" width="0.0988%" height="15" fill="rgb(240,116,54)" fg:x="4600383028" fg:w="7417267"/><text x="61.5403%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27,571,973 samples, 0.37%)</title><rect x="61.4520%" y="1285" width="0.3673%" height="15" fill="rgb(216,10,36)" fg:x="4612519019" fg:w="27571973"/><text x="61.7020%" y="1295.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (27,571,973 samples, 0.37%)</title><rect x="61.4520%" y="1269" width="0.3673%" height="15" fill="rgb(222,72,44)" fg:x="4612519019" fg:w="27571973"/><text x="61.7020%" y="1279.50"></text></g><g><title>alloc::alloc::alloc (27,571,973 samples, 0.37%)</title><rect x="61.4520%" y="1253" width="0.3673%" height="15" fill="rgb(232,159,9)" fg:x="4612519019" fg:w="27571973"/><text x="61.7020%" y="1263.50"></text></g><g><title>malloc (27,571,973 samples, 0.37%)</title><rect x="61.4520%" y="1237" width="0.3673%" height="15" fill="rgb(210,39,32)" fg:x="4612519019" fg:w="27571973"/><text x="61.7020%" y="1247.50"></text></g><g><title>_int_malloc (15,661,566 samples, 0.21%)</title><rect x="61.6106%" y="1221" width="0.2087%" height="15" fill="rgb(216,194,45)" fg:x="4624429426" fg:w="15661566"/><text x="61.8606%" y="1231.50"></text></g><g><title>unlink_chunk.isra.0 (3,334,314 samples, 0.04%)</title><rect x="61.7749%" y="1205" width="0.0444%" height="15" fill="rgb(218,18,35)" fg:x="4636756678" fg:w="3334314"/><text x="62.0249%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (36,003,999 samples, 0.48%)</title><rect x="61.3891%" y="1349" width="0.4797%" height="15" fill="rgb(207,83,51)" fg:x="4607800295" fg:w="36003999"/><text x="61.6391%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (36,003,999 samples, 0.48%)</title><rect x="61.3891%" y="1333" width="0.4797%" height="15" fill="rgb(225,63,43)" fg:x="4607800295" fg:w="36003999"/><text x="61.6391%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (36,003,999 samples, 0.48%)</title><rect x="61.3891%" y="1317" width="0.4797%" height="15" fill="rgb(207,57,36)" fg:x="4607800295" fg:w="36003999"/><text x="61.6391%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (36,003,999 samples, 0.48%)</title><rect x="61.3891%" y="1301" width="0.4797%" height="15" fill="rgb(216,99,33)" fg:x="4607800295" fg:w="36003999"/><text x="61.6391%" y="1311.50"></text></g><g><title>alloc::raw_vec::layout_array (3,713,302 samples, 0.05%)</title><rect x="61.8193%" y="1285" width="0.0495%" height="15" fill="rgb(225,42,16)" fg:x="4640090992" fg:w="3713302"/><text x="62.0693%" y="1295.50"></text></g><g><title>core::alloc::layout::Layout::repeat (3,713,302 samples, 0.05%)</title><rect x="61.8193%" y="1269" width="0.0495%" height="15" fill="rgb(220,201,45)" fg:x="4640090992" fg:w="3713302"/><text x="62.0693%" y="1279.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (3,713,302 samples, 0.05%)</title><rect x="61.8193%" y="1253" width="0.0495%" height="15" fill="rgb(225,33,4)" fg:x="4640090992" fg:w="3713302"/><text x="62.0693%" y="1263.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (3,713,302 samples, 0.05%)</title><rect x="61.8193%" y="1237" width="0.0495%" height="15" fill="rgb(224,33,50)" fg:x="4640090992" fg:w="3713302"/><text x="62.0693%" y="1247.50"></text></g><g><title>core::intrinsics::unlikely (3,713,302 samples, 0.05%)</title><rect x="61.8193%" y="1221" width="0.0495%" height="15" fill="rgb(246,198,51)" fg:x="4640090992" fg:w="3713302"/><text x="62.0693%" y="1231.50"></text></g><g><title>&lt;searchclient_rust::state::State as core::clone::Clone&gt;::clone (520,870,642 samples, 6.94%)</title><rect x="54.9293%" y="1429" width="6.9395%" height="15" fill="rgb(205,22,4)" fg:x="4122933669" fg:w="520870642"/><text x="55.1793%" y="1439.50">&lt;searchcl..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (36,004,016 samples, 0.48%)</title><rect x="61.3891%" y="1413" width="0.4797%" height="15" fill="rgb(206,3,8)" fg:x="4607800295" fg:w="36004016"/><text x="61.6391%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (36,004,016 samples, 0.48%)</title><rect x="61.3891%" y="1397" width="0.4797%" height="15" fill="rgb(251,23,15)" fg:x="4607800295" fg:w="36004016"/><text x="61.6391%" y="1407.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (36,004,016 samples, 0.48%)</title><rect x="61.3891%" y="1381" width="0.4797%" height="15" fill="rgb(252,88,28)" fg:x="4607800295" fg:w="36004016"/><text x="61.6391%" y="1391.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (36,004,016 samples, 0.48%)</title><rect x="61.3891%" y="1365" width="0.4797%" height="15" fill="rgb(212,127,14)" fg:x="4607800295" fg:w="36004016"/><text x="61.6391%" y="1375.50"></text></g><g><title>__memmove_avx512_unaligned_erms (146,848,658 samples, 1.96%)</title><rect x="61.8688%" y="1397" width="1.9564%" height="15" fill="rgb(247,145,37)" fg:x="4643804311" fg:w="146848658"/><text x="62.1188%" y="1407.50">_..</text></g><g><title>_RNvCs95KLPZDDxvS_7___rustc12___rust_alloc (8,312,526 samples, 0.11%)</title><rect x="63.8797%" y="1333" width="0.1107%" height="15" fill="rgb(209,117,53)" fg:x="4794740490" fg:w="8312526"/><text x="64.1297%" y="1343.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (171,835,425 samples, 2.29%)</title><rect x="61.8688%" y="1429" width="2.2893%" height="15" fill="rgb(212,90,42)" fg:x="4643804311" fg:w="171835425"/><text x="62.1188%" y="1439.50">a..</text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (171,835,425 samples, 2.29%)</title><rect x="61.8688%" y="1413" width="2.2893%" height="15" fill="rgb(218,164,37)" fg:x="4643804311" fg:w="171835425"/><text x="62.1188%" y="1423.50">a..</text></g><g><title>alloc::alloc::exchange_malloc (24,986,767 samples, 0.33%)</title><rect x="63.8252%" y="1397" width="0.3329%" height="15" fill="rgb(246,65,34)" fg:x="4790652969" fg:w="24986767"/><text x="64.0752%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24,986,767 samples, 0.33%)</title><rect x="63.8252%" y="1381" width="0.3329%" height="15" fill="rgb(231,100,33)" fg:x="4790652969" fg:w="24986767"/><text x="64.0752%" y="1391.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24,986,767 samples, 0.33%)</title><rect x="63.8252%" y="1365" width="0.3329%" height="15" fill="rgb(228,126,14)" fg:x="4790652969" fg:w="24986767"/><text x="64.0752%" y="1375.50"></text></g><g><title>alloc::alloc::alloc (24,986,767 samples, 0.33%)</title><rect x="63.8252%" y="1349" width="0.3329%" height="15" fill="rgb(215,173,21)" fg:x="4790652969" fg:w="24986767"/><text x="64.0752%" y="1359.50"></text></g><g><title>malloc (12,586,720 samples, 0.17%)</title><rect x="63.9904%" y="1333" width="0.1677%" height="15" fill="rgb(210,6,40)" fg:x="4803053016" fg:w="12586720"/><text x="64.2404%" y="1343.50"></text></g><g><title>_int_malloc (8,686,354 samples, 0.12%)</title><rect x="64.0424%" y="1317" width="0.1157%" height="15" fill="rgb(212,48,18)" fg:x="4806953382" fg:w="8686354"/><text x="64.2924%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (7,459,766 samples, 0.10%)</title><rect x="64.2108%" y="1365" width="0.0994%" height="15" fill="rgb(230,214,11)" fg:x="4819593729" fg:w="7459766"/><text x="64.4608%" y="1375.50"></text></g><g><title>_RNvCs95KLPZDDxvS_7___rustc13___rdl_realloc (8,680,487 samples, 0.12%)</title><rect x="64.3708%" y="1301" width="0.1156%" height="15" fill="rgb(254,105,39)" fg:x="4831605343" fg:w="8680487"/><text x="64.6208%" y="1311.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (8,680,487 samples, 0.12%)</title><rect x="64.3708%" y="1285" width="0.1156%" height="15" fill="rgb(245,158,5)" fg:x="4831605343" fg:w="8680487"/><text x="64.6208%" y="1295.50"></text></g><g><title>__memmove_avx512_unaligned_erms (20,652,507 samples, 0.28%)</title><rect x="64.7042%" y="1269" width="0.2752%" height="15" fill="rgb(249,208,11)" fg:x="4856628921" fg:w="20652507"/><text x="64.9542%" y="1279.50"></text></g><g><title>[unknown] (4,569,898 samples, 0.06%)</title><rect x="64.9185%" y="1253" width="0.0609%" height="15" fill="rgb(210,39,28)" fg:x="4872711530" fg:w="4569898"/><text x="65.1685%" y="1263.50"></text></g><g><title>[unknown] (4,569,898 samples, 0.06%)</title><rect x="64.9185%" y="1237" width="0.0609%" height="15" fill="rgb(211,56,53)" fg:x="4872711530" fg:w="4569898"/><text x="65.1685%" y="1247.50"></text></g><g><title>_int_free (8,293,795 samples, 0.11%)</title><rect x="64.9793%" y="1269" width="0.1105%" height="15" fill="rgb(226,201,30)" fg:x="4877281428" fg:w="8293795"/><text x="65.2293%" y="1279.50"></text></g><g><title>_int_free_merge_chunk (4,000,236 samples, 0.05%)</title><rect x="65.0898%" y="1269" width="0.0533%" height="15" fill="rgb(239,101,34)" fg:x="4885575223" fg:w="4000236"/><text x="65.3398%" y="1279.50"></text></g><g><title>[unknown] (4,172,996 samples, 0.06%)</title><rect x="66.6389%" y="1253" width="0.0556%" height="15" fill="rgb(226,209,5)" fg:x="5001843543" fg:w="4172996"/><text x="66.8889%" y="1263.50"></text></g><g><title>[unknown] (4,172,996 samples, 0.06%)</title><rect x="66.6389%" y="1237" width="0.0556%" height="15" fill="rgb(250,105,47)" fg:x="5001843543" fg:w="4172996"/><text x="66.8889%" y="1247.50"></text></g><g><title>[unknown] (4,172,996 samples, 0.06%)</title><rect x="66.6389%" y="1221" width="0.0556%" height="15" fill="rgb(230,72,3)" fg:x="5001843543" fg:w="4172996"/><text x="66.8889%" y="1231.50"></text></g><g><title>_int_malloc (3,413,739 samples, 0.05%)</title><rect x="66.6945%" y="1253" width="0.0455%" height="15" fill="rgb(232,218,39)" fg:x="5006016539" fg:w="3413739"/><text x="66.9445%" y="1263.50"></text></g><g><title>[unknown] (3,413,739 samples, 0.05%)</title><rect x="66.6945%" y="1237" width="0.0455%" height="15" fill="rgb(248,166,6)" fg:x="5006016539" fg:w="3413739"/><text x="66.9445%" y="1247.50"></text></g><g><title>malloc_consolidate (530,255,655 samples, 7.06%)</title><rect x="66.7399%" y="1253" width="7.0645%" height="15" fill="rgb(247,89,20)" fg:x="5009430278" fg:w="530255655"/><text x="66.9899%" y="1263.50">malloc_co..</text></g><g><title>unlink_chunk.isra.0 (257,317,081 samples, 3.43%)</title><rect x="70.3763%" y="1237" width="3.4282%" height="15" fill="rgb(248,130,54)" fg:x="5282368852" fg:w="257317081"/><text x="70.6263%" y="1247.50">unl..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (712,739,350 samples, 9.50%)</title><rect x="64.3708%" y="1349" width="9.4957%" height="15" fill="rgb(234,196,4)" fg:x="4831605343" fg:w="712739350"/><text x="64.6208%" y="1359.50">&lt;alloc::alloc:..</text></g><g><title>alloc::alloc::Global::grow_impl (712,739,350 samples, 9.50%)</title><rect x="64.3708%" y="1333" width="9.4957%" height="15" fill="rgb(250,143,31)" fg:x="4831605343" fg:w="712739350"/><text x="64.6208%" y="1343.50">alloc::alloc::..</text></g><g><title>alloc::alloc::realloc (712,739,350 samples, 9.50%)</title><rect x="64.3708%" y="1317" width="9.4957%" height="15" fill="rgb(211,110,34)" fg:x="4831605343" fg:w="712739350"/><text x="64.6208%" y="1327.50">alloc::alloc::..</text></g><g><title>realloc (704,058,863 samples, 9.38%)</title><rect x="64.4865%" y="1301" width="9.3801%" height="15" fill="rgb(215,124,48)" fg:x="4840285830" fg:w="704058863"/><text x="64.7365%" y="1311.50">realloc</text></g><g><title>_int_realloc (696,276,871 samples, 9.28%)</title><rect x="64.5901%" y="1285" width="9.2764%" height="15" fill="rgb(216,46,13)" fg:x="4848067822" fg:w="696276871"/><text x="64.8401%" y="1295.50">_int_realloc</text></g><g><title>_int_malloc (654,769,234 samples, 8.72%)</title><rect x="65.1431%" y="1269" width="8.7234%" height="15" fill="rgb(205,184,25)" fg:x="4889575459" fg:w="654769234"/><text x="65.3931%" y="1279.50">_int_malloc</text></g><g><title>unlink_chunk.isra.0 (4,658,760 samples, 0.06%)</title><rect x="73.8045%" y="1253" width="0.0621%" height="15" fill="rgb(228,1,10)" fg:x="5539685933" fg:w="4658760"/><text x="74.0545%" y="1263.50"></text></g><g><title>alloc::raw_vec::finish_grow (720,679,484 samples, 9.60%)</title><rect x="64.3102%" y="1365" width="9.6015%" height="15" fill="rgb(213,116,27)" fg:x="4827053495" fg:w="720679484"/><text x="64.5602%" y="1375.50">alloc::raw_vec..</text></g><g><title>malloc (3,388,286 samples, 0.05%)</title><rect x="73.8665%" y="1349" width="0.0451%" height="15" fill="rgb(241,95,50)" fg:x="5544344693" fg:w="3388286"/><text x="74.1165%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (736,027,360 samples, 9.81%)</title><rect x="64.1581%" y="1413" width="9.8060%" height="15" fill="rgb(238,48,32)" fg:x="4815639737" fg:w="736027360"/><text x="64.4081%" y="1423.50">alloc::raw_vec..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (736,027,360 samples, 9.81%)</title><rect x="64.1581%" y="1397" width="9.8060%" height="15" fill="rgb(235,113,49)" fg:x="4815639737" fg:w="736027360"/><text x="64.4081%" y="1407.50">alloc::raw_vec..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (736,027,360 samples, 9.81%)</title><rect x="64.1581%" y="1381" width="9.8060%" height="15" fill="rgb(205,127,43)" fg:x="4815639737" fg:w="736027360"/><text x="64.4081%" y="1391.50">alloc::raw_vec..</text></g><g><title>core::cmp::max (3,934,118 samples, 0.05%)</title><rect x="73.9117%" y="1365" width="0.0524%" height="15" fill="rgb(250,162,2)" fg:x="5547732979" fg:w="3934118"/><text x="74.1617%" y="1375.50"></text></g><g><title>core::cmp::Ord::max (3,934,118 samples, 0.05%)</title><rect x="73.9117%" y="1349" width="0.0524%" height="15" fill="rgb(220,13,41)" fg:x="5547732979" fg:w="3934118"/><text x="74.1617%" y="1359.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4,002,438 samples, 0.05%)</title><rect x="73.9641%" y="1413" width="0.0533%" height="15" fill="rgb(249,221,25)" fg:x="5551667097" fg:w="4002438"/><text x="74.2141%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (878,562,366 samples, 11.70%)</title><rect x="64.1581%" y="1429" width="11.7050%" height="15" fill="rgb(215,208,19)" fg:x="4815639736" fg:w="878562366"/><text x="64.4081%" y="1439.50">alloc::vec::Vec&lt;T..</text></g><g><title>core::ptr::write (138,532,567 samples, 1.85%)</title><rect x="74.0174%" y="1413" width="1.8457%" height="15" fill="rgb(236,175,2)" fg:x="5555669535" fg:w="138532567"/><text x="74.2674%" y="1423.50">c..</text></g><g><title>__memmove_avx512_unaligned_erms (138,532,567 samples, 1.85%)</title><rect x="74.0174%" y="1397" width="1.8457%" height="15" fill="rgb(241,52,2)" fg:x="5555669535" fg:w="138532567"/><text x="74.2674%" y="1407.50">_..</text></g><g><title>core::cell::Cell&lt;T&gt;::set (3,721,933 samples, 0.05%)</title><rect x="76.9079%" y="1381" width="0.0496%" height="15" fill="rgb(248,140,14)" fg:x="5772627848" fg:w="3721933"/><text x="77.1579%" y="1391.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3,721,933 samples, 0.05%)</title><rect x="76.9079%" y="1365" width="0.0496%" height="15" fill="rgb(253,22,42)" fg:x="5772627848" fg:w="3721933"/><text x="77.1579%" y="1375.50"></text></g><g><title>core::mem::replace (3,721,933 samples, 0.05%)</title><rect x="76.9079%" y="1349" width="0.0496%" height="15" fill="rgb(234,61,47)" fg:x="5772627848" fg:w="3721933"/><text x="77.1579%" y="1359.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,721,938 samples, 0.05%)</title><rect x="76.9079%" y="1413" width="0.0496%" height="15" fill="rgb(208,226,15)" fg:x="5772627848" fg:w="3721938"/><text x="77.1579%" y="1423.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (3,721,938 samples, 0.05%)</title><rect x="76.9079%" y="1397" width="0.0496%" height="15" fill="rgb(217,221,4)" fg:x="5772627848" fg:w="3721938"/><text x="77.1579%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4,003,142 samples, 0.05%)</title><rect x="76.9575%" y="1397" width="0.0533%" height="15" fill="rgb(212,174,34)" fg:x="5776349786" fg:w="4003142"/><text x="77.2075%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (4,003,142 samples, 0.05%)</title><rect x="76.9575%" y="1381" width="0.0533%" height="15" fill="rgb(253,83,4)" fg:x="5776349786" fg:w="4003142"/><text x="77.2075%" y="1391.50"></text></g><g><title>_RNvCs95KLPZDDxvS_7___rustc11___rdl_alloc (3,686,426 samples, 0.05%)</title><rect x="77.3300%" y="1205" width="0.0491%" height="15" fill="rgb(250,195,49)" fg:x="5804305255" fg:w="3686426"/><text x="77.5800%" y="1215.50"></text></g><g><title>_RNvCs95KLPZDDxvS_7___rustc12___rust_alloc (17,545,127 samples, 0.23%)</title><rect x="77.3791%" y="1205" width="0.2338%" height="15" fill="rgb(241,192,25)" fg:x="5807991681" fg:w="17545127"/><text x="77.6291%" y="1215.50"></text></g><g><title>[unknown] (4,182,475 samples, 0.06%)</title><rect x="79.9873%" y="1173" width="0.0557%" height="15" fill="rgb(208,124,10)" fg:x="6003759925" fg:w="4182475"/><text x="80.2373%" y="1183.50"></text></g><g><title>[unknown] (4,182,475 samples, 0.06%)</title><rect x="79.9873%" y="1157" width="0.0557%" height="15" fill="rgb(222,33,0)" fg:x="6003759925" fg:w="4182475"/><text x="80.2373%" y="1167.50"></text></g><g><title>[unknown] (4,182,475 samples, 0.06%)</title><rect x="79.9873%" y="1141" width="0.0557%" height="15" fill="rgb(234,209,28)" fg:x="6003759925" fg:w="4182475"/><text x="80.2373%" y="1151.50"></text></g><g><title>[unknown] (4,182,475 samples, 0.06%)</title><rect x="79.9873%" y="1125" width="0.0557%" height="15" fill="rgb(224,11,23)" fg:x="6003759925" fg:w="4182475"/><text x="80.2373%" y="1135.50"></text></g><g><title>alloc_perturb (8,112,668 samples, 0.11%)</title><rect x="80.0430%" y="1173" width="0.1081%" height="15" fill="rgb(232,99,1)" fg:x="6007942400" fg:w="8112668"/><text x="80.2930%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (231,705,354 samples, 3.09%)</title><rect x="77.3300%" y="1253" width="3.0870%" height="15" fill="rgb(237,95,45)" fg:x="5804305255" fg:w="231705354"/><text x="77.5800%" y="1263.50">&lt;al..</text></g><g><title>alloc::alloc::Global::alloc_impl (231,705,354 samples, 3.09%)</title><rect x="77.3300%" y="1237" width="3.0870%" height="15" fill="rgb(208,109,11)" fg:x="5804305255" fg:w="231705354"/><text x="77.5800%" y="1247.50">all..</text></g><g><title>alloc::alloc::alloc (231,705,354 samples, 3.09%)</title><rect x="77.3300%" y="1221" width="3.0870%" height="15" fill="rgb(216,190,48)" fg:x="5804305255" fg:w="231705354"/><text x="77.5800%" y="1231.50">all..</text></g><g><title>malloc (210,473,801 samples, 2.80%)</title><rect x="77.6128%" y="1205" width="2.8041%" height="15" fill="rgb(251,171,36)" fg:x="5825536808" fg:w="210473801"/><text x="77.8628%" y="1215.50">ma..</text></g><g><title>_int_malloc (159,050,343 samples, 2.12%)</title><rect x="78.2979%" y="1189" width="2.1190%" height="15" fill="rgb(230,62,22)" fg:x="5876960266" fg:w="159050343"/><text x="78.5479%" y="1199.50">_..</text></g><g><title>unlink_chunk.isra.0 (19,955,541 samples, 0.27%)</title><rect x="80.1511%" y="1173" width="0.2659%" height="15" fill="rgb(225,114,35)" fg:x="6016055068" fg:w="19955541"/><text x="80.4011%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (243,301,749 samples, 3.24%)</title><rect x="77.2812%" y="1317" width="3.2415%" height="15" fill="rgb(215,118,42)" fg:x="5800645597" fg:w="243301749"/><text x="77.5312%" y="1327.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (243,301,749 samples, 3.24%)</title><rect x="77.2812%" y="1301" width="3.2415%" height="15" fill="rgb(243,119,21)" fg:x="5800645597" fg:w="243301749"/><text x="77.5312%" y="1311.50">all..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (243,301,749 samples, 3.24%)</title><rect x="77.2812%" y="1285" width="3.2415%" height="15" fill="rgb(252,177,53)" fg:x="5800645597" fg:w="243301749"/><text x="77.5312%" y="1295.50">all..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (243,301,749 samples, 3.24%)</title><rect x="77.2812%" y="1269" width="3.2415%" height="15" fill="rgb(237,209,29)" fg:x="5800645597" fg:w="243301749"/><text x="77.5312%" y="1279.50">all..</text></g><g><title>alloc::raw_vec::layout_array (7,936,737 samples, 0.11%)</title><rect x="80.4169%" y="1253" width="0.1057%" height="15" fill="rgb(212,65,23)" fg:x="6036010609" fg:w="7936737"/><text x="80.6669%" y="1263.50"></text></g><g><title>core::alloc::layout::Layout::repeat (7,936,737 samples, 0.11%)</title><rect x="80.4169%" y="1237" width="0.1057%" height="15" fill="rgb(230,222,46)" fg:x="6036010609" fg:w="7936737"/><text x="80.6669%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (313,783,367 samples, 4.18%)</title><rect x="77.2812%" y="1365" width="4.1805%" height="15" fill="rgb(215,135,32)" fg:x="5800645597" fg:w="313783367"/><text x="77.5312%" y="1375.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (313,783,367 samples, 4.18%)</title><rect x="77.2812%" y="1349" width="4.1805%" height="15" fill="rgb(246,101,22)" fg:x="5800645597" fg:w="313783367"/><text x="77.5312%" y="1359.50">alloc..</text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (313,783,367 samples, 4.18%)</title><rect x="77.2812%" y="1333" width="4.1805%" height="15" fill="rgb(206,107,13)" fg:x="5800645597" fg:w="313783367"/><text x="77.5312%" y="1343.50">&lt;T as..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (70,481,618 samples, 0.94%)</title><rect x="80.5227%" y="1317" width="0.9390%" height="15" fill="rgb(250,100,44)" fg:x="6043947346" fg:w="70481618"/><text x="80.7727%" y="1327.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (70,481,618 samples, 0.94%)</title><rect x="80.5227%" y="1301" width="0.9390%" height="15" fill="rgb(231,147,38)" fg:x="6043947346" fg:w="70481618"/><text x="80.7727%" y="1311.50"></text></g><g><title>__memmove_avx512_unaligned_erms (61,947,271 samples, 0.83%)</title><rect x="80.6364%" y="1285" width="0.8253%" height="15" fill="rgb(229,8,40)" fg:x="6052481693" fg:w="61947271"/><text x="80.8864%" y="1295.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (19,792,027 samples, 0.26%)</title><rect x="81.4617%" y="1365" width="0.2637%" height="15" fill="rgb(221,135,30)" fg:x="6114428964" fg:w="19792027"/><text x="81.7117%" y="1375.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,996,931 samples, 0.05%)</title><rect x="81.6721%" y="1349" width="0.0533%" height="15" fill="rgb(249,193,18)" fg:x="6130224060" fg:w="3996931"/><text x="81.9221%" y="1359.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,996,931 samples, 0.05%)</title><rect x="81.6721%" y="1333" width="0.0533%" height="15" fill="rgb(209,133,39)" fg:x="6130224060" fg:w="3996931"/><text x="81.9221%" y="1343.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3,996,931 samples, 0.05%)</title><rect x="81.6721%" y="1317" width="0.0533%" height="15" fill="rgb(232,100,14)" fg:x="6130224060" fg:w="3996931"/><text x="81.9221%" y="1327.50"></text></g><g><title>[unknown] (4,844,705 samples, 0.06%)</title><rect x="83.2938%" y="1221" width="0.0645%" height="15" fill="rgb(224,185,1)" fg:x="6251942116" fg:w="4844705"/><text x="83.5438%" y="1231.50"></text></g><g><title>sysmalloc (4,123,155 samples, 0.05%)</title><rect x="83.3583%" y="1221" width="0.0549%" height="15" fill="rgb(223,139,8)" fg:x="6256786821" fg:w="4123155"/><text x="83.6083%" y="1231.50"></text></g><g><title>__default_morecore@GLIBC_2.2.5 (4,123,155 samples, 0.05%)</title><rect x="83.3583%" y="1205" width="0.0549%" height="15" fill="rgb(232,213,38)" fg:x="6256786821" fg:w="4123155"/><text x="83.6083%" y="1215.50"></text></g><g><title>__sbrk (4,123,155 samples, 0.05%)</title><rect x="83.3583%" y="1189" width="0.0549%" height="15" fill="rgb(207,94,22)" fg:x="6256786821" fg:w="4123155"/><text x="83.6083%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (159,962,749 samples, 2.13%)</title><rect x="82.0030%" y="1301" width="2.1312%" height="15" fill="rgb(219,183,54)" fg:x="6155062473" fg:w="159962749"/><text x="82.2530%" y="1311.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (159,962,749 samples, 2.13%)</title><rect x="82.0030%" y="1285" width="2.1312%" height="15" fill="rgb(216,185,54)" fg:x="6155062473" fg:w="159962749"/><text x="82.2530%" y="1295.50">a..</text></g><g><title>alloc::alloc::alloc (159,962,749 samples, 2.13%)</title><rect x="82.0030%" y="1269" width="2.1312%" height="15" fill="rgb(254,217,39)" fg:x="6155062473" fg:w="159962749"/><text x="82.2530%" y="1279.50">a..</text></g><g><title>malloc (159,962,749 samples, 2.13%)</title><rect x="82.0030%" y="1253" width="2.1312%" height="15" fill="rgb(240,178,23)" fg:x="6155062473" fg:w="159962749"/><text x="82.2530%" y="1263.50">m..</text></g><g><title>_int_malloc (137,123,967 samples, 1.83%)</title><rect x="82.3073%" y="1237" width="1.8269%" height="15" fill="rgb(218,11,47)" fg:x="6177901255" fg:w="137123967"/><text x="82.5573%" y="1247.50">_..</text></g><g><title>unlink_chunk.isra.0 (54,115,246 samples, 0.72%)</title><rect x="83.4132%" y="1221" width="0.7210%" height="15" fill="rgb(218,51,51)" fg:x="6260909976" fg:w="54115246"/><text x="83.6632%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (185,537,289 samples, 2.47%)</title><rect x="81.7254%" y="1365" width="2.4719%" height="15" fill="rgb(238,126,27)" fg:x="6134220991" fg:w="185537289"/><text x="81.9754%" y="1375.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (168,871,325 samples, 2.25%)</title><rect x="81.9474%" y="1349" width="2.2498%" height="15" fill="rgb(249,202,22)" fg:x="6150886955" fg:w="168871325"/><text x="82.1974%" y="1359.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (168,871,325 samples, 2.25%)</title><rect x="81.9474%" y="1333" width="2.2498%" height="15" fill="rgb(254,195,49)" fg:x="6150886955" fg:w="168871325"/><text x="82.1974%" y="1343.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (168,871,325 samples, 2.25%)</title><rect x="81.9474%" y="1317" width="2.2498%" height="15" fill="rgb(208,123,14)" fg:x="6150886955" fg:w="168871325"/><text x="82.1974%" y="1327.50">a..</text></g><g><title>alloc::raw_vec::layout_array (4,733,058 samples, 0.06%)</title><rect x="84.1342%" y="1301" width="0.0631%" height="15" fill="rgb(224,200,8)" fg:x="6315025222" fg:w="4733058"/><text x="84.3842%" y="1311.50"></text></g><g><title>core::alloc::layout::Layout::repeat (4,733,058 samples, 0.06%)</title><rect x="84.1342%" y="1285" width="0.0631%" height="15" fill="rgb(217,61,36)" fg:x="6315025222" fg:w="4733058"/><text x="84.3842%" y="1295.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (8,851,691 samples, 0.12%)</title><rect x="84.1973%" y="1365" width="0.1179%" height="15" fill="rgb(206,35,45)" fg:x="6319758280" fg:w="8851691"/><text x="84.4473%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (564,892,003 samples, 7.53%)</title><rect x="76.9575%" y="1413" width="7.5260%" height="15" fill="rgb(217,65,33)" fg:x="5776349786" fg:w="564892003"/><text x="77.2075%" y="1423.50">&lt;alloc::ve..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (560,888,861 samples, 7.47%)</title><rect x="77.0108%" y="1397" width="7.4726%" height="15" fill="rgb(222,158,48)" fg:x="5780352928" fg:w="560888861"/><text x="77.2608%" y="1407.50">alloc::sli..</text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (560,888,861 samples, 7.47%)</title><rect x="77.0108%" y="1381" width="7.4726%" height="15" fill="rgb(254,2,54)" fg:x="5780352928" fg:w="560888861"/><text x="77.2608%" y="1391.50">&lt;T as allo..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (12,631,818 samples, 0.17%)</title><rect x="84.3152%" y="1365" width="0.1683%" height="15" fill="rgb(250,143,38)" fg:x="6328609971" fg:w="12631818"/><text x="84.5652%" y="1375.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12,631,818 samples, 0.17%)</title><rect x="84.3152%" y="1349" width="0.1683%" height="15" fill="rgb(248,25,0)" fg:x="6328609971" fg:w="12631818"/><text x="84.5652%" y="1359.50"></text></g><g><title>__memmove_avx512_unaligned_erms (153,747,257 samples, 2.05%)</title><rect x="84.4835%" y="1413" width="2.0484%" height="15" fill="rgb(206,152,27)" fg:x="6341241790" fg:w="153747257"/><text x="84.7335%" y="1423.50">_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (7,123,559 samples, 0.09%)</title><rect x="87.3982%" y="1397" width="0.0949%" height="15" fill="rgb(240,77,30)" fg:x="6560014587" fg:w="7123559"/><text x="87.6482%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (7,123,559 samples, 0.09%)</title><rect x="87.3982%" y="1381" width="0.0949%" height="15" fill="rgb(231,5,3)" fg:x="6560014587" fg:w="7123559"/><text x="87.6482%" y="1391.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,839,648 samples, 0.10%)</title><rect x="87.4931%" y="1397" width="0.1044%" height="15" fill="rgb(207,226,32)" fg:x="6567138146" fg:w="7839648"/><text x="87.7431%" y="1407.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (7,839,648 samples, 0.10%)</title><rect x="87.4931%" y="1381" width="0.1044%" height="15" fill="rgb(222,207,47)" fg:x="6567138146" fg:w="7839648"/><text x="87.7431%" y="1391.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4,003,915 samples, 0.05%)</title><rect x="87.6489%" y="1349" width="0.0533%" height="15" fill="rgb(229,115,45)" fg:x="6578837379" fg:w="4003915"/><text x="87.8989%" y="1359.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4,003,915 samples, 0.05%)</title><rect x="87.6489%" y="1333" width="0.0533%" height="15" fill="rgb(224,191,6)" fg:x="6578837379" fg:w="4003915"/><text x="87.8989%" y="1343.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (20,321,518 samples, 0.27%)</title><rect x="87.5975%" y="1397" width="0.2707%" height="15" fill="rgb(230,227,24)" fg:x="6574977794" fg:w="20321518"/><text x="87.8475%" y="1407.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (20,321,518 samples, 0.27%)</title><rect x="87.5975%" y="1381" width="0.2707%" height="15" fill="rgb(228,80,19)" fg:x="6574977794" fg:w="20321518"/><text x="87.8475%" y="1391.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (20,321,518 samples, 0.27%)</title><rect x="87.5975%" y="1365" width="0.2707%" height="15" fill="rgb(247,229,0)" fg:x="6574977794" fg:w="20321518"/><text x="87.8475%" y="1375.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (12,458,018 samples, 0.17%)</title><rect x="87.7023%" y="1349" width="0.1660%" height="15" fill="rgb(237,194,15)" fg:x="6582841294" fg:w="12458018"/><text x="87.9523%" y="1359.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7,835,370 samples, 0.10%)</title><rect x="87.7639%" y="1333" width="0.1044%" height="15" fill="rgb(219,203,20)" fg:x="6587463942" fg:w="7835370"/><text x="88.0139%" y="1343.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (87,624,228 samples, 1.17%)</title><rect x="90.7783%" y="1301" width="1.1674%" height="15" fill="rgb(234,128,8)" fg:x="6813726094" fg:w="87624228"/><text x="91.0283%" y="1311.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (196,466,605 samples, 2.62%)</title><rect x="89.9147%" y="1317" width="2.6175%" height="15" fill="rgb(248,202,8)" fg:x="6748902155" fg:w="196466605"/><text x="90.1647%" y="1327.50">&lt;c..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (44,018,438 samples, 0.59%)</title><rect x="91.9457%" y="1301" width="0.5865%" height="15" fill="rgb(206,104,37)" fg:x="6901350322" fg:w="44018438"/><text x="92.1957%" y="1311.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (598,977,391 samples, 7.98%)</title><rect x="87.8683%" y="1365" width="7.9801%" height="15" fill="rgb(223,8,27)" fg:x="6595299312" fg:w="598977391"/><text x="88.1183%" y="1375.50">&lt;std::hash:..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (598,977,391 samples, 7.98%)</title><rect x="87.8683%" y="1349" width="7.9801%" height="15" fill="rgb(216,217,28)" fg:x="6595299312" fg:w="598977391"/><text x="88.1183%" y="1359.50">&lt;core::hash..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (598,977,391 samples, 7.98%)</title><rect x="87.8683%" y="1333" width="7.9801%" height="15" fill="rgb(249,199,1)" fg:x="6595299312" fg:w="598977391"/><text x="88.1183%" y="1343.50">&lt;core::hash..</text></g><g><title>core::hash::sip::u8to64_le (248,907,881 samples, 3.32%)</title><rect x="92.5322%" y="1317" width="3.3162%" height="15" fill="rgb(240,85,17)" fg:x="6945368822" fg:w="248907881"/><text x="92.7822%" y="1327.50">cor..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (645,711,723 samples, 8.60%)</title><rect x="87.8683%" y="1397" width="8.6027%" height="15" fill="rgb(206,108,45)" fg:x="6595299312" fg:w="645711723"/><text x="88.1183%" y="1407.50">core::hash::..</text></g><g><title>core::hash::Hasher::write_u32 (645,711,723 samples, 8.60%)</title><rect x="87.8683%" y="1381" width="8.6027%" height="15" fill="rgb(245,210,41)" fg:x="6595299312" fg:w="645711723"/><text x="88.1183%" y="1391.50">core::hash::..</text></g><g><title>core::num::&lt;impl u32&gt;::to_ne_bytes (46,734,332 samples, 0.62%)</title><rect x="95.8484%" y="1365" width="0.6226%" height="15" fill="rgb(206,13,37)" fg:x="7194276703" fg:w="46734332"/><text x="96.0984%" y="1375.50"></text></g><g><title>searchclient_rust::state::State::child_state (1,558,335,627 samples, 20.76%)</title><rect x="75.8631%" y="1429" width="20.7615%" height="15" fill="rgb(250,61,18)" fg:x="5694202103" fg:w="1558335627"/><text x="76.1131%" y="1439.50">searchclient_rust::state::State::..</text></g><g><title>searchclient_rust::state::State::calculate_hash (757,548,682 samples, 10.09%)</title><rect x="86.5318%" y="1413" width="10.0927%" height="15" fill="rgb(235,172,48)" fg:x="6494989048" fg:w="757548682"/><text x="86.7818%" y="1423.50">searchclient_ru..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (11,526,695 samples, 0.15%)</title><rect x="96.4710%" y="1397" width="0.1536%" height="15" fill="rgb(249,201,17)" fg:x="7241011035" fg:w="11526695"/><text x="96.7210%" y="1407.50"></text></g><g><title>core::hash::Hasher::write_usize (11,526,695 samples, 0.15%)</title><rect x="96.4710%" y="1381" width="0.1536%" height="15" fill="rgb(219,208,6)" fg:x="7241011035" fg:w="11526695"/><text x="96.7210%" y="1391.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (11,526,695 samples, 0.15%)</title><rect x="96.4710%" y="1365" width="0.1536%" height="15" fill="rgb(248,31,23)" fg:x="7241011035" fg:w="11526695"/><text x="96.7210%" y="1375.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11,526,695 samples, 0.15%)</title><rect x="96.4710%" y="1349" width="0.1536%" height="15" fill="rgb(245,15,42)" fg:x="7241011035" fg:w="11526695"/><text x="96.7210%" y="1359.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3,867,327 samples, 0.05%)</title><rect x="96.5730%" y="1333" width="0.0515%" height="15" fill="rgb(222,217,39)" fg:x="7248670403" fg:w="3867327"/><text x="96.8230%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (4,629,834 samples, 0.06%)</title><rect x="96.6772%" y="1413" width="0.0617%" height="15" fill="rgb(210,219,27)" fg:x="7256488977" fg:w="4629834"/><text x="96.9272%" y="1423.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4,629,834 samples, 0.06%)</title><rect x="96.6772%" y="1397" width="0.0617%" height="15" fill="rgb(252,166,36)" fg:x="7256488977" fg:w="4629834"/><text x="96.9272%" y="1407.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4,629,834 samples, 0.06%)</title><rect x="96.6772%" y="1381" width="0.0617%" height="15" fill="rgb(245,132,34)" fg:x="7256488977" fg:w="4629834"/><text x="96.9272%" y="1391.50"></text></g><g><title>searchclient_rust::state::State::generate_joint_actions (3,173,384,028 samples, 42.28%)</title><rect x="54.5195%" y="1477" width="42.2786%" height="15" fill="rgb(236,54,3)" fg:x="4092175815" fg:w="3173384028"/><text x="54.7695%" y="1487.50">searchclient_rust::state::State::generate_joint_actions</text></g><g><title>searchclient_rust::state::State::generate_joint_actions (3,173,384,028 samples, 42.28%)</title><rect x="54.5195%" y="1461" width="42.2786%" height="15" fill="rgb(241,173,43)" fg:x="4092175815" fg:w="3173384028"/><text x="54.7695%" y="1471.50">searchclient_rust::state::State::generate_joint_actions</text></g><g><title>searchclient_rust::state::State::generate_joint_actions (3,168,660,530 samples, 42.22%)</title><rect x="54.5824%" y="1445" width="42.2156%" height="15" fill="rgb(215,190,9)" fg:x="4096899313" fg:w="3168660530"/><text x="54.8324%" y="1455.50">searchclient_rust::state::State::generate_joint_actions</text></g><g><title>searchclient_rust::state::State::is_conflicting (13,022,113 samples, 0.17%)</title><rect x="96.6246%" y="1429" width="0.1735%" height="15" fill="rgb(242,101,16)" fg:x="7252537730" fg:w="13022113"/><text x="96.8746%" y="1439.50"></text></g><g><title>searchclient_rust::action::Action::get_type (4,441,032 samples, 0.06%)</title><rect x="96.7389%" y="1413" width="0.0592%" height="15" fill="rgb(223,190,21)" fg:x="7261118811" fg:w="4441032"/><text x="96.9889%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (36,428,139 samples, 0.49%)</title><rect x="97.2018%" y="1445" width="0.4853%" height="15" fill="rgb(215,228,25)" fg:x="7295866293" fg:w="36428139"/><text x="97.4518%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (36,428,139 samples, 0.49%)</title><rect x="97.2018%" y="1429" width="0.4853%" height="15" fill="rgb(225,36,22)" fg:x="7295866293" fg:w="36428139"/><text x="97.4518%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (12,402,387 samples, 0.17%)</title><rect x="97.5219%" y="1413" width="0.1652%" height="15" fill="rgb(251,106,46)" fg:x="7319892045" fg:w="12402387"/><text x="97.7719%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (12,402,387 samples, 0.17%)</title><rect x="97.5219%" y="1397" width="0.1652%" height="15" fill="rgb(208,90,1)" fg:x="7319892045" fg:w="12402387"/><text x="97.7719%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (12,402,387 samples, 0.17%)</title><rect x="97.5219%" y="1381" width="0.1652%" height="15" fill="rgb(243,10,4)" fg:x="7319892045" fg:w="12402387"/><text x="97.7719%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (12,402,387 samples, 0.17%)</title><rect x="97.5219%" y="1365" width="0.1652%" height="15" fill="rgb(212,137,27)" fg:x="7319892045" fg:w="12402387"/><text x="97.7719%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (57,855,364 samples, 0.77%)</title><rect x="97.2018%" y="1461" width="0.7708%" height="15" fill="rgb(231,220,49)" fg:x="7295866293" fg:w="57855364"/><text x="97.4518%" y="1471.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (21,427,225 samples, 0.29%)</title><rect x="97.6871%" y="1445" width="0.2855%" height="15" fill="rgb(237,96,20)" fg:x="7332294432" fg:w="21427225"/><text x="97.9371%" y="1455.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (21,427,225 samples, 0.29%)</title><rect x="97.6871%" y="1429" width="0.2855%" height="15" fill="rgb(239,229,30)" fg:x="7332294432" fg:w="21427225"/><text x="97.9371%" y="1439.50"></text></g><g><title>searchclient_rust::action::Action::get_type (8,584,695 samples, 0.11%)</title><rect x="97.9726%" y="1461" width="0.1144%" height="15" fill="rgb(219,65,33)" fg:x="7353721657" fg:w="8584695"/><text x="98.2226%" y="1471.50"></text></g><g><title>searchclient_rust::state::State::get_expanded_states (3,333,030,907 samples, 44.41%)</title><rect x="54.1482%" y="1493" width="44.4055%" height="15" fill="rgb(243,134,7)" fg:x="4064304504" fg:w="3333030907"/><text x="54.3982%" y="1503.50">searchclient_rust::state::State::get_expanded_states</text></g><g><title>searchclient_rust::state::State::is_applicable (131,775,568 samples, 1.76%)</title><rect x="96.7980%" y="1477" width="1.7556%" height="15" fill="rgb(216,177,54)" fg:x="7265559843" fg:w="131775568"/><text x="97.0480%" y="1487.50"></text></g><g><title>searchclient_rust::state::State::cell_is_free (35,029,059 samples, 0.47%)</title><rect x="98.0870%" y="1461" width="0.4667%" height="15" fill="rgb(211,160,20)" fg:x="7362306352" fg:w="35029059"/><text x="98.3370%" y="1471.50"></text></g><g><title>searchclient_rust::state::State::agent_at (7,584,531 samples, 0.10%)</title><rect x="98.4526%" y="1445" width="0.1010%" height="15" fill="rgb(239,85,39)" fg:x="7389750880" fg:w="7584531"/><text x="98.7026%" y="1455.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (3,886,513 samples, 0.05%)</title><rect x="98.5019%" y="1429" width="0.0518%" height="15" fill="rgb(232,125,22)" fg:x="7393448898" fg:w="3886513"/><text x="98.7519%" y="1439.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (3,886,513 samples, 0.05%)</title><rect x="98.5019%" y="1413" width="0.0518%" height="15" fill="rgb(244,57,34)" fg:x="7393448898" fg:w="3886513"/><text x="98.7519%" y="1423.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (3,886,513 samples, 0.05%)</title><rect x="98.5019%" y="1397" width="0.0518%" height="15" fill="rgb(214,203,32)" fg:x="7393448898" fg:w="3886513"/><text x="98.7519%" y="1407.50"></text></g><g><title>core::cmp::min (3,886,513 samples, 0.05%)</title><rect x="98.5019%" y="1381" width="0.0518%" height="15" fill="rgb(207,58,43)" fg:x="7393448898" fg:w="3886513"/><text x="98.7519%" y="1391.50"></text></g><g><title>core::cmp::Ord::min (3,886,513 samples, 0.05%)</title><rect x="98.5019%" y="1365" width="0.0518%" height="15" fill="rgb(215,193,15)" fg:x="7393448898" fg:w="3886513"/><text x="98.7519%" y="1375.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (4,161,263 samples, 0.06%)</title><rect x="98.6065%" y="1397" width="0.0554%" height="15" fill="rgb(232,15,44)" fg:x="7401302809" fg:w="4161263"/><text x="98.8565%" y="1407.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4,161,263 samples, 0.06%)</title><rect x="98.6065%" y="1381" width="0.0554%" height="15" fill="rgb(212,3,48)" fg:x="7401302809" fg:w="4161263"/><text x="98.8565%" y="1391.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4,161,263 samples, 0.06%)</title><rect x="98.6065%" y="1365" width="0.0554%" height="15" fill="rgb(218,128,7)" fg:x="7401302809" fg:w="4161263"/><text x="98.8565%" y="1375.50"></text></g><g><title>hashbrown::map::make_hash (8,172,288 samples, 0.11%)</title><rect x="98.6065%" y="1429" width="0.1089%" height="15" fill="rgb(226,216,39)" fg:x="7401302809" fg:w="8172288"/><text x="98.8565%" y="1439.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8,172,288 samples, 0.11%)</title><rect x="98.6065%" y="1413" width="0.1089%" height="15" fill="rgb(243,47,51)" fg:x="7401302809" fg:w="8172288"/><text x="98.8565%" y="1423.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4,011,025 samples, 0.05%)</title><rect x="98.6620%" y="1397" width="0.0534%" height="15" fill="rgb(241,183,40)" fg:x="7405464072" fg:w="4011025"/><text x="98.9120%" y="1407.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (4,011,025 samples, 0.05%)</title><rect x="98.6620%" y="1381" width="0.0534%" height="15" fill="rgb(231,217,32)" fg:x="7405464072" fg:w="4011025"/><text x="98.9120%" y="1391.50"></text></g><g><title>core::hash::Hasher::write_u64 (4,011,025 samples, 0.05%)</title><rect x="98.6620%" y="1365" width="0.0534%" height="15" fill="rgb(229,61,38)" fg:x="7405464072" fg:w="4011025"/><text x="98.9120%" y="1375.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4,011,025 samples, 0.05%)</title><rect x="98.6620%" y="1349" width="0.0534%" height="15" fill="rgb(225,210,5)" fg:x="7405464072" fg:w="4011025"/><text x="98.9120%" y="1359.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4,011,025 samples, 0.05%)</title><rect x="98.6620%" y="1333" width="0.0534%" height="15" fill="rgb(231,79,45)" fg:x="7405464072" fg:w="4011025"/><text x="98.9120%" y="1343.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4,011,025 samples, 0.05%)</title><rect x="98.6620%" y="1317" width="0.0534%" height="15" fill="rgb(224,100,7)" fg:x="7405464072" fg:w="4011025"/><text x="98.9120%" y="1327.50"></text></g><g><title>core::intrinsics::likely (51,437,869 samples, 0.69%)</title><rect x="98.7154%" y="1381" width="0.6853%" height="15" fill="rgb(241,198,18)" fg:x="7409475097" fg:w="51437869"/><text x="98.9654%" y="1391.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (95,617,909 samples, 1.27%)</title><rect x="98.5537%" y="1493" width="1.2739%" height="15" fill="rgb(252,97,53)" fg:x="7397335415" fg:w="95617909"/><text x="98.8037%" y="1503.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (95,617,909 samples, 1.27%)</title><rect x="98.5537%" y="1477" width="1.2739%" height="15" fill="rgb(220,88,7)" fg:x="7397335415" fg:w="95617909"/><text x="98.8037%" y="1487.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (95,617,909 samples, 1.27%)</title><rect x="98.5537%" y="1461" width="1.2739%" height="15" fill="rgb(213,176,14)" fg:x="7397335415" fg:w="95617909"/><text x="98.8037%" y="1471.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (95,617,909 samples, 1.27%)</title><rect x="98.5537%" y="1445" width="1.2739%" height="15" fill="rgb(246,73,7)" fg:x="7397335415" fg:w="95617909"/><text x="98.8037%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (83,478,227 samples, 1.11%)</title><rect x="98.7154%" y="1429" width="1.1122%" height="15" fill="rgb(245,64,36)" fg:x="7409475097" fg:w="83478227"/><text x="98.9654%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (83,478,227 samples, 1.11%)</title><rect x="98.7154%" y="1413" width="1.1122%" height="15" fill="rgb(245,80,10)" fg:x="7409475097" fg:w="83478227"/><text x="98.9654%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (83,478,227 samples, 1.11%)</title><rect x="98.7154%" y="1397" width="1.1122%" height="15" fill="rgb(232,107,50)" fg:x="7409475097" fg:w="83478227"/><text x="98.9654%" y="1407.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (32,040,358 samples, 0.43%)</title><rect x="99.4007%" y="1381" width="0.4269%" height="15" fill="rgb(253,3,0)" fg:x="7460912966" fg:w="32040358"/><text x="99.6507%" y="1391.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (32,040,358 samples, 0.43%)</title><rect x="99.4007%" y="1365" width="0.4269%" height="15" fill="rgb(212,99,53)" fg:x="7460912966" fg:w="32040358"/><text x="99.6507%" y="1375.50"></text></g><g><title>hashbrown::raw::RawTableInner::bucket_ptr (4,685,217 samples, 0.06%)</title><rect x="99.8276%" y="1349" width="0.0624%" height="15" fill="rgb(249,111,54)" fg:x="7492953324" fg:w="4685217"/><text x="100.0776%" y="1359.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (8,714,054 samples, 0.12%)</title><rect x="99.8276%" y="1413" width="0.1161%" height="15" fill="rgb(249,55,30)" fg:x="7492953324" fg:w="8714054"/><text x="100.0776%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8,714,054 samples, 0.12%)</title><rect x="99.8276%" y="1397" width="0.1161%" height="15" fill="rgb(237,47,42)" fg:x="7492953324" fg:w="8714054"/><text x="100.0776%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (8,714,054 samples, 0.12%)</title><rect x="99.8276%" y="1381" width="0.1161%" height="15" fill="rgb(211,20,18)" fg:x="7492953324" fg:w="8714054"/><text x="100.0776%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (8,714,054 samples, 0.12%)</title><rect x="99.8276%" y="1365" width="0.1161%" height="15" fill="rgb(231,203,46)" fg:x="7492953324" fg:w="8714054"/><text x="100.0776%" y="1375.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (4,028,837 samples, 0.05%)</title><rect x="99.8900%" y="1349" width="0.0537%" height="15" fill="rgb(237,142,3)" fg:x="7497638541" fg:w="4028837"/><text x="100.1400%" y="1359.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (4,028,837 samples, 0.05%)</title><rect x="99.8900%" y="1333" width="0.0537%" height="15" fill="rgb(241,107,1)" fg:x="7497638541" fg:w="4028837"/><text x="100.1400%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (4,028,837 samples, 0.05%)</title><rect x="99.8900%" y="1317" width="0.0537%" height="15" fill="rgb(229,83,13)" fg:x="7497638541" fg:w="4028837"/><text x="100.1400%" y="1327.50"></text></g><g><title>core::intrinsics::unlikely (4,028,837 samples, 0.05%)</title><rect x="99.8900%" y="1301" width="0.0537%" height="15" fill="rgb(241,91,40)" fg:x="7497638541" fg:w="4028837"/><text x="100.1400%" y="1311.50"></text></g><g><title>__libc_start_main@@GLIBC_2.34 (7,501,280,356 samples, 99.94%)</title><rect x="0.0535%" y="1781" width="99.9385%" height="15" fill="rgb(225,3,45)" fg:x="4011963" fg:w="7501280356"/><text x="0.3035%" y="1791.50">__libc_start_main@@GLIBC_2.34</text></g><g><title>__libc_start_call_main (7,501,280,356 samples, 99.94%)</title><rect x="0.0535%" y="1765" width="99.9385%" height="15" fill="rgb(244,223,14)" fg:x="4011963" fg:w="7501280356"/><text x="0.3035%" y="1775.50">__libc_start_call_main</text></g><g><title>main (7,501,280,356 samples, 99.94%)</title><rect x="0.0535%" y="1749" width="99.9385%" height="15" fill="rgb(224,124,37)" fg:x="4011963" fg:w="7501280356"/><text x="0.3035%" y="1759.50">main</text></g><g><title>std::rt::lang_start_internal (7,501,280,356 samples, 99.94%)</title><rect x="0.0535%" y="1733" width="99.9385%" height="15" fill="rgb(251,171,30)" fg:x="4011963" fg:w="7501280356"/><text x="0.3035%" y="1743.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (7,501,280,356 samples, 99.94%)</title><rect x="0.0535%" y="1717" width="99.9385%" height="15" fill="rgb(236,46,54)" fg:x="4011963" fg:w="7501280356"/><text x="0.3035%" y="1727.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (7,501,280,356 samples, 99.94%)</title><rect x="0.0535%" y="1701" width="99.9385%" height="15" fill="rgb(245,213,5)" fg:x="4011963" fg:w="7501280356"/><text x="0.3035%" y="1711.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (7,501,280,356 samples, 99.94%)</title><rect x="0.0535%" y="1685" width="99.9385%" height="15" fill="rgb(230,144,27)" fg:x="4011963" fg:w="7501280356"/><text x="0.3035%" y="1695.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (7,501,280,356 samples, 99.94%)</title><rect x="0.0535%" y="1669" width="99.9385%" height="15" fill="rgb(220,86,6)" fg:x="4011963" fg:w="7501280356"/><text x="0.3035%" y="1679.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (7,501,280,356 samples, 99.94%)</title><rect x="0.0535%" y="1653" width="99.9385%" height="15" fill="rgb(240,20,13)" fg:x="4011963" fg:w="7501280356"/><text x="0.3035%" y="1663.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (7,501,280,356 samples, 99.94%)</title><rect x="0.0535%" y="1637" width="99.9385%" height="15" fill="rgb(217,89,34)" fg:x="4011963" fg:w="7501280356"/><text x="0.3035%" y="1647.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (7,501,280,356 samples, 99.94%)</title><rect x="0.0535%" y="1621" width="99.9385%" height="15" fill="rgb(229,13,5)" fg:x="4011963" fg:w="7501280356"/><text x="0.3035%" y="1631.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (7,501,280,356 samples, 99.94%)</title><rect x="0.0535%" y="1605" width="99.9385%" height="15" fill="rgb(244,67,35)" fg:x="4011963" fg:w="7501280356"/><text x="0.3035%" y="1615.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (7,501,280,356 samples, 99.94%)</title><rect x="0.0535%" y="1589" width="99.9385%" height="15" fill="rgb(221,40,2)" fg:x="4011963" fg:w="7501280356"/><text x="0.3035%" y="1599.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (7,501,280,356 samples, 99.94%)</title><rect x="0.0535%" y="1573" width="99.9385%" height="15" fill="rgb(237,157,21)" fg:x="4011963" fg:w="7501280356"/><text x="0.3035%" y="1583.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (7,501,280,356 samples, 99.94%)</title><rect x="0.0535%" y="1557" width="99.9385%" height="15" fill="rgb(222,94,11)" fg:x="4011963" fg:w="7501280356"/><text x="0.3035%" y="1567.50">core::ops::function::FnOnce::call_once</text></g><g><title>searchclient_rust::main (7,501,280,356 samples, 99.94%)</title><rect x="0.0535%" y="1541" width="99.9385%" height="15" fill="rgb(249,113,6)" fg:x="4011963" fg:w="7501280356"/><text x="0.3035%" y="1551.50">searchclient_rust::main</text></g><g><title>searchclient_rust::search (7,501,236,568 samples, 99.94%)</title><rect x="0.0540%" y="1525" width="99.9379%" height="15" fill="rgb(238,137,36)" fg:x="4055751" fg:w="7501236568"/><text x="0.3040%" y="1535.50">searchclient_rust::search</text></g><g><title>searchclient_rust::graph_search::GraphSearch::search (7,501,236,568 samples, 99.94%)</title><rect x="0.0540%" y="1509" width="99.9379%" height="15" fill="rgb(210,102,26)" fg:x="4055751" fg:w="7501236568"/><text x="0.3040%" y="1519.50">searchclient_rust::graph_search::GraphSearch::search</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (12,338,995 samples, 0.16%)</title><rect x="99.8276%" y="1493" width="0.1644%" height="15" fill="rgb(218,30,30)" fg:x="7492953324" fg:w="12338995"/><text x="100.0776%" y="1503.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (12,338,995 samples, 0.16%)</title><rect x="99.8276%" y="1477" width="0.1644%" height="15" fill="rgb(214,67,26)" fg:x="7492953324" fg:w="12338995"/><text x="100.0776%" y="1487.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (12,338,995 samples, 0.16%)</title><rect x="99.8276%" y="1461" width="0.1644%" height="15" fill="rgb(251,9,53)" fg:x="7492953324" fg:w="12338995"/><text x="100.0776%" y="1471.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (12,338,995 samples, 0.16%)</title><rect x="99.8276%" y="1445" width="0.1644%" height="15" fill="rgb(228,204,25)" fg:x="7492953324" fg:w="12338995"/><text x="100.0776%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (12,338,995 samples, 0.16%)</title><rect x="99.8276%" y="1429" width="0.1644%" height="15" fill="rgb(207,153,8)" fg:x="7492953324" fg:w="12338995"/><text x="100.0776%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (3,624,941 samples, 0.05%)</title><rect x="99.9437%" y="1413" width="0.0483%" height="15" fill="rgb(242,9,16)" fg:x="7501667378" fg:w="3624941"/><text x="100.1937%" y="1423.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_empty (3,624,941 samples, 0.05%)</title><rect x="99.9437%" y="1397" width="0.0483%" height="15" fill="rgb(217,211,10)" fg:x="7501667378" fg:w="3624941"/><text x="100.1937%" y="1407.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (3,624,941 samples, 0.05%)</title><rect x="99.9437%" y="1381" width="0.0483%" height="15" fill="rgb(219,228,52)" fg:x="7501667378" fg:w="3624941"/><text x="100.1937%" y="1391.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3,624,941 samples, 0.05%)</title><rect x="99.9437%" y="1365" width="0.0483%" height="15" fill="rgb(231,92,29)" fg:x="7501667378" fg:w="3624941"/><text x="100.1937%" y="1375.50"></text></g><g><title>all (7,505,895,140 samples, 100%)</title><rect x="0.0000%" y="1829" width="100.0000%" height="15" fill="rgb(232,8,23)" fg:x="0" fg:w="7505895140"/><text x="0.2500%" y="1839.50"></text></g><g><title>searchclient_ru (7,505,895,140 samples, 100.00%)</title><rect x="0.0000%" y="1813" width="100.0000%" height="15" fill="rgb(216,211,34)" fg:x="0" fg:w="7505895140"/><text x="0.2500%" y="1823.50">searchclient_ru</text></g><g><title>_start (7,501,883,179 samples, 99.95%)</title><rect x="0.0535%" y="1797" width="99.9465%" height="15" fill="rgb(236,151,0)" fg:x="4011961" fg:w="7501883179"/><text x="0.3035%" y="1807.50">_start</text></g></svg></svg>